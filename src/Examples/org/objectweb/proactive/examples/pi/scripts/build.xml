<?xml version="1.0" encoding="UTF-8"?>
<project name="ProActiveTutorial" default="usage" basedir=".">
	<property file="user.properties" />
	<property environment="env" />
	<property name="base" value=".." />
	<property name="src.dir" value="${base}" />
	<property name="proactive.dir" value="${base}/../../../../../../.." />
	<property name="classes.dir" value="${proactive.dir}/classes" />
	<property name="configfiles.dir" value="${proactive.dir}/classes/Examples/org/objectweb/proactive/examples/pi" />
	<property name="name" value="ProActiveTutorial" />
	<property name="debug" value="on" />
	<property name="source" value="1.5" />
	<!-- define the classpath -->
	<path id="tutorial.classpath">
		<pathelement location="${proactive.dir}/classes/Core"/>
		<pathelement location="${proactive.dir}/classes/Examples"/>
		<fileset dir="${proactive.dir}/lib">
			<include name="*.jar" />
			<include name="components/*.jar" />
		</fileset>
	</path>
	<path id="p2p.classpath">
		<pathelement location="${proactive.dir}/classes"/>
		<fileset dir="/net/proj/oasis/home/pkg/proactivep2p/java/lib">
			<include name="*.jar" />
		</fileset>
	</path>
	<!-- default target that displays usage -->
	<target name="usage">
		<echo message="" />
		<echo message="================- ${name} ==============" />
		<echo message="" />
		<echo message="Available targets are :" />
		<echo message="  ------------------------------" />
		<echo message="  compile : compile the program" />
		<echo message="  clean   : delete generated files" />
		<echo message="  run     : run the program" />
		<echo message="  mypi    : run your implementation of Pi" />
		<echo message="" />
		<echo message="==========================================" />
	</target>


	<!--
	   ================================================================
	   ==
      ==  INIT
      ==
      ================================================================
	-->
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${classes.dir}" />
		<echo message="--- Debugging is ${debug} ---" />
	</target>


	<!--
	   ================================================================
	   ==
      ==  COMPILE
      ==
      ================================================================
	-->
	<target name="configurationCopy">
		<copy toDir="${configfiles.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.xml"/>
				<include name="**/*.fractal"/>
			</fileset>
		</copy>
	</target>
	<target name="compile" depends="init, configurationCopy">
		<javac srcdir="${src.dir}" destdir="${classes.dir}/Examples" deprecation="on" source="${source}" debug="${debug}">
			<classpath refid="tutorial.classpath" />
			<include name="**/*.java" />
		</javac>
	</target>

	<target name="compileP2P" depends="init, configurationCopy">
		<javac srcdir="${src.dir}" destdir="${classes.dir}/Exmaples" deprecation="on" source="${source}" debug="${debug}">
			<classpath refid="p2p.classpath" />
			<include name="**/*.java" />
		</javac>
	</target>


	<!--
	   ================================================================
	   ==
      ==  CLEAN
      ==
      ================================================================
	-->
	<target name="clean" >
		<delete dir="${configfiles.dir}"/>
	</target>


	

	<!--
	   ================================================================
	   ==
      ==  RUN
      ==
      ================================================================
	-->


        <target name="webservice" depends="compile"> 
          <echo message="Make accessible Pi computation by web services" />
              <java classname="org.objectweb.proactive.examples.pi.PiBBP" fork="true">
			<classpath refid="tutorial.classpath"/>
			<jvmarg value="-Djava.security.policy=${proactive.dir}/scripts/proactive.java.policy"/>
			<jvmarg value="-Dlog4j.configuration=file:${proactive.dir}/scripts/proactive-log4j"/>
			<jvmarg value="-Dproactive.configuration=file:${base}/config/ProActiveConfigurationWS.xml"/>
		</java>

	</target>

<target name="webserver">
<exec executable="${base}/webserver/bin/startup.sh" >
</exec>
</target>

<target name="shutdownWebserver">
<exec executable="${base}/webserver/bin/shutdown.sh" >
</exec>
</target>
	<target name="run" depends="compile">
		<echo message="This programs evaluates Pi using the Bailey-Borwein-Plouffe formula." />
		<property name="default-nb-decimals" value="10000" />
		<echo message="Choose the number of decimals to compute." />
		<echo message="default : ${default-nb-decimals}" />
		<input message="? " addproperty="nb-decimals" defaultvalue="${default-nb-decimals}" />

		<echo message="Which run method in PiBBP? Choices are :" />
		<echo message="1 : runSimple()" />
		<echo message="2 : runParallel()" />
		<echo message="3 : runParallelDistributed()" />
		<echo message="4 : runComponent()"/>
		<echo message="default : runParallelDistributed()" />
		<input message="? " addproperty="run-mode" defaultvalue="3" />

		<echo message="Selection of the deployment. Choices are :" />
		<echo message="0 : no deployment" />
		<echo message="1 : localhost deployment" />
		<echo message="2 : LAN deployment" />
		<echo message="3 : P2P Infra-Inria nodes acquisition" />
		<echo message="4 : INRIA cluster deployment" />
		<echo message="5 : On-the-fly deployment"/>
		<echo message="6 : Custom deployment descriptor" />
		<echo message="default : localhost deployment" />
		<input message="? " addproperty="deployment" defaultvalue="1" />
		
		<condition property="isP2P">
			<equals arg1="${deployment}" arg2="3" />
		</condition>
		<condition property="isOnTheFly">
			<equals arg1="${deployment}" arg2="5" />
		</condition>
		<condition property="isNormal">
			<and>
				<not>
					<equals arg1="${deployment}" arg2="3" />
				</not>
				<not>
					<equals arg1="${deployment}" arg2="5" />
				</not>
			</and>
		</condition>
		
		<antcall target="p2p" />
		<antcall target="normal" />
		<antcall target="onthefly" />
	</target>

	<target name="normal" if="isNormal">
		<property name="classpath" refid="tutorial.classpath" />
		<java classname="org.objectweb.proactive.examples.pi.PiBBP" fork="true">
			<classpath refid="tutorial.classpath" />
			<jvmarg value="-Djava.security.policy=${proactive.dir}/scripts/proactive.java.policy" />
			<jvmarg value="-Dlog4j.configuration=file:${proactive.dir}/compile/proactive-log4j" />
			<!--<jvmarg value="-Dproactive.configuration=file:${base}/config/proactive-config.xml" /> -->
			<arg value="${nb-decimals}" />
			<arg value="${run-mode}" />
			<arg value="${deployment}" />
		</java>
	</target>

	<target name="p2p" if="isP2P">
		<antcall target="clean"/>
		<antcall target="compileP2P" />
		<java classname="org.objectweb.proactive.examples.pi.PiBBP" fork="true">
			<classpath refid="p2p.classpath" />
			<jvmarg value="-Djava.security.policy=${proactive.dir}/scripts/proactive.java.policy" />
			<jvmarg value="-Dlog4j.configuration=file:${proactive.dir}/scripts/proactive-log4j" />
			<jvmarg value="-Dproactive.configuration=file:${base}/config/proactive-config-p2p.xml" />
			<arg value="${nb-decimals}" />
			<arg value="${run-mode}" />
			<arg value="${deployment}" />
		</java>
	</target>

	<target name="onthefly" if="isOnTheFly">
		<antcall target="clean"/>
		<antcall target="compile"/>
		<property name="descriptor"  value="../onthefly/descriptor.xml" />
		<java classname="org.objectweb.proactive.examples.pi.MyPiSolved" fork="yes">
			<classpath refid="tutorial.classpath" />
			<jvmarg value="-Dproactive.dir=${proactive.dir}" />
			<jvmarg value="-Djava.security.policy=${proactive.dir}/scripts/proactive.java.policy" />
			<jvmarg value="-Dlog4j.configuration=file:../onthefly/proactive-log4j" />
			<jvmarg value="-Dproactive.configuration=file:${base}/config/proactive-config.xml" />
			<jvmarg value="-Dproactive.rmi.port=3012" />
			<arg value="${nb-decimals}" />
			<arg value="${descriptor}" />
		</java>
	</target>
	
	<target name="mypi">
		<antcall target="clean"/>
		<antcall target="compile"/>
		<property name="decimals"  value="10" />
		<property name="descriptor"  value="../descriptors/localhost.xml" />
		<java classname="org.objectweb.proactive.examples.pi.MyPi" fork="true">
			<classpath refid="tutorial.classpath" />
			<jvmarg value="-Djava.security.policy=${proactive.dir}/scripts/proactive.java.policy" />
			<jvmarg value="-Dlog4j.configuration=file:${proactive.dir}/scripts/proactive-log4j" />
			<jvmarg value="-Dproactive.configuration=file:${base}/config/proactive-config.xml" />
			<arg value="${decimals}" />
			<arg value="${descriptor}" />
		</java>
	</target>
	
</project>
