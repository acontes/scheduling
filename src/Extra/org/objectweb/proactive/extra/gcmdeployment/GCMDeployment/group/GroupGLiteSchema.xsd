<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="urn:gcm:deployment:1.0"
	xmlns="urn:gcm:deployment:1.0"
	elementFormDefault="qualified">
	
	<xs:include schemaLocation="../../schema/DeploymentDescriptorSchema.xsd"/>	
	
	<xs:complexType name="gLiteGroupType">
		<xs:complexContent>
			<xs:extension base="abstractGroupElementType">
				<xs:sequence>
				  
				    <!-- MUST INCLUDE MANDATORY JAVA_HOME and PROACTIVE_HOME -->
				
					<xs:element name="rank" type="gLiteRankType"  minOccurs="1"/>
					<!-- Environments variables that must be set before executing job -->
					<xs:element name="gliteEnv" type="xs:string" minOccurs="0" />
					
				    <!-- Std IN/OUT. Obs. stdin must be on inputSandbox -->
				    <xs:element name="stdout" type="pathElementGeneralType" minOccurs="0" />
					<xs:element name="stderr" type="pathElementGeneralType" minOccurs="0" />
					<xs:element name="stdin" type="pathElementGeneralType" minOccurs="0" />
				    
				    <!-- Files to be sent to CEs and retrieved as results -->
				    <xs:element name="inputSandbox" type="TextOrVariableType" minOccurs="0" />
					<xs:element name="outputSandbox" type="TextOrVariableType" minOccurs="0" />
					
					<!-- Time to expire jobs (in seconds since epoch): default=24h -->
					<xs:element name="expiryTime" type="PosintOrVariableType" minOccurs="0" />
					
					<!-- Glue Schema requirements for resources. Obs. requires logical expression using && and ||  -->
					<xs:element name="requirements" type="xs:string" minOccurs="0" />
					
					<!-- Classads representings  data requirements for a job-->
					<xs:element name="dataRequirements" type="gLiteInputDataType" minOccurs="0" />
				
					<!-- Content for the "vomses" file -->	
					<xs:element name="configFile" type="pathElementGeneralType" minOccurs="0" />
				
					<!-- URL of the storage element for output data  -->
					<xs:element name="outputse" type="xs:string" minOccurs="0" />
					
					<!-- Application-related Runtime's parameters, java properties --> 
				    <xs:element name="arguments" type="pathElementGeneralType" minOccurs="0" />
					
				</xs:sequence>
				
				<!-- VO name -->
				<xs:attribute name="virtualOrganisation" type="xs:string" use="optional" default="proactive"  />
				
				<xs:attribute name="proactiveHome" type="xs:string" use="required"/>
				
				<xs:attribute name="javaHome" type="xs:string" use="required"/>
				
				<!-- proxy server were stores long-term proxy certificate -->
				<xs:attribute name="myProxyServer" type="xs:string" use="optional"/>
				
				<!-- single, multiple, parallel or native -->
				<xs:attribute name="jobType" use="required">
				<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="single" />
							<xs:enumeration value="multiple" />
							<xs:enumeration value="parallel" />
							<xs:enumeration value="native" />
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				
				<!-- number of nodes, for parallel or multiple jobs -->
				<xs:attribute name="nodesNumber" type="PosintOrVariableType" default="1" />
				
				<!-- executable to be run by the job -->
				<xs:attribute name="executable" type="xs:string" default="/bin/sh" />
				
				<!-- number of retries in case of glite components errors -->
				<xs:attribute name="retryCount" type="xs:string"  default="3"/>
				
				<!-- file to output jobID -->
				<xs:attribute name="outputFile" type="xs:string" default="ProActive_JobID"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>


	<!--gLiteRankType-->
	<xs:complexType name="gLiteRankType">
		<xs:simpleContent>
			<xs:extension base="TextOrVariableType">
				<!-- find the best match -->
				<xs:attribute name="fuzzyrank" type="BooleanOrVariableType" default="false" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	<!--gLiteInputDataType-->
	<xs:complexType name="gLiteInputDataType">
		<!-- string or list of strings representing the LFNs(Logical File Names) -->
		<xs:attribute name="inputData" type="xs:string" />
		<!-- RLS(LCG Replica Location Service - lfn,guid), SI(Glite Storage Index - lfn,guid) or DLI(LCG Data Location Interface- lfn,guid,lds,query) -->
		<xs:attribute name="dataCatalogType" type="xs:string" />
		<!-- Data catalog service endpoint URL -->
		<xs:attribute name="dataCatalog" type="xs:string" />
	</xs:complexType>

	<xs:element name="gLiteGroup" type="gLiteGroupType" substitutionGroup="abstractShElement"/>

</xs:schema>