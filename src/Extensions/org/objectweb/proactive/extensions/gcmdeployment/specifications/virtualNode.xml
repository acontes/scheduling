<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"?>
<article xmlns="http://docbook.org/ns/docbook" version="5.0">
    <info>
        <title>Virtual Node Specification</title>
        <author>
            <personname>Clement MATHIEU</personname>
            <email>cmathieu@sophia.inria.fr</email>
        </author>
    </info>
    <sect1>
        <title>Introduction</title>
        <para>
            This document describes how
            ProActive Nodes are attached to ProActive Virtual Nodes.
        </para>
    </sect1>
    <sect1>
        <title>Glossary</title>
    <glossary>
        <title>Definitions</title>
        <glossentry>
            <glossterm>Node</glossterm>
            <glossdef>
                <para>
                    A location to execute a computation. By default a Node is created for each CPU
                    reported by a Java Runtime.
                </para>
            </glossdef>
        </glossentry>
        <glossentry>
            <glossterm>Virtual Node</glossterm>
            <acronym>VN</acronym>
            <glossdef>
                <para>
                    A set of Nodes. A Virtual Node is an abstraction for deploying parallel and
                    distributed applications. Nodes are attached to Virtual Nodes by the Node
                    Allocator. A set of Node Provider is attached to each Virtual Node. Only Nodes
                    from theses Node Providers are elligible. If the set is empty then any Node can
                    be attached to the Virtual Node.
                </para>
            </glossdef>
        </glossentry>
        <glossentry>
            <glossterm>Node Allocator</glossterm>
            <acronym>NA</acronym>
            <glossdef>
                <para>
                    The object in charge of Node attachment
                </para>
            </glossdef>
        </glossentry>
        <glossentry>
            <glossterm>Node Provider</glossterm>
            <glossdef>
                <para>
                    A GCM Deployment Descriptor instance.
                </para>
                <para>
                    A Node Provider acquires the resources described inside a GCM Deployment
                    Descriptor and creates Node on them as described. When a Node is ready, the Node
                    Provider send it to the ProActive Runtime who started the deployment. Each GCM
                    Deployment Descriptor has its own Node Provider.
                </para>
            </glossdef>
        </glossentry>
        <glossentry>
            <glossterm>Node Provider Contract</glossterm>
            <acronym>NPC</acronym>
            <glossdef>
                <para>
                    A Contract between a Node Provider and a Virtual Node on the amount of Node to
                    be provided by the Node Provider to the Virtual Node.
                </para>
            </glossdef>
        </glossentry>
        <glossentry>
            <glossterm>Capacity</glossterm>
            <glossdef>
                <para>
                    The number of Nodes asked by a Virtual Node or a Node Provider
                </para>
            </glossdef>
        </glossentry>
        <glossentry>
            <glossterm>Greedy</glossterm>
            <glossdef>
                <para>
                    A Virtual Node or a Node Provider Contract is Greedy when not Capacity is
                    defined. Such object will try to get as many Nodes as possible.</para>
            </glossdef>
        </glossentry>
        <glossentry>
            <glossterm>Ready</glossterm>
            <glossdef>
                <para>
                    A Virtual Node is Ready when its capacity and all its Node Provider Contracts
                    are satisfied.
                </para>
            </glossdef>
        </glossentry>
    </glossary>
    </sect1>
    <sect1>
        <title>XML Schema</title>
        <para>
            The following XML Schema describes valid Virtual Node declarations. It is extracted from
            the GCM Application Descriptor schema.
        </para>
        <para>
            <code>
                <![CDATA[
<complexType name="proactiveType">
    <complexContent>
        <extension base="pa:applicationNodeType">
            <sequence>
                <element name="virtualNode" type="pa:virtualNodeType" maxOccurs="unbounded">
                    <unique name="nodeProviderConstraint">
                        <selector xpath="pa:nodeProvider"/>
                        <field xpath="@refid"/>
                    </unique>
                </element>
            </sequence>
            <attribute name="relpath" type="pa:pathElementGeneralType" use="optional"></attribute>
        </extension>
    </complexContent>
</complexType>

<complexType name="virtualNodeType">
    <sequence>
        <element name="nodeProvider" minOccurs="0" maxOccurs="unbounded">
            <complexType>
                <attribute name="refid" type="pa:idType"/>
                <attribute name="capacity" type="pa:capacityType" />
            </complexType>
        </element>
    </sequence>
    <attribute name="id" type="string" use="required"/>
    <attribute name="capacity" type="pa:capacityType"/>
</complexType>
	
<simpleType name="capacityType">
    <restriction base="string">
        <pattern value="([0-9]+)"></pattern>
    </restriction>
</simpleType>
]]>
            </code>
        </para>
    </sect1>
    <sect1>
        <title>Node Allocator algorithms</title>
        <para>
            This section describes algorithms used by the Node Allocator to attach Node to Virtual
            Nodes
        </para>
        <para>
            The deployment mechanism CAN NOT ensure that a deployment will be able to fulfill GCM
            Application requirements (ex: If a Virtual Node wants 10 Nodes but the LAN described by
            a GCM Deployment Descriptor has only 8 Nodes). The deployment mechanism DOES NOT try to
            address this issue, it's up to the deployer the check that GCM Application Descriptor
            and GCM Deployment Descriptor are compatible. However, if a mapping exists the
            deployment mechanism MUST satisfy the requirements.
        </para>
        <orderedlist>
            <listitem>
                <para>
                    When a Node is created, it registers itself to the ProActive Runtime who started
                    the deployment.
                </para>
            </listitem>
            <listitem>
                <para>
                    Then Node Allocator is notified of the Node arrival. It will attach the Node to
                    a Virtual Node by using a 3 stages dispatching.
                </para>
            </listitem>
            <listitem>
                <para>
                    Stage 1 tries to satisfy a non Greedy Node Provider Contract. More formally, a
                    Node is attached by using the following algorithm:
                    <code>
                        <![CDATA[
foreach VN in VirtualNodes {
    if (VN.needNode() || VN.isGreedy()) {
        contract = VN.findNodeProviderContract(node.nodeProvider)
        if (contract != null && !contract.isGreedy() && contract.needNode()) {
            VN.attach(node)
            return;
        }
    }
}
    ]]>
                    </code>
                </para>
                <para>
                    If the Node has not been attached in Stage 1 then it is sent to Stage 2
                </para>
            </listitem>
            <listitem>
                <para>
                    Stage 2 tries to satisfy capacity of Virtual Nodes.
                </para>
                <para>
                    A Node is stage 2 can be offered to Virtual Node if and only if the following
                    condition is true:
                    <code>
                        <![CDATA[
foreach VN in VirtualNodes {
    if (VN.hasContractWith(node.nodeProvider && VN.hasUnsatisfiedContract()) {
        return false
    }
    return true
}
]]>
                    </code>
                </para>
                <para>
                    A Node remains in Stage 2 until the condition is true.
                </para>
                <para>
                    This condition prevent a deadlock in the case of a non Greedy Virtual Node with
                    both Greedy and non Greedy Node Provider Contracts. Greedy Node Provider
                    Contracts have to be satisfied before allowing Node attached from Greedy Node
                    Provider Contracts.
                </para>
                <para>
                    To decide if a Node can be attached to a Virtual Node in Stage 2 the following
                    algorithm is used:
                    <code>
                        <![CDATA[
 foreach VN in VirtualNodes {
     if (VN.needNode()) {
         contract = VN.findNodeProviderContract(node.nodeProvider)
        if (contract != null && contract.isGreedy()) {
            VN.attach(node)
        }            
     }
}
 ]]>
                    </code>
                </para>
                <para>
                    If the Node has not been attached in Stage 1 then it is sent to Stage 3
                </para>
            </listitem>
            <listitem>
                <para>
                    Stage 3 offers a Node to a Greedy Virtual Node
                </para>
                <para>
                    Since the Node was not attached by Stage 1 and Stage 2, the Node can be attached
                    to Greedy Virtual Node with a Greedy Node Provider Contract. The following
                    algorithm is used:
                    <code>
                        <![CDATA[
foreach VN in VirtualNodes {
    if (VN.isGreedy()) {
        contract = VN.findNodeProviderContract(node.nodeProvider)
        if (contract != null && contract.isGreedy()) {
            VN.attach(node)
            VirtualNodes.moveLast(VN)
    }
}
]]>
                    </code>
                </para>
                <para>
                    To ensure fairness in the Stage 3, a round robin if performed between Virtual
                    Nodes. Every Virtual Node eligible at Stage 3 must receive the same amount of
                    Stage 3 Nodes. Round robin is necessary only at Stage 3. Stage 1 and Stage 2 try
                    to satisfy finite requirements.
                </para>
            </listitem>
        </orderedlist>
    </sect1>
    <sect1>
        <title>Behavior specifications</title>
        <para>
            This section describes the expected behavior of ProActive when parsing a given XML
            snippet. The behavior of any valid XML snippet can be inferred from the following
            sections. If you find a way to describe an undefined behavior please send me an email.
        </para>
        <sect2>
            <title>Greedy Virtual Node</title>
            <para>
            <code>
                <![CDATA[
<virtualNode id="vn1" />          
                ]]>
            </code>
            </para>
            
            <itemizedlist>
                <listitem>
                    <para>
                        Greedy Virtual Node, no Capacity specified
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Nodes from any Node Provider can be attached to it
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Always Ready since Greedy and no requirements at Node Provider level
                    </para>
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>Virtual Node with defined capacity</title>
            <para>
            <code>
                <![CDATA[
<virtualNode id="vn1" capacity="X" />      
                ]]>
            </code>
                </para>
            <itemizedlist>
                <listitem>
                    <para>
                        Asks for X Nodes
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Nodes from any Node Provider can be attached to it
                    </para>
                </listitem>
               
                <listitem>
                    <para>
                        Is Ready when X Nodes are attached to it.
                        <note><para>If less than X Nodes were created by the deployment then it will never be Ready</para></note>
                    </para>
                    
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>Two Greedy Virtual Nodes</title>
            <para>
            <code>
                <![CDATA[
<virtualNode id="vn1" />
<virtualNode id="vn2" />                
                ]]>
            </code>
                </para>
            <itemizedlist>
                <listitem>
                    <para>
                        <varname>vn1</varname>
                        and
                        <varname>vn2</varname>
                        are Greedy Virtual Node
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Nodes from any Node Provider can be attached to them
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Always Ready since Greedy and no requirements at Node Provider level
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Nodes are attached to
                        <varname>vn1</varname>
                        and
                        <varname>vn2</varname>
                        by using a round robin algorithm.
                        <varname>vn1</varname>
                        and
                        <varname>vn2</varname>
                        will get the same number of Nodes</para>
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>Greedy Virtual Node with Greedy Node Provider Contract</title>
            <para>
            <code>
                <![CDATA[
<virtualNode id="vn1">
    <resourceProvider refid="NP1" />
</virtualNode>
                ]]>
            </code>
                </para>
            <itemizedlist>
                <listitem>
                    <para>
                        Greedy Virtual Node, no Capacity specified
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Only Nodes from
                        <varname>NP1</varname>
                        can be attached to
                        <varname>vn1</varname>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Always Ready since Greedy and the Node Provider Contract is Greedy too
                    </para>
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>Greedy Virtual Node with Node Provider</title>
            <para>
            <code>
                <![CDATA[
<virtualNode id="vn1">
    <resourceProvider refid="NP1" capacity="X" />
</virtualNode>
                ]]>
            </code>
                </para>
            <itemizedlist>
                <listitem>
                    <para>
                        Greedy Virtual Node, no Capacity specified
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Node Provider Contract between
                        <varname>vn1</varname>
                        and
                        <varname>NP1</varname>
                        with a Capacity of X
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Only X Nodes from
                        <varname>NP1</varname>
                        can be attached to
                        <varname>vn1</varname>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Since only one Node Provider is listed,
                        <varname>vn1</varname>
                        will not get more than X Nodes
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Is Ready when X Nodes from
                        <varname>NP1</varname>
                        are attached to it
                        <note>
                            <para>A Virtual Node is Ready when its Capacity requirement is fulfilled and
                            all Node Provider Contracts are also satisfied</para>
                        </note>
                    </para>
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>Virtual Node with a Greedy Node Provider Contract</title>
            <para>
            <code>
                <![CDATA[
<virtualNode id="vn1" capacity="X">
    <resourceProvider refid="NP1"/>
</virtualNode>	
                ]]>
            </code>
                </para>
            <itemizedlist>
                <listitem>
                    <para>
                        <varname>vn1</varname>asks for X Nodes
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Only Nodes from
                        <varname>NP1</varname>
                        can be attached to
                        <varname>vn1</varname>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Is Ready when X Nodes are attached to it.
                    </para>
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>Virtual Node with a Node Provider</title>
            <para>
            <code>
                <![CDATA[
<virtualNode id="vn1" capacity="X">
    <resourceProvider refid="NP1" capacity="Y"/>
</virtualNode>
                ]]>
            </code>
                </para>
            <itemizedlist>
                <listitem>
                    <para>
                        <varname>vn1</varname>asks for X Nodes
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Only Y Nodes from
                        <varname>NP1</varname>
                        can be attached to
                        <varname>vn1</varname>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Is Ready when X Nodes are attached to it and
                        <function>min(X, Y)</function>
                        node have been attached by
                        <varname>NP1</varname>
                        <note>
                            <para>If Y &lt; X then the Virtual Node cannot be ready</para>
                        </note>
                    </para>
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>Case</title>
            <para>
            <code>
                <![CDATA[
<virtualNode id="vn1" capacity="X">
    <resourceProvider refid="NP1" capacity="Y"/>
    <resourceProvider refid="NP1" capacity="Z"/>
</virtualNode>
                ]]>
            </code>
                </para>
            <para>
                Generalization of Use case 7 with X = Y + Z, X &lt; Y + Z and X &gt; Y + Z.
            </para>
            <para>
                vn1 is Ready when X Nodes have been sent to it.
            </para>
        </sect2>
        <sect2>
            <title>Virtual Node with several Greedy Node Providers</title>
            <para>
            <code>
                <![CDATA[
<virtualNode id="vn1" capacity="X">
    <resourceProvider refid="1">
    <resourceProvider refid="2">
</virtualNode>
                ]]>
            </code>
                </para>
            <itemizedlist>
                <listitem>
                    <para>
                        <varname>vn1</varname>
                        asks for X Nodes
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Only Nodes from
                        <varname>NP1</varname>
                        or
                        <varname>NP2</varname>
                        can be attached to
                        <varname>vn1</varname>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Is Ready when X Nodes are attached
                    </para>
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>Greedy Virtual Node with Greedy and non Greedy Node Providers</title>
            <para>
            <code>
                <![CDATA[
<virtualNode id="vn1">
    <resourceProvider refid="1" capacity="Y" />
    <resourceProvider refid="2" capacity="Z" />
    <resourceProvider refid="3" />
</virtualNode>
                ]]>
            </code>
                </para>
            <itemizedlist>
                <listitem>
                    <para>
                        Greedy Virtual Node, no Capacity specified
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Only Nodes from
                        <varname>NP1</varname>,
                        <varname>NP2</varname>
                        or
                        <varname>NP3</varname>
                        can be attached
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Only Y Nodes from
                        <varname>NP1</varname>
                        can be attached
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Only Z Nodes from
                        <varname>NP2</varname>
                        can be attached
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Is Ready when Y Nodes from
                        <varname>NP1</varname>
                        and Z Nodes from
                        <varname>NP2</varname>
                        have been attached to it
                        <note>
                            <para>Since the Virtual Node is Greedy nodes from NP3 can be attached as
                            soon as they arrive</para>
                        </note>
                    </para>
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>Virtual Node with Greedy and non Greedy Node Providers</title>
            <para>
            <code>
                <![CDATA[
<virtualNode id="vn1" capacity="X">
    <resourceProvider refid="1" capacity="Y" />
    <resourceProvider refid="2" capacity="Z" />
    <resourceProvider refid="3" />
</virtualNode>
                ]]>
            </code>
                </para>
            <itemizedlist>
                <listitem>
                    <para>
                        <varname>vn1</varname>
                        asks for X Nodes
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Only Nodes from
                        <varname>NP1</varname>,
                        <varname>NP2</varname>
                        or
                        <varname>NP3</varname>
                        can be attached
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Only Y Nodes from
                        <varname>NP1</varname>
                        can be attached
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Only Z Nodes from
                        <varname>NP2</varname>
                        can be attached
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Is Ready when X Nodes are attached and Y Nodes from
                        <varname>NP1</varname>
                        and Z Nodes from
                        <varname>NP2</varname>
                        have been attached to it
                        <note>
                            <para>Nodes from NP3 have to wait that NP1 and NP2 requirements are
                            satisfied before to be attached to vn1</para>
                        </note>
                    </para>
                </listitem>
            </itemizedlist>
        </sect2>
    </sect1>
    <sect1>
        <title>Use cases</title>
        <sect2>
            <title>Simple Master/Worker</title>
            <para></para>
        </sect2>
        <sect2>
            <title>Advanced Master/Worker</title>
            <para></para>
        </sect2>
        <sect2>
            <title>Hierarchical Master/Worker</title>
            <para>
                In this use case we have several
                <glossterm/>Node Providers
            </para>
            <para>
                <code>
                <![CDATA[
             <virtualNode id="masters">
    <resourceProvider refid="1" capacity="1"/>
    <resourceProvider refid="2" capacity="1"/>
    <resourceProvider refid="3" capacity="1"/>
    </virtualNode>
    <virtualNode id="workers">
    <resourceProvider refid="1" />
    <resourceProvider refid="2" />
    <resourceProvider refid="3" />
    </virtualNode>	
            
            ]]>
                </code>
                </para>
        </sect2>
    </sect1>
    
</article>