<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v2004 rel. 4 U (http://www.xmlspy.com) by Quilici (Inria) -->
<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<!-- 
The following element ProActiveDescriptor defines the root of the schema
-->
	<xs:element name="ProActiveDescriptor" type="ProActiveDescriptorType">
		<xs:annotation>
			<xs:documentation>Deployment Descriptor Schema</xs:documentation>
		</xs:annotation>
		<xs:unique name="mainId">
			<xs:selector xpath="mainDefinition" />
			<xs:field xpath="id" />
		</xs:unique>
		<xs:unique name="processDefid">
			<xs:selector xpath="infrastructure/processes/processDefinition" />
			<xs:field xpath="@id" />
			<!--Uniqueness of the id attribute for infrastructure/processes/processDefinition element-->
		</xs:unique>
		<xs:unique name="serviceDefid">
			<xs:selector xpath="infrastructure/services/serviceDefinition" />
			<xs:field xpath="@id" />
			<!--Uniqueness of the id attribute for infrastructure/services/serviceDefinition element-->
		</xs:unique>
		<xs:unique name="filetransferDefid">
			<xs:selector xpath="fileTransferDefinitions/fileTransfer" />
			<xs:field xpath="@id" />
			<!--Uniqueness of the id attribute for FileTransferDefinitions/FileTransfer element-->
		</xs:unique>
		<xs:unique name="MapToVirtualNodeDefid">
			<xs:selector xpath="mainDefinition/mapToVirtualNode" />
			<xs:field xpath="@value" />
		</xs:unique>
		<xs:keyref name="MapToVirtualNodeValue" refer="MapToVNName">
			<xs:selector xpath="mainDefinition/mapToVirtualNode" />
			<xs:field xpath="@value" />
		</xs:keyref>
		<xs:keyref name="VirtNodeName" refer="vnName">
			<xs:selector xpath="componentDefinition/virtualNodesDefinition/virtualNode" />
			<xs:field xpath="@name" />
		</xs:keyref>
		<xs:keyref name="VirtNodeDeployFileTransfer" refer="filetransferid">
			<xs:selector xpath="componentDefinition/virtualNodesDefinition/virtualNode" />
			<xs:field xpath="@fileTransferDeploy" />
		</xs:keyref>
		<xs:keyref name="VirtNodeRetrieveFileTransfer" refer="filetransferid">
			<xs:selector xpath="componentDefinition/virtualNodesDefinition/virtualNode" />
			<xs:field xpath="@fileTransferRetrieve" />
		</xs:keyref>
		<xs:keyref name="vnFtServiceId" refer="serviceid">
			<xs:selector xpath="componentDefinition/virtualNodesDefinition/virtualNode" />
			<xs:field xpath="@ftServiceId" />
		</xs:keyref>
		<xs:keyref name="vnNameinAcquisitionPart" refer="virtualNodeNameForLookup">
			<xs:selector xpath="componentDefinition/virtualNodesAcquisition/virtualNode" />
			<xs:field xpath="@name" />
			<!--This section references the virtualNodeNameForLookup key defined above to ensure that the value of attribute name in virtualNodeAcquisition/virtualNode element will have the corresponding definition in deployment/lookup@virtualNode -->
		</xs:keyref>
		<xs:keyref name="vnNameinRegisterPart" refer="virtualNodeDefinitionName">
			<xs:selector xpath="deployment/register" />
			<xs:field xpath="@virtualNode" />
			<!--This section references the virtualNodeDefinitionName key defined above to ensure that the virtualNode attribute of element register has a corresponding value defined in attribute name of  componentDefinition/virtualNodesDefinition/virtualNode-->
		</xs:keyref>
		<xs:keyref name="vmNameinMappingPart" refer="jvmNameinJvmsPart">
			<xs:selector xpath="deployment/mapping/map/jvmSet/vmName" />
			<xs:field xpath="@value" />
			<!--This section references the jvmNameinJvmsPart key defined above to ensure that the value attribute of element mapping/map/jvmSet/vmName has a corresponding value defined in attribute name of  jvms/jvm-->
		</xs:keyref>
		<xs:keyref name="vnNameinLookupPart" refer="virtualNodeAcquisitionName">
			<xs:selector xpath="deployment/lookup" />
			<xs:field xpath="@virtualNode" />
			<!--This section references the virtualNodeAcquisitionName key defined above to ensure that the virtualNode attribute of element lookup  has a corresponding value defined in attribute name of  componentDefinition/virtualNodesAcquisition/virtualNode-->
		</xs:keyref>
		<xs:keyref name="jvmReferenceid" refer="processid">
			<xs:selector xpath="infrastructure/processes/processDefinition/jvmProcess/extendedJvm" />
			<xs:field xpath="@refid" />
			<!-- This section references the processid key reference defined above to ensure that the refid attribute defined in deployment/jvms/jvm/creation/ has a correponding value in infrastructure/processes/processDefinition@id-->
		</xs:keyref>
		<xs:keyref name="processReferenceid" refer="processid">
			<xs:selector xpath="deployment/jvms/jvm/creation/processReference" />
			<xs:field xpath="@refid" />
			<!-- This section references the processid key reference defined above to ensure that the refid attribute defined in deployment/jvms/jvm/creation/ has a correponding value in infrastructure/processes/processDefinition@id-->
		</xs:keyref>
		<xs:keyref name="serviceReferenceid" refer="serviceid">
			<xs:selector xpath="deployment/jvms/jvm/acquisition/serviceReference" />
			<xs:field xpath="@refid" />
			<!-- This section references the serviceid key reference defined above to ensure that the refid attribute defined in deployment/jvms/jvm/acquisition/ has a correponding value in infrastructure/services/serviceDefinition@id-->
		</xs:keyref>
		<xs:keyref name="processListReferenceid" refer="processid">
			<xs:selector xpath="infrastructure/processes/processDefinition/processList/processReference" />
			<xs:field xpath="@refid" />
			<!--This section references the processid key defined above to ensure that the refid attribute defined in  processes/processDefinition/processList/processReference has a corresponding value in infrastructure/processes/processDefinition@id-->
		</xs:keyref>
		<xs:keyref name="processListbyHostReferenceid" refer="processid">
			<xs:selector xpath="infrastructure/processes/processDefinition/processListbyHost/processReference" />
			<xs:field xpath="@refid" />
			<!--This section references the processid key defined above to ensure that the refid attribute defined in  processes/processDefinition/processListbyHost/processReference has a corresponding value in infrastructure/processes/processDefinition@id-->
		</xs:keyref>
		<xs:keyref name="rshprocessReferenceid" refer="processid">
			<xs:selector xpath="infrastructure/processes/processDefinition/rshProcess/processReference" />
			<xs:field xpath="@refid" />
			<!--This section references the processid key defined above to ensure that the refid attribute defined in  processes/processDefinition/rshProcess/processReference has a corresponding value in infrastructure/processes/processDefinition@id-->
		</xs:keyref>
		<xs:keyref name="MapRshprocessReferenceid" refer="processid">
			<xs:selector xpath="infrastructure/processes/processDefinition/maprshProcess/processReference" />
			<xs:field xpath="@refid" />
			<!--This section references the processid key defined above to ensure that the refid attribute defined in  processes/processDefinition/maprshProcess/processReference has a corresponding value in infrastructure/processes/processDefinition@id-->
		</xs:keyref>
		<xs:keyref name="sshprocessReferenceid" refer="processid">
			<xs:selector xpath="infrastructure/processes/processDefinition/sshProcess/processReference" />
			<xs:field xpath="@refid" />
			<!--This sectionreferences the processid key defined above to ensure that the refid attribute defined in  processes/processDefinition/sshProcess/processReference has a corresponding value in infrastructure/processes/processDefinition@id-->
		</xs:keyref>
		<xs:keyref name="rloginprocessReferenceid" refer="processid">
			<xs:selector xpath="infrastructure/processes/processDefinition/rloginProcess/processReference" />
			<xs:field xpath="@refid" />
			<!--This section references the processid key defined above to ensure that the refid attribute defined in  processes/processDefinition/rloginProcess/processReference has a corresponding value in infrastructure/processes/processDefinition@id-->
		</xs:keyref>
		<xs:keyref name="bsubprocessReferenceid" refer="processid">
			<xs:selector xpath="infrastructure/processes/processDefinition/bsubProcess/processReference" />
			<xs:field xpath="@refid" />
			<!--This section references the processid key defined above to ensure that the refid attribute defined in  processes/processDefinition/bsubProcess/processReference has a corresponding value in infrastructure/processes/processDefinition@id-->
		</xs:keyref>
		<xs:keyref name="globusprocessReferenceid" refer="processid">
			<xs:selector xpath="infrastructure/processes/processDefinition/globusProcess/processReference" />
			<xs:field xpath="@refid" />
			<!--This section references the processid key defined above to ensure that the refid attribute defined in  processes/processDefinition/globusProcess/processReference has a corresponding value in infrastructure/processes/processDefinition@id-->
		</xs:keyref>
		<xs:keyref name="unicoreprocessReferenceid" refer="processid">
			<xs:selector xpath="infrastructure/processes/processDefinition/unicoreProcess/processReference" />
			<xs:field xpath="@refid" />
			<!--This section references the processid key defined above to ensure that the refid attribute defined in  processes/processDefinition/unicoreProcess/processReference has a corresponding value in infrastructure/processes/processDefinition@id-->
		</xs:keyref>
		<xs:keyref name="hierarchicalprocessProcessReferenceid" refer="processid">
			<xs:selector xpath="infrastructure/processes/processDefinition/hierarchicalProcess/processReference" />
			<xs:field xpath="@refid" />
			<!--This section references the processid key defined above to ensure that the refid attribute defined in  processes/processDefinition/hierarchicalProcess/processReference has a corresponding value in infrastructure/processes/processDefinition@id-->
		</xs:keyref>
		<xs:keyref name="hierarchicalprocessHierarchicalReferenceid" refer="processid">
			<xs:selector xpath="infrastructure/processes/processDefinition/hierarchicalProcess/hierarchicalReference" />
			<xs:field xpath="@refid" />
			<!--This section references the processid key defined above to ensure that the refid attribute defined in  processes/processDefinition/hierarchicalProcess/hierarchicalReference has a corresponding value in infrastructure/processes/processDefinition@id-->
		</xs:keyref>
		<xs:key name="virtualNodeDefinitionName">
			<xs:selector xpath="componentDefinition/virtualNodesDefinition/virtualNode" />
			<xs:field xpath="@name" />
			<!-- Key definition for the attribute name located at componentDefinition/virtualNodesDefinition/virtualNode. This key will be used to ensure that the virtualNode attribute of deployment/register element has a corresponding definition in componentDefinition/virtualNodesDefinition/virtualNode@name-->
		</xs:key>
		<xs:key name="virtualNodeAcquisitionName">
			<xs:selector xpath="componentDefinition/virtualNodesAcquisition/virtualNode" />
			<xs:field xpath="@name" />
			<!-- Key definition for the attribute name located at componentDefinition/virtualNodesAcquisition/virtualNode. This key will be used to ensure that the virtualNode attribute of deployment/lookup element has a corresponding definition in componentDefinition/virtualNodesAcquisition/virtualNode@name-->
		</xs:key>
		<xs:key name="vnName">
			<xs:selector xpath="deployment/mapping/map" />
			<xs:field xpath="@virtualNode" />
			<!-- Key definition for the attribute virtualNode located at deployment/mapping/map. This key will be used to ensure that the name attribute of virtualNodes/virtualNode element has a corresponding definition in deployment/mapping/map@virtualNode-->
		</xs:key>
		<xs:key name="MapToVNName">
			<xs:selector xpath="componentDefinition/virtualNodesDefinition/virtualNode" />
			<xs:field xpath="@name" />
			<!-- Key definition for the attribute virtualNode located at deployment/mapping/map. This key will be used to ensure that the name attribute of virtualNodes/virtualNode element has a corresponding definition in deployment/mapping/map@virtualNode-->
		</xs:key>
		<xs:key name="jvmNameinJvmsPart">
			<xs:selector xpath="deployment/jvms/jvm" />
			<xs:field xpath="@name" />
			<!--Key definition for the attribute name located at deployment/jvms/jvm. This key will be used to ensure that the value attribute of deployment/mapping/map/jvmSet/vmName element has a corresponding value defined in attribue name of jvms/jvm  -->
		</xs:key>
		<xs:key name="virtualNodeNameForLookup">
			<xs:selector xpath="deployment/lookup" />
			<xs:field xpath="@virtualNode" />
			<!--Key definition for the attribute virtualNode located at deployment/lookup. This key will be used to ensure that the name attribute of componentDefinition/virtualNodesAcquisition/virtualNode element has a corresponding value defined in attribue virtualNode of deployment/lookup  -->
		</xs:key>
		<xs:key name="processid">
			<xs:selector xpath="infrastructure/processes/processDefinition" />
			<xs:field xpath="@id" />
			<!-- Key definition for the attribute id located at  infrastructure/processes/processDefinition. This key will be used to ensure either that the refid attribute defined in deployment/jvms/jvm/creation/ has a correponding value in infrastructure/processes/processDefinition@id and also that the refid attribute defined in infrastructure/processDefinition/rshProcess-sshProcess-rloginProcess-bsubProcess-globusProcess/processReference@refid has a correponding value in infrastructure/processes/processDefinition@id -->
		</xs:key>
		<xs:key name="serviceid">
			<xs:selector xpath="infrastructure/services/serviceDefinition" />
			<xs:field xpath="@id" />
			<!-- Key definition for the attribute id located at  infrastructure/services/serviceDefinition. This key will be used to ensure either that the refid attribute defined in deployment/jvms/jvm/acquisition/ has a correponding value in infrastructure/services/serviceDefinition@id -->
		</xs:key>
		<xs:key name="filetransferid">
			<xs:selector xpath="fileTransferDefinitions/fileTransfer" />
			<xs:field xpath="@id" />
			<!-- Key definition for the attribute id located at FileTransferDefinitions/FileTransfer. This key will be used to ensure that the FileTransferDeploy & FileTransferRetrieve attribute defined in the VirtualNodeExtType has a correponding value in FileTransferDefinitions/FileTransfer@id -->
		</xs:key>
	</xs:element>
	<!--processReference element is defined as a global element, hence it can be referenced in many part of the document. It has one attribute: refid that must occur once and only once. This element must reference a process defined elsewhere in the infrastructure section. Hence in the infrastructure section there must be an element ProcessDefinition with the corresponding value for id attribute   -->
	<xs:element name="processReference" type="ProcessReferenceType" />
	<xs:complexType name="ProcessReferenceType">
		<xs:attribute name="refid" type="xs:string" use="required" />
	</xs:complexType>
	<!--commandPath element is defined as a global element, hence it can be referenced in many part of the document. It has one attribute: value that must occur once and only once. This element represents the path of the command to be executed   -->
	<xs:element name="commandPath" type="CommandPathType" />
	<xs:complexType name="CommandPathType">
		<xs:attribute name="value" type="xs:string" use="required" />
	</xs:complexType>
	<!--environment element is defined as global element, hence it can be referenced in many part of the document. It has one child: variable element that must occur once and only once. This element is used to defined environment variables for some processes. -->
	<xs:element name="environment" type="EnvironmentType" />
	<xs:complexType name="EnvironmentType">
		<xs:sequence>
			<xs:element name="variable" type="EnvironmentVariableType" />
		</xs:sequence>
	</xs:complexType>
	<!--variable element has two attributes: name and value. Both are required.The syntax is for instance name="DISPLAY" value="machine_name0.0"  -->
	<xs:complexType name="EnvironmentVariableType">
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="value" type="xs:string" use="required" />
	</xs:complexType>
	<!--PatternType is defined as a global element, hence it can be referenced in many part of the document.-->
	<xs:simpleType name="PatternType">
		<xs:restriction base="xs:string">
			<xs:pattern value="((\s)*[\[](\s)*[0-9]+(\s)*[\-](\s)*([0-9])+(\s)*([\]](\s)*|[;](\s)*[0-9](\s)*[\]](\s)*))((\s)*|(\s)*[\^](\s)*[\[](\s)*(([0-9]+|[0-9]+(\s)*[\-](\s)*[0-9]+)(\s)*[,]*(\s)*)+[\]](\s)*)" />
		</xs:restriction>
	</xs:simpleType>
	<!--closeStreamType is defined as a global element, hence it can be referenced in all processes.-->
	<xs:simpleType name="CloseStreamType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="yes" />
			<xs:enumeration value="no" />
		</xs:restriction>
	</xs:simpleType>
	<!--ProActiveDescriptor element has three or four childs: mainDefinition element, that may appears any number of times, componentDefinition element that must appear once and only once 																	deployment element thay must appear once and only once 																		infrastructure element that must appear once and only once -->
	<xs:complexType name="ProActiveDescriptorType">
		<xs:sequence>
			<xs:element name="variables" type="VariablesType" minOccurs="0" />
			<xs:element name="security" type="SecurityType" minOccurs="0" />
			<xs:element name="mainDefinition" type="MainDefinitionType" minOccurs="0" />
			<xs:element name="componentDefinition" type="ComponentDefinitionType">
				<xs:unique name="idName">
					<xs:selector xpath=".//*" />
					<xs:field xpath="@name" />
					<!-- uniqueness of every name attribute in the component definition part -->
				</xs:unique>
				<!--<xs:keyref name="VirtNodeName" refer="vnName">
					<xs:selector xpath="virtualNodesDefinition/virtualNode"/>
					<xs:field xpath="@name"/> -->
				<!--This section references the vnName key defined above to ensure that the value of attribute name in virtualNodeDefinition/virtualNode element will have the corresponding definition in deployment/mapping/map@virtualNode -->
				<!-- </xs:keyref>-->
			</xs:element>
			<xs:element name="deployment" type="DeploymentType" />
			<xs:element name="fileTransferDefinitions" type="FileTransferDefinitionsType" minOccurs="0" />
			<xs:element name="infrastructure" type="InfrastructureType" minOccurs="0" />
			<xs:element name="technicalServices" type="TechnicalServiceType" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="VariablesType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="descriptorVariable">
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required" />
					<xs:attribute name="value" type="xs:string" use="required" />
				</xs:complexType>
			</xs:element>
			<xs:element name="descriptorDefaultVariable">
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required" />
					<xs:attribute name="value" type="xs:string" use="required" />
				</xs:complexType>
			</xs:element>
			<xs:element name="programDefaultVariable">
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required" />
					<xs:attribute name="value" type="xs:string" use="required" />
				</xs:complexType>
			</xs:element>
			<xs:element name="programVariable">
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required" />
					<xs:attribute name="value" type="xs:string" use="optional" fixed=""/>
				</xs:complexType>
			</xs:element>
			<xs:element name="javaPropertyVariable">
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required" />
					<xs:attribute name="value" type="xs:string" use="optional" fixed="" />
				</xs:complexType>
			</xs:element>
			<xs:element name="javaPropertyDescriptorDefault">
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required" />
					<xs:attribute name="value" type="xs:string" use="required" />
				</xs:complexType>
			</xs:element>
			<xs:element name="javaPropertyProgramDefault">
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required" />
					<xs:attribute name="value" type="xs:string" use="optional" />
				</xs:complexType>
			</xs:element>
			<xs:element name="includeXMLFile">
				<xs:complexType>
					<xs:attribute name="location" type="xs:string" use="required" />
				</xs:complexType>
			</xs:element>
			<xs:element name="includePropertyFile">
				<xs:complexType>
					<xs:attribute name="location" type="xs:string" use="required" />
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<!--main definition must have at least one child, a mapToVirtualNode and a not-empty attribute, the main class name. It may also have, in first, a group of elements of type ArgType, which define the arguments of the main class.-->
	<xs:complexType name="MainDefinitionType">
		<xs:sequence>
			<xs:group ref="ArgGroup" minOccurs="0" maxOccurs="unbounded" />
			<xs:group ref="MapToVirtualNodeGroup" maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="class" type="xs:string" use="required" />
		<xs:attribute name="id" type="xs:string" use="required" />
	</xs:complexType>
	<!--Sequence of element of type ArgType-->
	<xs:group name="ArgGroup">
		<xs:sequence>
			<xs:element name="arg" type="ArgType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:group>
	<!--a arg is defined by a required value attribute, containing the argument.-->
	<xs:complexType name="ArgType">
		<xs:attribute name="value" type="xs:string" use="required" />
	</xs:complexType>
	<!--MapToVirtualNode is composed of only one required attribute : the value, what must match with a virtual node defined in the descriptor.-->
	<xs:complexType name="MapToVirtualNodeType">
		<xs:attribute name="value" type="xs:string" use="required" />
	</xs:complexType>
	<!--MapToVirtualNodeGroup is composed of any number but at least one of MapToVirtualNode-->
	<xs:group name="MapToVirtualNodeGroup">
		<xs:sequence>
			<xs:element name="mapToVirtualNode" type="MapToVirtualNodeType" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:group>
	<!--component definition element has one child, that is a group of element, one element(or many) of the group has to appear at least once or more -->
	<xs:complexType name="ComponentDefinitionType">
		<xs:group ref="VirtualNodesGroup" />
	</xs:complexType>
	<!--VirtualNodesGroup is composed of two elements VirtualNodesDefinition where are defined virtualNodes that will be built from the descriptor and VirtualNodesAcquisition where are defined virtualNodes created by performing a lookup with a given protocol(rmi or jini). Both element can appear 0 or more-->
	<xs:group name="VirtualNodesGroup">
		<xs:sequence>
			<xs:element name="virtualNodesDefinition" type="VirtualNodesDefintionType" minOccurs="0" />
			<xs:element name="virtualNodesAcquisition" type="virtualNodesAcquisitionType" minOccurs="0" />
		</xs:sequence>
	</xs:group>
	<!--virtualnodesDefinition element has one child: virtualNode element that must appear once or more-->
	<xs:complexType name="VirtualNodesDefintionType">
		<xs:sequence>
			<xs:element name="virtualNode" maxOccurs="unbounded">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="VirtualNodeExtType">
							<xs:attribute name="minNodeNumber" type="xs:positiveInteger" use="optional" />
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- virtualNodesAcquisition element has only one child: virtualNode element that must appear once or more-->
	<xs:complexType name="virtualNodesAcquisitionType">
		<xs:sequence>
			<xs:element name="virtualNode" type="VirtualNodeType" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<!-- virtualNode element of type VirtualNodeType has one child: information element that may not appear.This elemnt is used to add textual information about the virtualNode	and one attributes: name that must appear once and only once, it may have any value of type string.	-->
	<xs:complexType name="VirtualNodeType">
		<xs:sequence>
			<xs:element name="information" type="xs:string" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required" />
	</xs:complexType>
	<!--virtualNode of type VirtualNodeExtType is an exyension of VirtualNodeType. It has two other attributes: property that may not appear and can take four defined values. This attribute just aims to provide informations about the virtualNode, in case of different people writing different part of the document. If property unique is set whereas the virtualNode has more than one machine defined in the jvmSet element, an exception will be generated when parsing the document, even if the document is valid against the schema. The other attribute is timeout, its value is defined in second. When activating the virtualNode, if this attribute is set, the VirtualNode will wait until timeout expires before giving access to all its nodes -->
	<xs:complexType name="VirtualNodeExtType">
		<xs:complexContent>
			<xs:extension base="VirtualNodeType">
				<xs:attribute name="property">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="unique" />
							<xs:enumeration value="unique_singleAO" />
							<xs:enumeration value="multiple" />
							<xs:enumeration value="multiple_cyclic" />
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="ftServiceId" type="xs:string" use="optional" />
				<xs:attribute name="timeout" type="xs:positiveInteger" use="optional" />
				<xs:attribute name="waitForTimeout" type="xs:boolean" use="optional" default="false" />
				<xs:attribute name="fileTransferDeploy" type="xs:string" use="optional" />
				<xs:attribute name="fileTransferRetrieve" type="xs:string" use="optional" />
				<xs:attribute name="technicalServiceId" type="xs:string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- deployment element has two child: mapping element that must appear once and only once
									   jvms element that must appear once and only once-->
	<xs:complexType name="DeploymentType">
		<xs:group ref="DeploymentGroup" />
	</xs:complexType>
	<xs:group name="DeploymentGroup">
		<xs:sequence>
			<xs:element name="register" type="RegisterType" minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="mapping" type="MappingType" minOccurs="0" />
			<xs:element name="lookup" type="LookupType" minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="jvms" type="JvmsType" minOccurs="0" />
		</xs:sequence>
	</xs:group>
	<xs:complexType name="RegisterType">
		<xs:attribute name="virtualNode" type="xs:string" use="required" />
		<xs:attribute name="protocol" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="rmi" />
					<xs:enumeration value="rmissh" />
					<xs:enumeration value="http" />
					<xs:enumeration value="jini" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<!-- mapping element has only one child: map element that must appear once or more-->
	<xs:complexType name="MappingType">
		<xs:sequence>
			<xs:element name="map" type="MapType" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<!-- map element has one child: jvmSet element that must appear once and only once
					 one attribute: virtualNode that must appear once and only once, it may have have any value of type string-->
	<xs:complexType name="MapType">
		<xs:sequence>
			<xs:element name="jvmSet" type="JvmSetType">
				<xs:unique name="vmname">
					<xs:selector xpath="vmName" />
					<xs:field xpath="@value" />
					<!--Uniqueness of the value attribute for vmName element inside a jvmSet collection-->
				</xs:unique>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="virtualNode" type="xs:string" use="required" />
	</xs:complexType>
	<!-- jvmSet element has one child, it is a choice between an element  vmName that must occur once or more and a group: CurrentVMGroup that must occur once and only once-->
	<xs:complexType name="JvmSetType">
		<xs:sequence>
			<xs:group ref="CurrentVMGroup" />
		</xs:sequence>
	</xs:complexType>
	<!--CurrentVMGroup consists in two elements  currentJVM  that must occur once and only once and vmName that may not appear, or can appear many times-->
	<xs:group name="CurrentVMGroup">
		<xs:sequence>
			<xs:element name="currentJVM" type="CurrentJVMType" minOccurs="0" />
			<xs:element name="vmName" type="VmNameType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:group>
	<!--currentVM element has one attribute: protocol wich is required and can take only two values rmi or jini. This element when set, indicates that a node will be created  on the jvm running the program and this node will be mapped on the virtualNode defined in deployment/mapping/map@virtualNode-->
	<xs:complexType name="CurrentJVMType">
		<xs:attribute name="protocol" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="rmi" />
					<xs:enumeration value="rmissh" />
					<xs:enumeration value="jini" />
					<xs:enumeration value="http" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<!-- vmName element is a simpleType that can take any value of type String. This element represents the name of a virtualMachine. This name must have a corresponding value in jvms/jvm section(name attribute)-->
	<xs:complexType name="VmNameType">
		<xs:attribute name="value" type="xs:string" use="required" />
	</xs:complexType>
	<xs:complexType name="LookupType">
		<xs:complexContent>
			<xs:extension base="RegisterType">
				<xs:attribute name="host" type="xs:string" use="required" />
				<!-- should be integer for the port, but * would not be supported-->
				<xs:attribute name="port" type="xs:string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- jvms element has only one child: jvm element that must appear once or more-->
	<xs:complexType name="JvmsType">
		<xs:sequence>
			<xs:element name="jvm" type="JvmType" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<!--jvm element has two childs:acquisition element that must appear once and only once
							   creation element that must appear once and only once
				two attributes: name that must appear once and only once. It represents the name of the virtualmachine to be created
							    nodeNumber which is optionnal and represents the number of nodes that will be created on the enclosing jvm. Default is one-->
	<xs:complexType name="JvmType">
		<xs:choice>
			<xs:element name="creation" type="CreationType" />
			<xs:element name="acquisition" type="AcquisitionType" />
		</xs:choice>
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="askedNodes" type="xs:positiveInteger" use="optional" />
	</xs:complexType>
	<!--acquisition element has one element: serviceReference that identifies uniquely the service to use in order to acquire the jvm. -->
	<xs:complexType name="AcquisitionType">
		<xs:sequence>
			<xs:element name="serviceReference" type="ServiceReferenceType" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ServiceReferenceType">
		<xs:attribute name="refid" use="required" />
	</xs:complexType>
	<!--creation element has one child: processReference element defined as global element. This element must occur once and only once. The reference is used to map the jvm with a process defined in infrastructure section. This process will originate jvm's creation. Hence such process must exist in the infrastructure section. -->
	<xs:complexType name="CreationType">
		<xs:sequence>
			<xs:element ref="processReference" />
		</xs:sequence>
	</xs:complexType>
	<!--FileTransferDefinitions element has one child: FileTransfer that can appear cero or more times -->
	<xs:complexType name="FileTransferDefinitionsType">
		<xs:sequence>
			<xs:element name="fileTransfer" type="FileTransferType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FileTransferType">
		<xs:sequence>
			<xs:element name="file" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="src" type="xs:string" use="required" />
					<xs:attribute name="dest" type="xs:string" use="optional" />
				</xs:complexType>
			</xs:element>
			<xs:element name="dir" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="src" type="xs:string" use="required" />
					<xs:attribute name="dest" type="xs:string" use="optional" />
					<xs:attribute name="includes" type="xs:string" use="optional" />
					<xs:attribute name="excludes" type="xs:string" use="optional" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="xs:string" use="required" />
	</xs:complexType>
	<!--infrastructure element has two childs: processes and services element that can appear zero or  once -->
	<xs:complexType name="InfrastructureType">
		<xs:sequence>
			<xs:element name="processes" type="ProcessesType" minOccurs="0" />
			<xs:element name="services" type="ServicesType" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<!--  Technical Service is a sequence of services -->
	<xs:complexType name="TechnicalServiceType">
		<xs:sequence>
			<xs:element name="technicalServiceDefinition" type="TechnicalServiceDefinitionType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TechnicalServiceDefinitionType">
		<xs:sequence>
			<xs:element name="arg" type="TechnicalServiceArgType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="id" type="xs:string" use="required" />
		<xs:attribute name="class" type="xs:string" use="required" />
	</xs:complexType>
	<xs:complexType name="TechnicalServiceArgType">
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="value" type="xs:string" use="required" />
	</xs:complexType>
	<!--services element has one child: serviceDefinition element that must appear once or more -->
	<xs:complexType name="ServicesType">
		<xs:sequence>
			<xs:element name="serviceDefinition" type="ServiceDefinitionType" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<!-- ServiceDefinition has two childs: RMIRegistryLookup, P2PLookup but only one
	can be present in the parent element. This element contains also an attribute: id
	which must appear once and only once and represents the id of the service in
	order for
	jvms(serviceReference element in deployment/jvms/jvm/creation/processReference)
	to reference other services-->
	<xs:complexType name="ServiceDefinitionType">
		<xs:choice>
			<xs:element name="RMIRegistryLookup" type="RMIRegistryLookupType" />
			<xs:element name="P2PService" type="P2PServiceType" />
			<xs:element name="faultTolerance" type="faultToleranceType" />
		</xs:choice>
		<xs:attribute name="id" type="xs:string" use="required" />
	</xs:complexType>
	<!-- ftService has -->
	<xs:complexType name="faultToleranceType">
		<xs:sequence>
			<xs:element name="protocol" type="protocolType" />
			<xs:element name="globalServer" type="serverType" minOccurs="0" />
			<xs:element name="locationServer" type="serverType" minOccurs="0" />
			<xs:element name="recoveryServer" type="serverType" minOccurs="0" />
			<xs:element name="checkpointServer" type="serverType" minOccurs="0" />
			<xs:element name="resourceServer" type="serverType" minOccurs="0" />
			<xs:element name="ttc" type="ttcType" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="protocolType">
		<xs:attribute name="type" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="cic" />
					<xs:enumeration value="pml" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="serverType">
		<xs:attribute name="url" type="xs:string" use="required" />
	</xs:complexType>
	<xs:complexType name="ttcType">
		<xs:attribute name="value" type="xs:positiveInteger" use="required" />
	</xs:complexType>
	<!-- RMIRegistryLookup has one attribute: the url to looup-->
	<xs:complexType name="RMIRegistryLookupType">
		<xs:attribute name="url" type="xs:string" use="required" />
	</xs:complexType>
	<!-- P2PService has one child peerSet that represents a set of peer's url.
	It has also 6 attributes: 
		nodesAsked: that represents the number of nodes requested, 
		acq: the acquisition method (rmi, http, ibis, etc.), 
		port: the listeming port number,
		NOA: the number of acquaintances,
		TTU: time to update,
		TTL: time to live,
		multi_proc_nodes: true for deploying 1 node / cpu,
		xml_path: the xml deployment descriptor path.
	-->
	<xs:complexType name="P2PServiceType">
		<xs:sequence>
			<xs:element name="peerSet" type="peerSetType" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="nodesAsked" use="required">
			<xs:simpleType>
				<xs:union memberTypes="xs:positiveInteger MaxType" />
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="NOA" type="xs:positiveInteger" use="optional" />
		<xs:attribute name="TTU" type="xs:positiveInteger" use="optional" />
		<xs:attribute name="TTL" type="xs:positiveInteger" use="optional" />
		<xs:attribute name="acq" type="xs:string" use="optional" />
		<xs:attribute name="port" type="xs:positiveInteger" use="optional" />
		<xs:attribute name="multi_proc_nodes" type="xs:boolean" use="optional" />
		<xs:attribute name="xml_path" type="xs:string" use="optional" />
		<xs:attribute name="node_family_regexp" type="xs:string" use="optional" />
	</xs:complexType>
	<xs:simpleType name="MaxType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="MAX" />
		</xs:restriction>
	</xs:simpleType>
	<!-- peerSet element has one child peer that can occurs once or more-->
	<xs:complexType name="peerSetType">
		<xs:sequence>
			<xs:element name="peer" type="xs:string" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<!--processes element has one child: processDefinition element that must appear once or more -->
	<xs:complexType name="ProcessesType">
		<xs:sequence>
			<xs:element name="processDefinition" type="ProcessDefinitionType" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<!-- processDefinition element has seven childs: jvmProcess, rshProcess, sshProcess, rloginProcess, bsubProcess, globusProcess, prunProcess. But only one child can be present in the parent element. Such processes will be used to create jvms. This element contains also an attribute: id which must appear once and only once and represents the id of the process in order for processes or  jvms(processReference element in deployment/jvms/jvm/creation/processReference)  to reference other processes-->
	<xs:complexType name="ProcessDefinitionType">
		<xs:choice>
			<xs:element name="jvmProcess" type="JvmProcessType" />
			<xs:element name="rshProcess" type="RshProcessType" />
			<xs:element name="maprshProcess" type="MapRshProcessType" />
			<xs:element name="sshProcess" type="SshProcessType" />
			<xs:element name="processList" type="ProcessListType" />
			<xs:element name="processListbyHost" type="ProcessListbyHostType" />
			<xs:element name="rloginProcess" type="RloginProcessType" />
			<xs:element name="bsubProcess" type="BsubProcessType" />
			<xs:element name="pbsProcess" type="PbsProcessType" />
			<xs:element name="oarProcess" type="oarProcessType" />
			<xs:element name="oarGridProcess" type="oarGridProcessType" />
			<xs:element name="globusProcess" type="GlobusProcessType" />
			<xs:element name="prunProcess" type="prunProcessType" />
			<xs:element name="gridEngineProcess" type="sgeProcessType" />
			<xs:element name="gLiteProcess" type="gLiteProcessType" />
			<xs:element name="unicoreProcess" type="unicoreProcessType" />
			<xs:element name="ngProcess" type="NGProcessType" />
			<xs:element name="hierarchicalProcess" type="hierarchicalProcessType" />
			<xs:element name="mpiProcess" type="mpiProcessType" />
			<xs:element name="dependentProcessSequence" type="dependentProcessSequenceType" />
			<xs:element name="independentProcessSequence" type="independentProcessSequenceType" />
		</xs:choice>
		<xs:attribute name="id" type="xs:string" use="required" />
	</xs:complexType>
	<!--jvmProcess element has six childs: bootclasspath, classpath, javaPath, policyFile, log4jpropertiesFile, jvmParameters. They may not appear. classpath element represents the classpath value for the enclosing jvmProcess. javaPath represents the location of the java command to run for the jvmProcess. policyFile element represents the location of the policy file to use in the jvmProcess.log4jpropertiesFilerepresents the location of the log4j properties file.  jvmParameters element represents all options(except of course classpath and policy file) that can be given to the the jvm. This element has also one attribute: class which is required. This attribute can take only one value: org.objectweb.proactive.core.process.JVMNodeProcess. This element is used to create a local jvm-->
	<xs:complexType name="JvmProcessType">
		<xs:sequence>
			<xs:element name="extendedJvm" type="ExtendedJVMType" minOccurs="0" />
			<xs:element name="bootclasspath" type="ClasspathType" minOccurs="0" />
			<xs:element name="classpath" type="ClasspathType" minOccurs="0" />
			<xs:element name="javaPath" type="FilePathType" minOccurs="0" />
			<xs:element name="policyFile" type="FilePathType" minOccurs="0" />
			<xs:element name="log4jpropertiesFile" type="FilePathType" minOccurs="0" />
			<xs:element name="ProActiveUserPropertiesFile" type="FilePathType" minOccurs="0" />
			<xs:element name="jvmParameters" type="JvmParameterType" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="class" type="xs:string" use="required" fixed="org.objectweb.proactive.core.process.JVMNodeProcess" />
		<xs:attribute name="closeStream" type="CloseStreamType" use="optional" />
	</xs:complexType>
	<xs:complexType name="ExtendedJVMType">
		<xs:complexContent>
			<xs:extension base="ProcessReferenceType">
				<xs:attribute name="overwriteParameters" use="optional">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="yes" />
							<xs:enumeration value="no" />
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--classpath element has two child: absolutePath and relativePath.  One of the child must appear once or more. Both element can be present in the classpath definition. For instance an absolutePath element followed by a relativePath element-->
	<xs:complexType name="ClasspathType">
		<xs:choice maxOccurs="unbounded">
			<xs:element name="absolutePath" type="AbsolutePathType" />
			<xs:element name="relativePath" type="RelativePathType" />
		</xs:choice>
	</xs:complexType>
	<!--elements of type FilePathType have two childs: absolutePath and relativePath. Only one child can be present in the parent element. javaPath, policyFile(defined above), and scriptPath element  are of such type.-->
	<xs:complexType name="FilePathType">
		<xs:choice>
			<xs:element name="absolutePath" type="AbsolutePathType" />
			<xs:element name="relativePath" type="RelativePathType" />
		</xs:choice>
	</xs:complexType>
	<!-- path element of type RelativePathType has three attributes:type which is fixed with value relative, origin which can take three values, and value.  -->
	<xs:complexType name="RelativePathType">
		<xs:attribute name="origin" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="user.home" />
					<xs:enumeration value="user.dir" />
					<xs:enumeration value="user.classpath" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="value" type="xs:string" use="required" />
	</xs:complexType>
	<!-- path element of type AbsolutePathType has two attributes:type which is fixed with value absolute and value which is required.  -->
	<xs:complexType name="AbsolutePathType">
		<xs:attribute name="value" type="xs:string" use="required" />
	</xs:complexType>
	<!--jvmParameters represents options to be passed to the jvm. It has one child : parameter -->
	<xs:complexType name="JvmParameterType">
		<xs:choice maxOccurs="unbounded">
			<xs:element name="parameter" type="parameter" />
		</xs:choice>
	</xs:complexType>
	<!-- parameter has one attribute: value which is a string representing the parameter -->
	<xs:complexType name="parameter">
		<xs:attribute name="value" type="xs:string" />
	</xs:complexType>
	<!-- FileTransfer Process Specific Information -->
	<xs:complexType name="FileTransferStructureType">
		<xs:sequence>
			<xs:element name="copyProtocol" minOccurs="0" />
			<xs:element name="sourceInfo" type="FileTransferStructureInfoType" minOccurs="0" />
			<xs:element name="destinationInfo" type="FileTransferStructureInfoType" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="refid" type="xs:string" use="required" />
	</xs:complexType>
	<xs:complexType name="FileTransferStructureInfoType">
		<xs:attribute name="prefix" type="xs:string" use="optional" />
		<xs:attribute name="hostname" type="xs:string" use="optional" />
		<xs:attribute name="username" type="xs:string" use="optional" />
		<xs:attribute name="password" type="xs:string" use="optional" />
	</xs:complexType>
	<xs:complexType name="FileTransferRetrieveStructureType">
		<xs:sequence>
			<xs:element name="sourceInfo" type="FileTransferRetrieveStructureInfoType" minOccurs="0" />
			<xs:element name="destinationInfo" type="FileTransferRetrieveStructureInfoType" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="refid" type="xs:string" use="required" />
	</xs:complexType>
	<xs:complexType name="FileTransferRetrieveStructureInfoType">
		<xs:attribute name="prefix" type="xs:string" use="optional" />
	</xs:complexType>
	<!--rshProcess element has two childs: processReference element which represents a process defined elsewhere in the infrastructure section(ProcessDefinition@id). Most of time  the referenced process will be a jvmProcess, it means once logged on a remote host with rsh protocol a jvm will be created on the remote host.This element has also an environment element that may not appear and three attributes: class which is required and can take only two values: org.objectweb.proactive.core.process.rsh.RSHJVMProcess or org.objectweb.proactive.core.process.rsh.RSHProcess, username attribute which is optional, and hostname which is required and represents the remote host to log on with rsh-->
	<xs:complexType name="RshProcessType">
		<xs:sequence>
			<xs:element ref="environment" minOccurs="0" />
			<xs:element ref="processReference" />
			<xs:element ref="commandPath" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="class" use="required" fixed="org.objectweb.proactive.core.process.rsh.RSHProcess" />
		<xs:attribute name="closeStream" type="CloseStreamType" use="optional" />
		<xs:attribute name="username" type="xs:string" use="optional" />
		<xs:attribute name="hostname" type="xs:string" use="required" />
		<!--	<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="org.objectweb.proactive.core.process.rsh.RSHProcess"/>
					<xs:enumeration value="org.objectweb.proactive.core.process.rsh.RSHJVMProcess"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>-->
	</xs:complexType>
	<!-- The ProcessListType represents a list of ssh, rsh or rlogin processes, they are defined by the class attributes that identifies wich process is included in the list
by fixedName that is the fixed part of hostnames, list that represents the sequence of number, padding and domain-->
	<xs:complexType name="ProcessListType">
		<xs:sequence>
			<xs:element ref="environment" minOccurs="0" />
			<xs:element ref="processReference" />
			<xs:element ref="commandPath" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="class" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="org.objectweb.proactive.core.process.ssh.SSHProcessList" />
					<xs:enumeration value="org.objectweb.proactive.core.process.rsh.RSHProcessList" />
					<xs:enumeration value="org.objectweb.proactive.core.process.rsh.RLoginProcessList" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="closeStream" type="CloseStreamType" use="optional" />
		<xs:attribute name="fixedName" type="xs:string" use="required" />
		<xs:attribute name="list" type="PatternType" use="required" />
		<xs:attribute name="padding" type="xs:positiveInteger" use="optional" />
		<xs:attribute name="domain" type="xs:string" use="required" />
		<xs:attribute name="username" type="xs:string" use="optional" />
	</xs:complexType>
	<!-- The ProcessListbyHostType represents a list of ssh, rsh or rlogin processes, they are defined by the class attributes that identifies wich process is included in the list
by hostlist which is a list of hostname and domain if all the host specified are in the same domain-->
	<xs:complexType name="ProcessListbyHostType">
		<xs:sequence>
			<xs:element ref="environment" minOccurs="0" />
			<xs:element ref="processReference" />
			<xs:element ref="commandPath" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="class" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="org.objectweb.proactive.core.process.ssh.SSHProcessList" />
					<xs:enumeration value="org.objectweb.proactive.core.process.rsh.RSHProcessList" />
					<xs:enumeration value="org.objectweb.proactive.core.process.rsh.RLoginProcessList" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="closeStream" type="CloseStreamType" use="optional" />
		<xs:attribute name="hostlist" type="ListType" use="required" />
		<xs:attribute name="domain" type="xs:string" use="optional" />
		<xs:attribute name="username" type="xs:string" use="optional" />
	</xs:complexType>
	<!--maprshProcess element has two child: processReference element which represents a process defined elsewhere in the infrastructure section(ProcessDefinition@id). Most of time  the referenced process will be a jvmProcess, it means once logged on a remote hosts with rsh protocol a jvm will be created on the remote host.This element has also  a scriptPath child which represents the location of the script oasis-exp.sh and three attributes: class which is required and can take only one value: org.objectweb.proactive.core.process.rsh.maprsh.MapRSHProcess,  netgroup which is required and represents  group of remote hosts to log on with rsh. and parallelize which is optional and represents the parallelization degree -->
	<xs:complexType name="MapRshProcessType">
		<xs:sequence>
			<xs:element ref="processReference" />
			<xs:element ref="commandPath" minOccurs="0" />
			<xs:element name="scriptPath" type="FilePathType" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="class" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="org.objectweb.proactive.core.process.rsh.maprsh.MapRshProcess" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="closeStream" type="CloseStreamType" use="optional" />
		<xs:attribute name="parallelize" type="xs:positiveInteger" use="optional" />
		<xs:attribute name="hostname" type="ListType" use="required" />
	</xs:complexType>
	<!--sshProcess element has two child: processReference element which represents a process defined elsewhere in the infrastructure section(ProcessDefinition@id).and environment element that may not appear and three attributes: class which is required and can take only two values: org.objectweb.proactive.core.process.ssh.SSHJVMProcess or org.objectweb.proactive.core.process.ssh.SSHProcess, username attribute which is optional, and hostname which is required and represents the remote host to log on with ssh-->
	<xs:complexType name="SshProcessType">
		<xs:sequence>
			<xs:element ref="environment" minOccurs="0" />
			<xs:element ref="processReference" />
			<xs:element ref="commandPath" minOccurs="0" />
			<xs:element name="fileTransferDeploy" type="FileTransferStructureType" minOccurs="0" maxOccurs="1" />
			<xs:element name="fileTransferRetrieve" type="FileTransferRetrieveStructureType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
		<xs:attribute name="class" use="required" fixed="org.objectweb.proactive.core.process.ssh.SSHProcess" />
		<xs:attribute name="closeStream" type="CloseStreamType" use="optional" />
		<xs:attribute name="username" type="xs:string" use="optional" />
		<xs:attribute name="hostname" type="xs:string" use="required" />
		<!--<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="org.objectweb.proactive.core.process.ssh.SSHProcess"/>
					<xs:enumeration value="org.objectweb.proactive.core.process.ssh.SSHJVMProcess"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>-->
	</xs:complexType>
	<!--rloginProcess element has two childs: processReference element which represents a process defined elsewhere in the infrastructure section(ProcessDefinition@id) and environment element that may not appear and two attributes: class which is required and can take only one value: org.objectweb.proactive.core.process.lsf.RLoginProcess, and hostname which is required and represents the remote host to log on with rlogin-->
	<xs:complexType name="RloginProcessType">
		<xs:sequence>
			<xs:element ref="environment" minOccurs="0" />
			<xs:element ref="processReference" />
			<xs:element ref="commandPath" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="class" type="xs:string" use="required" fixed="org.objectweb.proactive.core.process.rlogin.RLoginProcess" />
		<xs:attribute name="closeStream" type="CloseStreamType" use="optional" />
		<xs:attribute name="hostname" type="xs:string" use="required" />
	</xs:complexType>
	<!--bsubProcess element has two childs: processReference element which represents a process defined elsewhere in the infrastructure section(ProcessDefinition@id)  and may not appear, bsubOption element that may not appear and represents different options of bsub command and three attributes: class which is required and can take only one value: org.objectweb.proactive.core.process.lsf.LSFBSubProcess, interactive which is optinal to run bsub command in interactive mode, and queue to specify in which queue to run the job.This element will be used to run bsub command-->
	<xs:complexType name="BsubProcessType">
		<xs:sequence>
			<xs:element ref="processReference" />
			<xs:element ref="commandPath" minOccurs="0" />
			<xs:element name="bsubOption" type="BsubOptionType" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="class" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="org.objectweb.proactive.core.process.lsf.LSFBSubProcess" />
					<xs:enumeration value="org.objectweb.proactive.core.process.lsf.CNLSFProcess" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="closeStream" type="CloseStreamType" use="optional" />
		<xs:attribute name="interactive" type="xs:boolean" use="optional" />
		<xs:attribute name="jobname" type="xs:string" use="optional" />
		<xs:attribute name="queue" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="normal" />
					<xs:enumeration value="priority" />
					<xs:enumeration value="night" />
					<xs:enumeration value="short" />
					<xs:enumeration value="idle" />
					<xs:enumeration value="exclusive" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<!--bsubOption element has three childs:hostlist which represents the -m option of bsub command, processor which indicate the number of processor requested, scriptPath element which represents the location of the startRuntime.sh script to run jobs on LSF cluster.These three elements may not appear -->
	<xs:complexType name="BsubOptionType">
		<xs:sequence>
			<xs:element name="hostlist" type="ListType" minOccurs="0" />
			<xs:element name="processor" type="xs:positiveInteger" minOccurs="0" />
			<xs:element name="resourceRequirement" minOccurs="0">
				<xs:complexType>
					<xs:attribute name="value" type="xs:string" />
				</xs:complexType>
			</xs:element>
			<xs:element name="scriptPath" type="FilePathType" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<!--PBSProcess-->
	<xs:complexType name="PbsProcessType">
		<xs:sequence>
			<xs:element ref="processReference" />
			<xs:element ref="commandPath" minOccurs="0" />
			<xs:element name="pbsOption" type="PbsOptionType" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="class" type="xs:string" use="required" fixed="org.objectweb.proactive.core.process.pbs.PBSSubProcess" />
		<xs:attribute name="closeStream" type="CloseStreamType" use="optional" />
		<xs:attribute name="interactive" type="xs:boolean" use="optional" />
		<xs:attribute name="queue" type="xs:string" use="optional" />
	</xs:complexType>
	<!--PbsOption-->
	<xs:complexType name="PbsOptionType">
		<xs:complexContent>
			<xs:extension base="prunOptionType">
				<xs:sequence>
					<xs:element name="scriptPath" type="FilePathType" minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--gLiteProcess element has six children: processReference element, gLiteOptions which contains JDLFilePath child and SdtOutput child 
	environment, rank, inputData, requirements-->
	<!--Environment : List of string representing environment settings that hava to be performed on the execution machine.-->
	<!--Requirements : String representing job requirements on ressources. Default is : Requirements = other.GlueCEStateStatusus == "Production";-->
	<!--InputData : string or list of string representing physical file location on SE. Names have to be prefixed with "lfn", "guid", "lds", "query".-->
	<!--Rank : ClassAd foating-point expression that states how to rank CEs that have already met the Requirements expression. Default is : Rank = -other.GlueCEStateEstimatedResponseTime; -->
	<xs:complexType name="gLiteProcessType">
		<xs:sequence>
			<xs:element ref="processReference" />
			<xs:element name="environment" type="xs:string" minOccurs="0" />
			<xs:element name="requirements" type="xs:string" minOccurs="0" />
			<xs:element name="inputData" type="gLiteInputDataType" minOccurs="0" />
			<xs:element name="rank" minOccurs="0">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="fuzzyrank" type="xs:string" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="gLiteOptions" type="gLiteOptionsType" minOccurs="0" />
			<xs:element name="JdlTransferDeploy" type="FileTransferStructureType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
		<xs:attribute name="class" type="xs:string" use="required" fixed="org.objectweb.proactive.core.process.glite.GLiteProcess" />
		<xs:attribute name="hostname" type="xs:string" />
		<xs:attribute name="virtualOrganisation" type="xs:string" use="required" />
		<xs:attribute name="JDLFileName" type="xs:string" use="required" />
		<xs:attribute name="Type" type="xs:string" default="Job" />
		<xs:attribute name="executable" type="xs:string" default="/bin/sh" />
		<xs:attribute name="stdOutput" type="xs:string" default="output.log" />
		<xs:attribute name="stdInput" type="xs:string" default="input.log" />
		<xs:attribute name="stdError" type="xs:string" default="error.log" />
		<xs:attribute name="outputse" type="xs:string" />
		<xs:attribute name="retryCount" type="xs:string" />
		<xs:attribute name="myProxyServer" type="xs:string" />
	</xs:complexType>
	<!--gLiteRankType-->
	<xs:complexType name="gLiteRankType">
		<xs:attribute name="fuzzyrank" type="xs:boolean" default="false" />
	</xs:complexType>
	<!--gLiteInputDataType-->
	<xs:complexType name="gLiteInputDataType">
		<xs:attribute name="dataAccessProtocol" type="xs:string" />
		<xs:attribute name="storageIndex" type="xs:string" />
		<xs:attribute name="dataCatalog" type="xs:string" />
	</xs:complexType>
	<!--gLiteJobType-->
	<xs:complexType name="gLiteJobType">
		<xs:choice>
			<xs:element name="Normal" />
			<xs:element name="Interactive">
				<xs:complexType>
					<xs:attribute name="listerport" type="xs:string" />
				</xs:complexType>
			</xs:element>
			<xs:element name="MPICH">
				<xs:complexType>
					<xs:attribute name="nodeNumber" type="xs:positiveInteger" use="required" />
				</xs:complexType>
			</xs:element>
			<xs:element name="Checkpointable">
				<xs:complexType>
					<xs:attribute name="currentStep" type="xs:string" use="required" />
					<xs:attribute name="jobStep" type="xs:string" use="required" />
				</xs:complexType>
			</xs:element>
			<xs:element name="Partitionable">
				<xs:complexType>
					<xs:attribute name="currentStep" type="xs:string" use="required" />
					<xs:attribute name="jobStep" type="xs:string" use="required" />
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<!--gLiteOptions-->
	<xs:complexType name="gLiteOptionsType">
		<xs:sequence>
			<xs:element name="configFile" type="FilePathType" minOccurs="0" />
			<xs:element name="JDLFilePath" type="FilePathType" minOccurs="0" />
			<xs:element name="JDLRemoteFilePath" type="FilePathType" minOccurs="0" />
			<xs:element name="jobType" type="gLiteJobType" minOccurs="0" />
			<xs:element name="arguments" type="xs:string" minOccurs="0" />
			<xs:element name="inputSandbox" type="xs:string" minOccurs="0" />
			<xs:element name="outputSandbox" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<!-- end of gLiteProcessType -->
	<!--prunProcess element has two childs: processReference element which represents a process defined elsewhere in the infrastructure section(ProcessDefinition@id)  and may not appear, prunOption element that may not appear and represents different options of prun command and three attributes: class which is required and can take only one value: org.objectweb.proactive.core.process.prun.PrunSubProcess, interactive which is optinal to run prun command in interactive mode, and queue to specify in which queue to run the job.This element will be used to run prun command-->
	<xs:complexType name="prunProcessType">
		<xs:sequence>
			<xs:element ref="processReference" />
			<xs:element ref="commandPath" minOccurs="0" />
			<xs:element name="prunOption" type="prunOptionType" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="class" type="xs:string" use="required" fixed="org.objectweb.proactive.core.process.prun.PrunSubProcess" />
		<xs:attribute name="closeStream" type="CloseStreamType" use="optional" />
		<xs:attribute name="queue" type="xs:string" use="optional" />
	</xs:complexType>
	<!--prunOption element has three childs:hostlist which represents the -m option of bsub command, processor which indicate the number of processor requested, scriptPath element which represents the location of the startRuntime.sh script to run jobs on LSF cluster.These three elements may not appear -->
	<xs:complexType name="prunOptionType">
		<xs:sequence>
			<xs:element name="hostlist" type="ListType" minOccurs="0" />
			<xs:element name="hostsNumber" type="xs:positiveInteger" minOccurs="0" />
			<xs:element name="processorPerNode" type="xs:positiveInteger" minOccurs="0" />
			<xs:element name="bookingDuration" type="xs:string" minOccurs="0" />
			<xs:element name="outputFile" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<!--oarProcess-->
	<xs:complexType name="oarProcessType">
		<xs:sequence>
			<xs:element ref="processReference" />
			<xs:element ref="commandPath" minOccurs="0" />
			<xs:element name="oarOption" type="OarOptionType" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="class" type="xs:string" use="required" fixed="org.objectweb.proactive.core.process.oar.OARSubProcess" />
		<xs:attribute name="bookedNodesAccess" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="rsh" />
					<xs:enumeration value="ssh" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="closeStream" type="CloseStreamType" use="optional" />
		<xs:attribute name="interactive" type="xs:boolean" use="optional" />
		<xs:attribute name="queue" type="xs:string" use="optional" />
	</xs:complexType>
	<!--oarOption-->
	<xs:complexType name="OarOptionType">
		<xs:sequence>
			<xs:element name="resources" type="xs:string" minOccurs="0" />
			<!--<xs:element name="properties" type="xs:string" minOccurs="0"/>-->
			<xs:element name="scriptPath" type="FilePathType" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<!--oarGridProcess-->
	<xs:complexType name="oarGridProcessType">
		<xs:sequence>
			<xs:element ref="processReference" />
			<xs:element ref="commandPath" minOccurs="0" />
			<xs:element name="oarGridOption" type="OarGridOptionType" />
		</xs:sequence>
		<xs:attribute name="class" type="xs:string" use="required" fixed="org.objectweb.proactive.core.process.oar.OARGRIDSubProcess" />
		<xs:attribute name="queue" type="xs:string" use="optional" />
		<xs:attribute name="bookedNodesAccess" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="rsh" />
					<xs:enumeration value="ssh" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="closeStream" type="CloseStreamType" use="optional" />
	</xs:complexType>
	<!--oarGridOption-->
	<xs:complexType name="OarGridOptionType">
		<xs:sequence>
			<xs:element name="resources" type="xs:string" />
			<xs:element name="walltime" type="xs:string" minOccurs="0" />
			<xs:element name="scriptPath" type="FilePathType" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<!--sge process -->
	<xs:complexType name="sgeProcessType">
		<xs:sequence>
			<xs:element ref="processReference" />
			<xs:element ref="commandPath" minOccurs="0" />
			<xs:element name="gridEngineOption" type="GridEngineOptionType" />
		</xs:sequence>
		<xs:attribute name="class" type="xs:string" use="required" fixed="org.objectweb.proactive.core.process.gridengine.GridEngineSubProcess" />
		<xs:attribute name="closeStream" type="CloseStreamType" use="optional" />
		<xs:attribute name="interactive" type="xs:boolean" use="optional" />
		<xs:attribute name="queue" type="xs:string" use="optional" />
	</xs:complexType>
	<xs:complexType name="GridEngineOptionType">
		<xs:sequence>
			<xs:element name="hostsNumber" type="xs:string" />
			<xs:element name="bookingDuration" type="xs:string" />
			<xs:element name="scriptPath" type="FilePathType" />
			<xs:element name="hostlist" type="xs:string" minOccurs="0" />
			<xs:element name="parallelEnvironment" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<!--hostlist element is a list of string. For instance galere10.inria.fr pf3.inria.fr galere11.inria.fr -->
	<xs:simpleType name="ListType">
		<xs:list itemType="xs:string" />
	</xs:simpleType>
	<!--globusProcess element has three childs: processReference element which represents a process defined elsewhere in the infrastructure section(ProcessDefinition@id) , environment, and globusOption element  which represents different options of globus command.They may not appear and two attributes: class which is required and can take only one value: org.objectweb.proactive.core.process.globus.GlobusProcess, and hostname which is required and represents the globus host where the RSL request is destinated -->
	<xs:complexType name="GlobusProcessType">
		<xs:sequence>
			<xs:element ref="environment" minOccurs="0" />
			<xs:element ref="processReference" />
			<!--	<xs:element ref="commandPath" minOccurs="0"/>-->
			<xs:element name="globusOption" type="GlobusOptionType" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="class" type="xs:string" use="required" fixed="org.objectweb.proactive.core.process.globus.GlobusProcess" />
		<xs:attribute name="closeStream" type="CloseStreamType" use="optional" />
		<xs:attribute name="hostname" type="xs:string" use="required" />
		<xs:attribute name="queue" type="xs:string" use="optional" />
	</xs:complexType>
	<!--globusOption element has one child count element-->
	<xs:complexType name="GlobusOptionType">
		<xs:sequence>
			<xs:element name="count" type="xs:positiveInteger" minOccurs="0" />
			<xs:element name="maxTime" type="xs:positiveInteger" minOccurs="0" />
			<xs:element name="outputFile" type="xs:string" minOccurs="0" />
			<xs:element name="errorFile" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SecurityType">
		<xs:attribute name="file" type="xs:string" />
	</xs:complexType>
	<!--unicoreProcess element has 4 childs: processReference element which represents a process defined elsewhere, unicoreDirPath
	which represents the unicore client configuration directory, keyFilePath which represnets de unicore cliente certificate file and
	the unicoreOption which represent a unicore site options-->
	<xs:complexType name="unicoreProcessType">
		<xs:sequence>
			<xs:element ref="processReference" />
			<xs:element name="unicoreDirPath" type="FilePathType" minOccurs="0" />
			<xs:element name="keyFilePath" type="FilePathType" minOccurs="0" />
			<xs:element name="unicoreOption" type="unicoreOptionType" minOccurs="0" />
			<xs:element name="fileTransferDeploy" type="FileTransferStructureType" minOccurs="0" maxOccurs="1" />
			<xs:element name="fileTransferRetrieve" type="FileTransferRetrieveStructureType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
		<xs:attribute name="class" type="xs:string" use="required" fixed="org.objectweb.proactive.core.process.unicore.UnicoreProcess" />
		<xs:attribute name="keypassword" type="xs:string" use="optional" />
		<xs:attribute name="jobname" type="xs:string" use="optional" default="ProActiveUnicoreJob" />
		<xs:attribute name="submitjob" type="xs:boolean" use="optional" default="true" />
		<xs:attribute name="savejob" type="xs:boolean" use="optional" default="false" />
		<!--xs:attribute name="closeStream" type="CloseStreamType" use="optional"/-->
	</xs:complexType>
	<!--unicoreOption has 2 childs: unicoreUsiteType represents the Unicore site, unicoreVsiteType represents the virtual site
	within the Unicore site. Notice that not all unicore features are supported. -->
	<xs:complexType name="unicoreOptionType">
		<xs:sequence>
			<xs:element name="usite" type="unicoreUsiteType" minOccurs="0" />
			<xs:element name="vsite" type="unicoreVsiteType" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="unicoreUsiteType">
		<xs:attribute name="name" type="xs:string" use="optional" />
		<xs:attribute name="url" type="xs:string" use="required" />
		<xs:attribute name="type" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="CLASSIC" />
					<xs:enumeration value="REGISTRY" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="unicoreVsiteType">
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="nodes" type="xs:string" use="optional" />
		<xs:attribute name="processors" type="xs:string" use="optional" />
		<xs:attribute name="memory" type="xs:string" use="optional" />
		<xs:attribute name="runtime" type="xs:string" use="optional" />
		<xs:attribute name="priority" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="normal" />
					<xs:enumeration value="high" />
					<xs:enumeration value="low" />
					<xs:enumeration value="development" />
					<xs:enumeration value="whenever" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="hierarchicalProcessType">
		<xs:sequence>
			<xs:element ref="processReference" />
			<xs:element name="hierarchicalReference" type="ProcessReferenceType" />
			<xs:element ref="commandPath" minOccurs="0" />
			<xs:element name="fileTransferDeploy" type="FileTransferStructureType" minOccurs="0" maxOccurs="1" />
			<xs:element name="fileTransferRetrieve" type="FileTransferRetrieveStructureType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
		<xs:attribute name="class" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="org.objectweb.proactive.core.process.ssh.SSHHierarchicalProcess" />
					<xs:enumeration value="org.objectweb.proactive.core.process.ssh.RSHHierarchicalProcess" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="closeStream" type="CloseStreamType" use="optional" />
		<xs:attribute name="username" type="xs:string" use="optional" />
		<xs:attribute name="hostname" type="xs:string" use="required" />
		<xs:attribute name="internal_ip" type="xs:string" use="optional" />
	</xs:complexType>
	<xs:complexType name="NGProcessType">
		<xs:sequence>
			<xs:element ref="environment" minOccurs="0" />
			<xs:element ref="processReference" />
			<xs:element ref="commandPath" minOccurs="0" />
			<xs:element name="fileTransferDeploy" type="FileTransferStructureType" minOccurs="0" maxOccurs="1" />
			<xs:element name="fileTransferRetrieve" type="FileTransferRetrieveStructureType" minOccurs="0" maxOccurs="1" />
			<xs:element name="ngOption" type="NGOptionType" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="class" type="xs:string" use="required" fixed="org.objectweb.proactive.core.process.nordugrid.NGProcess" />
		<xs:attribute name="closeStream" type="CloseStreamType" use="optional" />
		<xs:attribute name="hostname" type="xs:string" use="required" />
		<xs:attribute name="queue" type="xs:string" use="optional" />
		<xs:attribute name="jobname" type="xs:string" use="optional" />
	</xs:complexType>
	<!--globusOption element has one child count element-->
	<xs:complexType name="NGOptionType">
		<xs:sequence>
			<xs:element name="executable" type="FilePathType" minOccurs="0" />
			<xs:element name="count" type="xs:positiveInteger" minOccurs="0" />
			<xs:element name="outputFile" type="xs:string" minOccurs="0" />
			<xs:element name="errorFile" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<!-- mpiProcessType -->
	<xs:complexType name="mpiProcessType">
		<xs:sequence>
			<xs:element minOccurs="1" ref="commandPath" />
			<xs:element minOccurs="1" name="mpiOptions" type="mpiOptionsType" />
		</xs:sequence>
		<xs:attribute fixed="org.objectweb.proactive.core.process.mpi.MPIDependentProcess" name="class" type="xs:string" use="required" />
		<xs:attribute name="mpiFileName" type="xs:string" use="required" />
		<xs:attribute name="hostsFileName" type="xs:string" use="optional" />
		<xs:attribute name="mpiCommandOptions" type="xs:string" use="optional" />
	</xs:complexType>
	<!--mpiOptions-->
	<xs:complexType name="mpiOptionsType">
		<xs:sequence>
			<xs:element minOccurs="1" name="processNumber" type="xs:string" />
			<xs:element minOccurs="1" name="localRelativePath" type="FilePathType" />
			<xs:element minOccurs="0" name="remoteAbsolutePath" type="FilePathType" />
		</xs:sequence>
	</xs:complexType>
	<!-- end mpiOptions-->
	<!-- end of mpiProcessType -->
	<!-- dependentProcessSequenceType -->
	<xs:complexType name="dependentProcessSequenceType">
		<xs:sequence>
			<xs:choice minOccurs="1">
				<xs:element name="serviceReference" type="ServiceReferenceType" />
				<xs:element ref="processReference" />
			</xs:choice>
			<xs:element maxOccurs="unbounded" ref="processReference" />
		</xs:sequence>
		<xs:attribute fixed="org.objectweb.proactive.core.process.DependentListProcess" name="class" type="xs:string" use="required" />
	</xs:complexType>
	<!-- end of dependentProcessSequenceType -->
	<!-- independentProcessSequenceType -->
	<xs:complexType name="independentProcessSequenceType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" ref="processReference" />
		</xs:sequence>
		<xs:attribute fixed="org.objectweb.proactive.core.process.IndependentListProcess" name="class" type="xs:string" use="required" />
	</xs:complexType>
	<!-- end of independentProcessSequenceType -->
</xs:schema>
