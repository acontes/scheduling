# URL of a ldap used for authentication
#example ldap://myLDAPHost
pa.ldap.url=

# path in the LDAP tree users
pa.ldap.userssubtree=

# attribute in user entries that represent user's login
pa.ldap.user.login.attr=

# DN of a group of unique Members containing users with 'users' permissions
pa.ldap.admins.group.dn=

# DN of a group of unique Members containing users with 'administrator' permissions
pa.ldap.users.group.dn=

# authentication method used to connect to LDAP : none (for anonymous connection), simple or a SASL method
pa.ldap.authentication.method=none

# login name used to perform ldap's binding
pa.ldap.bind.login=

# password used to perform ldap's binding
pa.ldap.bind.pwd=

# path of the java keystore file used by LDAP module for SSL/TLS authentication
pa.ldap.keystore.path=

# path of the java truststore file used by LDAP module for SSL/TLS authentication
pa.ldap.truststore.path=

# password for the keystore defined by pa.ldap.keystore.path
pa.ldap.keystore.passwd=

# password for the truststore defined by pa.ldap.truststore.path
pa.ldap.truststore.passwd=


#--------Authentication fal lback Properties ---------------------
#--use file login authentication and group membership checking----
#--verification if LDAP login fails-------------------------------

#check user password and group membership in login and group files
#(as performed in FileLogin method), if user is not found in LDAP.
#
#It use pa.[scheduler.core|RM].defaultloginfilename to authenticate user and
#pa.[scheduler.core|RM].defaultgroupfilename files to check user membership.
#In any case, no fallback is performed if user is found in LDAP but has entered an incorrect password).
#true or false.
pa.ldap.authentication.fallback=false

#check user group membership in group file (as performed in FileLogin method)
#if user is not found in its corresponding requested LDAP group (user or admin).
#true or false.
pa.ldap.group.membership.fallback=false
