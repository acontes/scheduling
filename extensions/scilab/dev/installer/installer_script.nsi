; Script generated by the HM NIS Edit Script Wizard.
; This script requires the following plugins:
; - nsisunz plugin: http://nsis.sourceforge.net/Nsisunz_plug-in
; - Xml plugin http://nsis.sourceforge.net/XML_plug-in
; - the extensions.zip containing all scilab scripts must be in the same dir as this script
; - the installer scilab-5.3.0.exe for Win32 must be in the same dir as this script

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "ProActive for Scilab"
!define PRODUCT_VERSION ""
!define PRODUCT_PUBLISHER "INRIA - Oasis Team"
!define PRODUCT_WEB_SITE "http://proactive.inria.fr"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\scilab-5.3.0.exe"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"

!include "XML.nsh"

; Scheduler Location DirRequest
!define TXT_SCHEDIR "Field 3"

; MUI 1.67 compatible ------
!include "MUI.nsh"

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall.ico"

; Additional install option script
!define PAGE_FILE "required.ini"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; License page
!insertmacro MUI_PAGE_LICENSE "..\..\..\..\LICENSE.txt"

; The page that asks the user to provide additional information
Page Custom RequiredPage RequiredLeave

; Directory page
!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
;!define MUI_FINISHPAGE_RUN "$INSTDIR\scilab-5.3.0.exe"
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

; MUI end ------


############################
Var SchedClientLocation
############################

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "ProActiveForScilabSetup.exe"
InstallDir "$PROGRAMFILES\${PRODUCT_NAME}"
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails show
ShowUnInstDetails show

; Sets default values
Function RequiredPage
  ReserveFile ${PAGE_FILE}
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT ${PAGE_FILE}

  # Set default location for Scheduler 3.0.1 Client
  !insertmacro MUI_INSTALLOPTIONS_WRITE ${PAGE_FILE} "${TXT_SCHEDIR}" State "C:\ProActiveScheduling-3.0.0_client-win32"

  # Display the custom page
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY ${PAGE_FILE}
FunctionEnd

; Read user values
Function RequiredLeave
 ; Read values given by the user
 !insertmacro MUI_INSTALLOPTIONS_READ $R1 ${PAGE_FILE} "${TXT_SCHEDIR}" State
  ${If} $R1 == ""
    MessageBox MB_OK "Please enter a valid Scheduler Client location"
     Abort
  ${Else}
    StrCpy $SchedClientLocation $R1
    
    IfFileExists "$SchedClientLocation\config\security.java.policy-client" PolicyExistLabel PolicyNotExistLabel

    PolicyNotExistLabel:
    MessageBox MB_OK "The ProActive Scheduler 3.0.0 Client must contain config\security.java.policy-client file"
     Abort

    PolicyExistLabel:
  ${EndIf}
FunctionEnd

Section "MainSection" SEC01
  SetOutPath "$INSTDIR"
  SetOverwrite ifnewer
  
  ; Copy extensions zip into install dir
  File "extensions.zip"
  
  ; Unzip
  ; Call plug-in. Push filename to ZIP first, and the dest. folder last.
  nsisunz::UnzipToLog "extensions.zip" "$SchedClientLocation"

  ; Always check result on stack
  Pop $0
  StrCmp $0 "success" ok
    DetailPrint "$0" ;print error message to log
  ok:

  ; Check to see if already installed
  ReadRegStr $R0 HKLM "SOFTWARE\Scilab\scilab-5.3.0" "SCIPATH"
  IfFileExists $R0 InstalledLabel NotInstalledLabel
  
  NotInstalledLabel:
  MessageBox MB_OK "Scilab 5.3.0 is required, please follow the installation instructions"
  ; Copy the installer
  File "scilab-5.3.0.exe"
  ; If Scilab is not installed launch the installer
  ExecWait "scilab-5.3.0.exe"
  
  ReadRegStr $R0 HKLM "SOFTWARE\Scilab\scilab-5.3.0" "SCIPATH"
  IfFileExists $R0 InstalledLabel StillNotInstalledLabel

  StillNotInstalledLabel:
  MessageBox MB_OK "Please reinstall Scilab 5.3.0"
  Goto NotInstalledLabel
  
  InstalledLabel:
  ; $R0 contains the Scilab install dir, use this location to find \etc\jvm_options.xml and add some properties
  
  ; Check if the \etc\jvm-options.xml exists
  IfFileExists "$R0\etc\jvm_options.xml" FileExistLabel FileNotExistLabel
  
  FileNotExistLabel:
  MessageBox MB_OK "Unable to locate $R0\etc\jvm_options.xml"
   Abort
   
  FileExistLabel:
  
  Push "$R0\etc\jvm_options.xml"
  Push "java.security.manager"
  Call FileSearch
  Pop $0 #Number of times found throughout
  Pop $1 #Number of lines found on

  StrCmp $0 0 +2
  Goto OkFileModified
  
	${xml::LoadFile} "$R0\etc\jvm_options.xml" $0
	;MessageBox MB_OK "xml::LoadFile$\n$$0=$0"

	${xml::RootElement} $0 $1
	;MessageBox MB_OK "xml::RootElement$\n$$0=$0$\n$$1=$1"

        ${xml::FirstChildElement} "" $0 $1
	;MessageBox MB_OK "xml::FirstChildElement$\n$$0=$0$\n$$1=$1"
	
	${xml::CreateNode} '<option value="-Djava.security.manager" />' $R1
	;MessageBox MB_OK "xml::xml::CreateNode$\n$$0=$0$\n$$1=$1"
	
	${xml::InsertBeforeNode} "$R1" $0
	;MessageBox MB_OK "xml::InsertBeforeNode$\n$$0=$0"
	
	${xml::CreateNode} '<option value="-Djava.security.policy=$SchedClientLocation\config\security.java.policy-client" />' $R1
	;MessageBox MB_OK "xml::xml::CreateNode$\n$$0=$0$\n$$1=$1"
	
	${xml::InsertAfterNode} "$R1" $0
	;MessageBox MB_OK "xml::InsertBeforeNode$\n$$0=$0"
	
	${xml::SaveFile} "$R0\etc\jvm_options.xml" $0
	;MessageBox MB_OK "xml::SaveFile$\n$$0=$0"
	
	${xml::Unload}
	
  OkFileModified:
SectionEnd

Section -AdditionalIcons
  CreateDirectory "$SMPROGRAMS\${PRODUCT_NAME}"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk" "$INSTDIR\uninst.exe"
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY}" "" "$INSTDIR\scilab-5.3.0.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\scilab-5.3.0.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd


Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was successfully removed from your computer."
FunctionEnd

Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove $(^Name) and all of its components?" IDYES +2
  Abort
FunctionEnd

Section Uninstall
  Delete "$INSTDIR\uninst.exe"
  Delete "$INSTDIR\extensions.zip"
  Delete "$INSTDIR\scilab-5.3.0.exe"

  Delete "$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk"

  RMDir "$SMPROGRAMS\${PRODUCT_NAME}"
  RMDir "$INSTDIR"

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY}"
  SetAutoClose true
SectionEnd

#####################

Function FileSearch
Exch $R0 ;search for
Exch
Exch $R1 ;input file
Push $R2
Push $R3
Push $R4
Push $R5
Push $R6
Push $R7
Push $R8
Push $R9

  StrLen $R4 $R0
  StrCpy $R7 0
  StrCpy $R8 0

  ClearErrors
  FileOpen $R2 $R1 r
  IfErrors Done

  LoopRead:
    ClearErrors
    FileRead $R2 $R3
    IfErrors DoneRead

    IntOp $R7 $R7 + 1
    StrCpy $R5 -1
    StrCpy $R9 0

    LoopParse:
      IntOp $R5 $R5 + 1
      StrCpy $R6 $R3 $R4 $R5
      StrCmp $R6 "" 0 +4
        StrCmp $R9 1 LoopRead
          IntOp $R7 $R7 - 1
          Goto LoopRead
      StrCmp $R6 $R0 0 LoopParse
        StrCpy $R9 1
        IntOp $R8 $R8 + 1
        Goto LoopParse

  DoneRead:
    FileClose $R2
  Done:
    StrCpy $R0 $R8
    StrCpy $R1 $R7

Pop $R9
Pop $R8
Pop $R7
Pop $R6
Pop $R5
Pop $R4
Pop $R3
Pop $R2
Exch $R1 ;number of lines found on
Exch
Exch $R0 ;output count found
FunctionEnd