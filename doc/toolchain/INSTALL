= Documentation toolchain update = 
1. Commit your modification into the svn repository
2. Create a new tag:
svn copy svn+ssh://scm.gforge.inria.fr/svn/proactive/documentation/trunk svn+ssh://scm.gforge.inria.fr/svn/proactive/documentation/tags/docchain_x.y.z -m "my commit message"
where x.y.z is the next toolchain version.
3. Run "build toolchain"  from the compile folder. The files generated are
placed in "built" in the main folder. 
4. Copy the files inside "built" into the "doc/toolchain" directory of your project
5. Commit the toolchain updating indicating its version (x.y.z)



= New Documentation install =
1. See above
2. See above

3. Create a file containg the targets necessary (e.g. manual.xml) for the 
   documentation in the doc foloder. 
   Define the documentation title, source folder and other ant properties
   in manual.xml. To create manual.xml you can modify the example pa.xml. 
   doc.xml defines a set of ant targets that can be used (manualHtml, manualSingleHtml,
   manualPdf,etc) thorugh subant inside manual.xml. doc.xml does not define the basic 
   javadoc targets.
   
   The import sequence is the following:
    -> means ant import
  
   compile/build.xml -> doc/manual.xml -subant targets->  doc/toolchain/doc.xml -> doc/toolchain/doc_macros.xml -> doc/toolchain/doc_paths.xml

To see an example of a ant file examine pa.xml
    
Several documentation projects can coexist at the same time in the same project by importing
more than one target definition file (manual.xml) in build.xml. The files need to define different
manual names (the name property of the project tag), different xml source folders, and different  manual file names. 
