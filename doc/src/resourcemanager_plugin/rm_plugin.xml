<?xml version="1.0" encoding="utf-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="Resource_Manager_plugin"><info><title>Resource Manager's Eclipse Plugin</title></info>
<!--  <!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN" "../docbook.dtd">  -->	
	<para>
		<emphasis role="bold">
		Resource Manager Eclipse Plugin</emphasis> is a <emphasis role="bold">graphical client</emphasis>
		for remote monitoring and control of the ProActive Resource Manager. This stand alone application
		allows you to perform administrative actions on Resource Manager, deployment and monitoring
		of computing nodes, creation of node sources, removal of nodes.
	</para>
	<para>
	The Resource Manager Eclipse Plugin is available in two forms :
	</para>
	<itemizedlist>
		<listitem>
			<para>
			A<emphasis role="bold"> Java stand alone application</emphasis> based on
			<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://wiki.eclipse.org/index.php/Rich_Client_Platform">
			Eclipse Rich Client Platform (RCP)
			</link> , available for any platform (Windows, Linux, Mac OSX, Solaris...)
			</para>
		</listitem>
		<listitem>
			<para>A set of <emphasis role="bold"> <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.eclipse.org">
			Eclipse</link> plugins</emphasis>: with all the functionalities within the stand
			alone application.
			</para>
		</listitem>
	</itemizedlist>

<section xml:id="Starting_RM_GUI"><info><title>Starting the Resource Manager Graphical User Interface</title></info>
		<para>
			Depending on the way you get the RM plugin, just follow one of this step :
			<itemizedlist>
				<listitem><para>
					<emphasis role="bold">If you are using the stand alone application</emphasis>, just start it using the
					provided executable. ("ResourceManager" on unix, "ResourceManager.exe" on Windows).
					</para>
				</listitem>
				<listitem>
				<para>
					<emphasis role="bold">If you are using the Eclipse plugins set</emphasis>, just install it as an eclipse plugin
					and restart Eclipse. Then select Resource Manager Perspective.
					</para>
				</listitem>
			</itemizedlist>
			Then, <emphasis role="bold">Window-&gt;Open Perspective-&gt;Other...-&gt;Resource Manager</emphasis>
			(it could be already opened as it is the default perspective).
		</para>
		<para>
			Once started, the first screen displayed is the following one :
			<figure xml:id="Resources_Manager_Welcome_screen"><info><title>Resource Manager startup screen</title></info>
				<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="55%" contentdepth="55%"  fileref="resourcemanager_plugin/pics/startup.png" format="PNG"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
	</section>
	<section xml:id="Connect_RM_GUI"><info><title>Connect to an existing Resource Manager</title></info>
		<para>
			A Resource Manager may already be started before connecting the Scheduler GUI. If no RM has been started, please refer
			to <xref linkend="RM_start"/>.
		</para>
		<para>
		Right click on Resource Explorer area, a pop-up menu with one activated action appears "connect a Resource Manager", 
		click on this action, a dialog box appears :
		</para>
		<figure xml:id="rm_connection_screen"><info><title>Connection screen</title></info>
				<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="80%" contentdepth="80%"  fileref="resourcemanager_plugin/pics/rm_connect.png" format="PNG"/>
					</imageobject>
				</mediaobject>
		</figure>
		<para>
			Enter the URL of existing Resource Manager and login information.
			The URL is composed of the protocol, the host name on which the RM is started and the port on
			which it is listening. Ticking "log as admin" check box allows to perform administrator actions later
			such as management of nodes and node sources, shutdown of resource manager and others. Regular users
			can only get information about resources and their states.
		</para>
		<para>
			You are now connected and ready to perform administrative actions on the remote Resource Manager.
		</para>
	</section>
	<section xml:id="RM_main_view"><info><title>Resource Manager main view</title></info>
		<para>
			Once you are connected you will see all the information about RM resources.
		</para>
		<figure xml:id="main_screen"><info><title>Main screen</title></info>
			<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="65%" contentdepth="65%"  fileref="resourcemanager_plugin/pics/tree_view.png" format="PNG"/>
				</imageobject>
			</mediaobject>
		</figure>
			<section xml:id="rm_explore_view"><info><title>Icons and menu</title></info>
			<para>This view presents all nodes handled
			by Resource Manager, their URL, and their states. This view uses a tree representation, on the tree's root
			you can see different node sources, At the second level of the tree, you can see different host names, then finally, 
			nodes deployed on this host. For each node, you can see its URL, and its state represented by an icon:
			</para>
			<itemizedlist>
				<listitem>
					<mediaobject>
						<imageobject>
							<imagedata scalefit="1" fileref="resourcemanager_plugin/pics/free.gif" format="GIF"/>
						</imageobject>
					</mediaobject>
					<para>
					Node is <emphasis role="bold">free</emphasis>, ready to be provided to Scheduler to perform a task.
					</para>	
				</listitem>
				<listitem>
					<mediaobject>
						<imageobject>
						<imagedata scalefit="1" fileref="resourcemanager_plugin/pics/busy.gif" format="GIF"/>
					</imageobject>
				</mediaobject>
					<para>
					Node is <emphasis role="bold">busy</emphasis>, it currently performs a task execution.</para>
				</listitem>
				<listitem>
				<mediaobject>
				<imageobject>
						<imagedata scalefit="1" fileref="resourcemanager_plugin/pics/to_release.gif" format="GIF"/>
				</imageobject>
				</mediaobject>
				<para>
					Node is <emphasis role="bold">to release</emphasis>, it currently performs a task execution,
					and has to be removed at the end of task's execution.
					</para>
				</listitem>
				<listitem>
					<mediaobject>				
					<imageobject>
						<imagedata scalefit="1" fileref="resourcemanager_plugin/pics/down.gif" format="GIF"/>
				</imageobject>
				</mediaobject>
				<para>
					Node is <emphasis role="bold">down</emphasis> it's unreachable by Resource Manager or node is broken. A failure
					has occurred on the node (network failure, computer down, Java runtime that manages the node is down...).
					</para>
				</listitem>								
			</itemizedlist>
			<para>
			This view present a tool bar with different actions available :
			</para>
			<figure xml:id="rm_explorer_view_toolbar"><info><title>Resource Explorer view tool bar</title></info>
			<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="140%" contentdepth="140%"  fileref="resourcemanager_plugin/pics/RM_panel.jpg" format="JPG"/>
				</imageobject>
			</mediaobject>
		</figure>
			<itemizedlist>
				<listitem><para>
					<emphasis role="bold">[1] Disconnect</emphasis> Leave current Resource Manager, perform disconnection.</para>	
				</listitem>
				<listitem><para>
					<emphasis role="bold">[2] Create Node Source</emphasis> Create a new static node source, with a deployment descriptor,
					or a peer to peer node source. See below.</para>
				</listitem>
				<listitem><para>
					<emphasis role="bold">[3] Remove Node Source</emphasis> Remove a node source from Resource Manager, and release all its nodes.</para> 
				</listitem>
				<listitem><para>
					<emphasis role="bold">[4] Shutdown Resource Manager</emphasis> Stop Resource Manager application, remove all the nodes, and stop
					Resource Manager daemon.</para>  
				</listitem>
				<listitem><para>
					<emphasis role="bold">[5] Add nodes</emphasis> Add nodes to Resource Manager, we can deploy and add nodes by a GCM deployment 
					descriptor, or already deployed (running) nodes, using their URL.</para>
				</listitem>
				<listitem><para>
					<emphasis role="bold">[6] Remove nodes</emphasis> Remove nodes that are handled by Resource Manager</para>
				</listitem>
			</itemizedlist>
			<para>
			All these actions are explained below.
			</para>
		</section>
		<section xml:id="rm_gui_other_views"><info><title>Other views</title></info>
			<para>
			Beside tree view there are two other views that display the same information differently:
			</para>
			<itemizedlist>
				<listitem>
					<para>
					a table view where each line corresponds to one node

					<figure xml:id="tab_view"><info><title>Tab view</title></info>
						<mediaobject>
							<imageobject>
								<imagedata scalefit="1" width="65%" contentdepth="65%"  fileref="resourcemanager_plugin/pics/tab_view.png" format="PNG"/>
							</imageobject>
						</mediaobject>
					</figure>
					</para>
				</listitem>
				<listitem>
					<para>
					a compact view where all information is displayed in a compact form

					<figure xml:id="compact_view"><info><title>Compact view</title></info>
						<mediaobject>
							<imageobject>
								<imagedata scalefit="1" width="65%" contentdepth="65%"  fileref="resourcemanager_plugin/pics/compact_view.png" format="PNG"/>
							</imageobject>
						</mediaobject>
					</figure>
					</para>
				</listitem>
			</itemizedlist>
		</section>
		<section xml:id="rm_gui_create_ns"><info><title>Create a Node Source</title></info>
			<para>
			This action allows to create a new Node Source in Resource Manager.
			A Node Source is an RM's component that is able to handle a set of nodes.
			See <xref linkend="nodes_sources"/>.
			In the dialog fill in the node source name, then select infrastructure type and policy.
			<figure xml:id="rm_create_ns"><info><title>Node Source creation dialog box</title></info>
				<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="80%" contentdepth="80%"  fileref="resourcemanager_plugin/pics/create_nodesource_dialog.png" format="PNG"/>
				</imageobject>
				</mediaobject>
			</figure>
			</para>

			<section xml:id="rm_gui_gcm_infrastructure"><info><title>GCM infrastructure</title></info>
				<para>If GCM infrastructure is chosen select a GCM deployment descriptor described an underlying infrastructure.
				You can find more information concerning GCM deployment descriptors	in chapter : <xref linkend="RM_GCM"/>
				</para>
				<figure xml:id="pic_gcm_infrastructure"><info><title>GCM infrastructure configuration panel</title></info>
					<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="80%" contentdepth="80%"  fileref="resourcemanager_plugin/pics/gcm_infrastructure.png" format="PNG"/>
					</imageobject>
					</mediaobject>
				</figure>
			</section>
			<section xml:id="rm_gui_gcm_customized_infrastructure"><info><title>GCM Customized infrastructure</title></info>
				<para>If GCM Customized infrastructure is chosen select a GCM deployment template that describes how to deploy one node
				to the host (for example see config/deployment/deployment_ssh_hosts_list_template.xml). The template has to use HOST
				java variable contract. This variable will be defined at runtime by the infrastructure manager. Host list should be a file
				contained host names.
				</para>
				<figure xml:id="pic_gcm_customized_infrastructure"><info><title>GCM Customized infrastructure configuration panel</title></info>
					<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="80%" contentdepth="80%"  fileref="resourcemanager_plugin/pics/gcm_customized_infrastructure.png" format="PNG"/>
					</imageobject>
					</mediaobject>
				</figure>
			</section>
			<section xml:id="rm_gui_static_policy"><info><title>Node source static policy</title></info>
				<para>If static policy is selected node source will deploy all nodes once and never remove them.
				</para>
				<figure xml:id="pic_static_policy"><info><title>Static policy configuration panel</title></info>
					<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="80%" contentdepth="80%"  fileref="resourcemanager_plugin/pics/static_policy.png" format="PNG"/>
					</imageobject>
					</mediaobject>
				</figure>				
			</section>
			<section xml:id="rm_gui_time_slot"><info><title>Node source time slot policy</title></info>
				<para>Time slot policy acquires nodes only at "Acquire time" and releases them at "Release time".
				This action could be done periodically if period is specified. Preemptive option set to true means that
				nodes will be released despite the fact that some jobs are still running.
				</para>
				<figure xml:id="pic_time_slot_policy"><info><title>Time slot policy configuration panel</title></info>
					<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="80%" contentdepth="80%"  fileref="resourcemanager_plugin/pics/time_slot_policy.png" format="PNG"/>
					</imageobject>
					</mediaobject>
				</figure>
			</section>
			<section xml:id="rm_gui_idle_policy"><info><title>"Release resources when scheduler is idle" policy</title></info>
				<para>This policy may be useful if there is no need to keep nodes alive permanently. Nodes will be released after specified
				"idle time". This policy will be a listener of the scheduler so its URL, user name and password have to be
				specified. Preemptive parameter as always indicates the way of releasing nodes. If it's true nodes will be released
				preemptively without waiting while all tasks will finish their execution.
				</para>
				<figure xml:id="pic_idle_policy"><info><title>"Release resources when scheduler is idle" policy configuration panel</title></info>
					<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="80%" contentdepth="80%"  fileref="resourcemanager_plugin/pics/idle_policy.png" format="PNG"/>
					</imageobject>
					</mediaobject>
				</figure>
			</section>
			<section xml:id="rm_gui_scheduler_loading_policy"><info><title>Scheduler loading policy</title></info>
				<para>This policy allows to configure the number of resources which will be always enough for
				scheduler. Nodes are acquired and released according to scheduler loading factor which is a number of tasks
				per node. Is also required to provide scheduler URL, user name and password. It it important to
				correctly configure maximum and minimum nodes which this policy will try to hold. Maximum number should not be
				greater than potential nodes number which is possible to deploy to underlying infrastructure. If there are more
				currently acquired nodes than necessary policy will release them one by one with a "release period" delay.
				This smooth release procedure is implemented because deployment time is greater that release time, so
				policy will not spend all its time trying to deploy nodes - it should esteem each deployed node.
				</para>
				<figure xml:id="pic_scheduler_loading_policy"><info><title>Scheduler loading policy configuration panel</title></info>
					<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="80%" contentdepth="80%"  fileref="resourcemanager_plugin/pics/scheduler_loading_policy.png" format="PNG"/>
					</imageobject>
					</mediaobject>
				</figure>
			</section>
		</section>

		<section xml:id="rm_gui_remove_ns"><info><title>Remove a Node Source</title></info>
			<para>
			In order to remove a node source select its name in removal dialog and press OK :
			</para>
			<figure xml:id="rm_create_d_ns"><info><title>Node Source removal dialog box</title></info>
				<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="70%" contentdepth="70%"  fileref="resourcemanager_plugin/pics/rm_remove_ns_dialog.png" format="PNG"/>
				</imageobject>
				</mediaobject>
			</figure>
			<para>
			<emphasis role="bold">Warning</emphasis> Default node source created at RM's startup cannot be removed. But it is possible
			to remove all nodes from it. You can tick the check-box  <emphasis role="bold">preemptively</emphasis>. If checked, all nodes handled by the Node source
			are immediately removed (including busy and to release nodes). If preemptively is not ticked, and node Source has busy nodes, Resource Manager put these 
			busy nodes in to release state, and wait tasks ends on these nodes, before removing these 'to release' nodes, 
			and  finally remove the Node Source. 
			</para>
		</section>
		<section xml:id="rm_add_node"><info><title>Add nodes to a Node Source</title></info>
			<para>
			You can add nodes to an existing Node Source :
			</para>
			<figure xml:id="rm_add_nodes_dialog"><info><title>RM add nodes dialog box</title></info>
				<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="70%" contentdepth="70%"  fileref="resourcemanager_plugin/pics/rm_add_node_dialog.png" format="PNG"/>
				</imageobject>
				</mediaobject>
			</figure>
			<section xml:id="rm_add_node_url"><info><title>Add node by URL</title></info>
				<figure xml:id="rm_add_node_url_dialog"><info><title>Add Node by URL</title></info>
					<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="70%" contentdepth="70%"  fileref="resourcemanager_plugin/pics/rm_add_node_url.png" format="PNG"/>
					</imageobject>
					</mediaobject>
				</figure>
				<para>
				Choose a Node Source's name from your nodes sources list, and fill the node's URL to add. 
				Node will be added and managed by the node source that you have chosen.
				</para>
			</section>
			<section xml:id="rm_add_node_deployment_descriptor"><info><title>Add node by a deployment descriptor</title></info>
				<figure xml:id="rm_add_node_GCM_dialog"><info><title>Add Node by GCM deployment descriptor</title></info>
					<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="70%" contentdepth="70%"  fileref="resourcemanager_plugin/pics/rm_add_nodes_GCM_dialog.png" format="PNG"/>
					</imageobject>
					</mediaobject>
				</figure>
				<para>
				Choose a Node Source's name from your nodes sources list, and choose a GCM deployment file to deploy. 
				Resource Manager will perform deployment of your GCMD, and new nodes deployed are added to the selected Node Source.
				For more informations about GCM deployment, please refer to chapter : <xref linkend="RM_GCM"/>
				</para>
				<para>
				<emphasis role="bold">Warning</emphasis> When nodes are added by GCM deployment descriptor it does not mean that they will be
				acquired right away. It is true only if this node source uses static acquisition policy. Otherwise nodes will be acquired
				at the moment they are needed according to the node source policy.
				</para>
			</section>
		</section>
		<section xml:id="rm_gui_remove_node"><info><title>Remove a node</title></info>
			<figure xml:id="rm_del_node_dialog"><info><title>node removal dialog</title></info>
				<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="70%" contentdepth="70%"  fileref="resourcemanager_plugin/pics/rm_remove_node_dialog.png" format="PNG"/>
				</imageobject>
				</mediaobject>
			</figure>
			<para>
			Choose the node to remove in the list. As explained below, node's removal can be preemptive or not. If you don't choose 
			a preemptive removal and node is busy, then node is just put in to release state, and will be removed at task's end.
			</para>
			<itemizedlist>
				<listitem><para>
				If the node to remove is handled by a Static node Source, and the node's Java Virtual Machine contains  only the node to remove
				(RM doesn't handle other node from the same JVM), the JVM is then killed.</para>
				</listitem>
				<listitem><para>
				If the node to remove is handled by a dynamic Node Source, 
				then the node's JVM is killed only if the node's removal is preemptive.
				</para> 
				</listitem>
			</itemizedlist>
		</section>
		<section xml:id="rm_gui_shutdown"><info><title>Shutdown</title></info>
			<figure xml:id="rm_shutdown_dialog"><info><title>RM shutdown dialog box</title></info>
				<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="70%" contentdepth="70%"  fileref="resourcemanager_plugin/pics/rm_shutdown_dialog.png" format="PNG"/>
				</imageobject>
				</mediaobject>
			</figure>
			<para>
			A dialog ask you to confirm RM's shutdown. All nodes are removed from Resource Manager. Node handled by static nodes sources are destroyed.
			Nodes handled by dynamic node source are released to their infrastructure.
			You can tick the check-box  <emphasis role="bold">Wait tasks ends on busy nodes</emphasis>. 
			If checked, and RM has busy nodes, Resource Manager put these busy nodes in to release state, and wait tasks ends on these nodes, before shutting down.
			Otherwise, shutdown is performed immediately even if there are busy nodes, tasks are interrupted on these busy nodes.
			</para>			
		</section>		
	</section>		
</chapter>
