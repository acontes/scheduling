<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="Resource_Manager_plugin">
<info><title>Resource Manager Graphical User Interface</title></info>
<!--  <!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN" "../docbook.dtd">  -->
	<para>
		<emphasis role="bold">
		Resource Manager Eclipse Plugin</emphasis> is a <emphasis role="bold">graphical client</emphasis>
		for remote monitoring and control of the ProActive Resource Manager. This stand alone application
		allows you to perform administrative actions on Resource Manager, deployment and monitoring
		of computing nodes, creation of node sources and removal of nodes.
	</para>
	<para>
		The Resource Manager Eclipse Plugin is available in two forms:
	</para>
	<itemizedlist>
		<listitem>
			<para>
			A <emphasis role="bold">Java stand alone application</emphasis> based on
			<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://wiki.eclipse.org/index.php/Rich_Client_Platform">
			Eclipse Rich Client Platform (RCP)
			</link>, available for any platform (Windows, Linux, Mac OSX, Solaris...).
			</para>
		</listitem>
		<listitem>
			<para>A set of <emphasis role="bold"> <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.eclipse.org">
			Eclipse</link> plugins</emphasis>: with all the functionalities of the stand
			alone application.
			</para>
		</listitem>
	</itemizedlist>

	<section xml:id="Starting_RM_GUI"><info><title>Launching the Resource Manager GUI</title></info>
		<para>
			Depending on the way you get the RM plugin, just follow one of these steps:
			<itemizedlist>
				<listitem><para>
					<emphasis role="bold">If you are using the stand alone application</emphasis>, just start it using the
					provided executable. ("ResourceManager" on unix, "ResourceManager.exe" on Windows).
					</para>
				</listitem>
				<listitem>
				<para>
					<emphasis role="bold">If you are using the Eclipse plugins set</emphasis>, install it as an eclipse plugin
					and restart Eclipse. To do this, copy all the jar files from the <literal>plugins/</literal> directory of your Resource Manager RCP distirbution into
					the <literal>plugins/</literal> directory of your Eclipse distribution and restart Eclipse.
					</para>
				</listitem>
			</itemizedlist>
			Then, go to <emphasis role="bold">Window-&gt;Open Perspective-&gt;Other...-&gt;Resource Manager</emphasis>
			(it could be already opened as it is the default perspective).
		</para>
		<para>
			Once started, the first screen displayed is the following one:
			<figure xml:id="Resources_Manager_Welcome_screen"><info><title>Resource Manager startup screen</title></info>
				<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="55%" contentdepth="55%"  fileref="images/png/plugin/startup.png" format="PNG"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
	</section>
	<section xml:id="Connect_RM_GUI"><info><title>Connect to an existing Resource Manager</title></info>
		<para>
			A Resource Manager has to be already started before connecting the Resource Manager GUI. If no RM has been started, please refer
			to <xref linkend="RM_start"/>.
		</para>
		<para>
			Normally, when starting the GUI, a connection dialog box should appear on top of the main screen.
			If not, right click on Resource Explorer area and select "Connect" on the pop-up menu.
			Clicking on this action, the following dialog box will show up:
		</para>
		<figure xml:id="rm_connection_screen"><info><title>Connection screen</title></info>
				<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="80%" contentdepth="80%"  fileref="images/png/plugin/rm_connect.png" format="PNG"/>
					</imageobject>
				</mediaobject>
		</figure>
		<para>
			Enter the URL of an existing Resource Manager and login information. 
			You can use for example "demo" as a login and "demo" again as a password. This user is an administrator so you will
			be able to perform any action such as management of nodes and node sources, shutdown of resource manager and so on... without any permission problems.
			Regular users can only get information about resources and their states.
			The URL is composed of the protocol, the host name on which the RM is started and the port on
			which it is listening.
		</para>
		<para>
			You are now connected and ready to perform administrative actions on the remote Resource Manager.
		</para>
	</section>
	<section xml:id="RM_main_view"><info><title>Resource Manager main views</title></info>
		<section xml:id="RM_tree_view"><info><title>Tree view</title></info>
			<para>
				Once you are connected, you will see all the information about RM resources through this view.
				This view presents all nodes handled by Resource Manager, their URLs, and their states. It uses a tree representation: tree's roots
				represents node sources, the second level displays host names and, finally, leafs show
				nodes deployed on this host. For each node, you can see its URL, and its state represented by an <link linkend="rm_toolbar">icon</link>.
			</para>
			<figure xml:id="main_screen"><info><title>Tree view</title></info>
				<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="65%" contentdepth="65%"  fileref="images/png/plugin/tree_view.png" format="PNG"/>
					</imageobject>
				</mediaobject>
			</figure>

			<para>
			</para>
		</section>
		<section xml:id="rm_gui_tab_view"><info><title>Tab view</title></info>
			<para>
			The <emphasis>table view</emphasis> is view where each line corresponds to one node.
			</para>
			<figure xml:id="tab_view"><info><title>Tab view</title></info>
				<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="65%" contentdepth="65%"  fileref="images/png/plugin/tab_view.png" format="PNG"/>
					</imageobject>
				</mediaobject>
			</figure>
		</section>
		<section xml:id="rm_gui_compact_view"><info><title>Compact view</title></info>
			<para>
			The <emphasis>compact view</emphasis> is a view where all nodes are displayed in a compact form. It is in particular very useful when
			you have a great number of nodes to monitor and you want a global view.
			</para>
			<figure xml:id="compact_view"><info><title>Compact view</title></info>
				<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="65%" contentdepth="65%"  fileref="images/png/plugin/compact_view.png" format="PNG"/>
					</imageobject>
				</mediaobject>
			</figure>
		</section>
		<section xml:id="rm_gui_topology_view"><info><title>Topology view</title></info>
			<para>
			The <emphasis>topology view</emphasis> visualizes nodes according to network latencies between them.
			This view allows to see groups of nodes close to each other, latencies between all the nodes and
			of course the information about free/busy nodes.
			</para>
			<figure xml:id="topology_view"><info><title>Compact view</title></info>
				<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="65%" contentdepth="65%"  fileref="images/png/plugin/topology_view.png" format="PNG"/>
					</imageobject>
				</mediaobject>
			</figure>
		</section>
		<section xml:id="rm_node_icons"><info><title>Node icons</title></info>
			<para>In every view, a node is represented by a round icon changing according to its state:</para>
			<itemizedlist>
				<listitem>
					<mediaobject>
						<imageobject>
							<imagedata scalefit="1" fileref="images/png/plugin/deploying.png" format="PNG"/>
						</imageobject>
					</mediaobject>
					<para>
					Node is <emphasis role="bold">deploying</emphasis>, its deployment has been triggered but the node didn't registered yet.
					</para>
				</listitem>
				<listitem>
					<mediaobject>
						<imageobject>
							<imagedata scalefit="1" fileref="images/png/plugin/lost.png" format="PNG"/>
						</imageobject>
					</mediaobject>
					<para>
					Node is <emphasis role="bold">lost</emphasis>. The deployment of the node failed. The node won't be added to the resource manager.
					</para>
				</listitem>
				<listitem>
					<mediaobject>
						<imageobject>
							<imagedata scalefit="1" fileref="images/png/plugin/configuring.png" format="PNG"/>
						</imageobject>
					</mediaobject>
					<para>
					Node is <emphasis role="bold">configuring</emphasis>. The node registered to the resource manager and is under configuration.
					This step can be time consuming depending above all on the nodes already managed by the resource manager.
					</para>
				</listitem>
				<listitem>
					<mediaobject>
						<imageobject>
							<imagedata scalefit="1" fileref="images/png/plugin/free.png" format="PNG"/>
						</imageobject>
					</mediaobject>
					<para>
					Node is <emphasis role="bold">free</emphasis>, ready to be provided for performing a task (to the Scheduler or another application).
					</para>
				</listitem>
				<listitem>
					<mediaobject>
						<imageobject>
						<imagedata scalefit="1" fileref="images/png/plugin/busy.png" format="PNG"/>
					</imageobject>
				</mediaobject>
					<para>
					Node is <emphasis role="bold">busy</emphasis>, it currently performs a task execution.</para>
				</listitem>
				<listitem>
				<mediaobject>
				<imageobject>
						<imagedata scalefit="1" fileref="images/png/plugin/to_release.png" format="PNG"/>
				</imageobject>
				</mediaobject>
				<para>
					Node is <emphasis role="bold">to be removed</emphasis>, it currently performs a task execution,
					and has to be removed at the end of this execution.
					</para>
				</listitem>
				<listitem>
					<mediaobject>
						<imageobject>
							<imagedata scalefit="1" fileref="images/png/plugin/down.png" format="PNG"/>
						</imageobject>
					</mediaobject>
					<para>
						Node is <emphasis role="bold">down</emphasis>, it is unreachable by Resource Manager or is broken. A failure
						has occurred on the node (network failed, computer got down, Java runtime that manages this node got down...).
					</para>
				</listitem>
			</itemizedlist>
		</section>
		<section xml:id="rm_toolbar"><info><title>Toolbar</title></info>
			<para>
			Every view provides a tool bar with different available actions:
			</para>
			<figure xml:id="rm_explorer_view_toolbar"><info><title>Resource Explorer view tool bar</title></info>
				<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="140%" contentdepth="140%"  fileref="images/png/plugin/RM_panel.png" format="PNG"/>
					</imageobject>
				</mediaobject>
			</figure>
			<itemizedlist>
				<listitem><para>
					<emphasis role="bold">[1] Connect</emphasis> - Open the connection dialiog box.</para>
				</listitem>
				<listitem><para>
					<emphasis role="bold">[2] Disconnect</emphasis> - Leave the current Resource Manager.</para>
				</listitem>
				<listitem><para>
					<emphasis role="bold">[3] Add node</emphasis> - Add an existing node to Resource Manager providing its URL.</para>
				</listitem>
				<listitem><para>
					<emphasis role="bold">[4] Remove node</emphasis> - Remove selected nodes. Using the tree view, it is possible for example to remove
					all the nodes belonging to a JVM, a host or a node source.</para>
				</listitem>
				<listitem><para>
					<emphasis role="bold">[5] Create Node Source</emphasis> - Create a new node source. See <xref linkend="rm_gui_create_ns"/>.</para>
				</listitem>
				<listitem><para>
					<emphasis role="bold">[6] Remove Node Source</emphasis> - Remove a node source from Resource Manager, and release all its nodes.</para>
				</listitem>
				<listitem><para>
					<emphasis role="bold">[7] Shutdown Resource Manager</emphasis> - Stop Resource Manager application, remove all the nodes, and stop
					Resource Manager daemon.</para>
				</listitem>
				<listitem><para>
					<emphasis role="bold">[8] Runtime information</emphasis> - Show runtime information in the form of graphics.</para>
				</listitem>
				<listitem><para>
					<emphasis role="bold">[9] Accouting information</emphasis> - Show accounting information in the form of graphics.</para>
				</listitem>
			</itemizedlist>
			<para>
			All these actions are explained hereafter.
			</para>
		</section>
	</section>
	<section xml:id="rm_gui_main_actions"><info><title>Main actions</title></info>
		<section xml:id="rm_gui_create_ns"><info><title>Create a Node Source</title></info>
			<para>
				This action allows to create a new Node Source in Resource Manager.
				A Node Source is a RM's component that is able to handle a set of nodes
				(See <xref linkend="nodes_sources"/>).
				In the dialog, fill in the node source name, then select infrastructure type and policy.
				<figure xml:id="rm_create_ns"><info><title>Node Source creation dialog box</title></info>
					<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="80%" contentdepth="80%"  fileref="images/png/plugin/create_nodesource_dialog.png" format="PNG"/>
					</imageobject>
					</mediaobject>
				</figure>
			</para>
			<para>In this section, we will not describe all infrastructures and policies since the descriptions of every parameter
			have already been given in <xref linkend="nodes_sources"/>. We will only give the example of the SSH infrastructure and the Scheduler loading policy.</para>

			<section xml:id="rm_gui_ssh_infrastructure"><info><title>SSH infrastructure example</title></info>
			  <para>
			    SSH Infrastructure provides a basic but functional way to acquire resources through an SSH connection.
			    Although such acquisition can be achieved using a GCM descriptor, this infrastructure can in some situations
			    be easier to use for SSH-only use-cases.
			  </para>
			  <para>
			    To acquire nodes, this infrastructure needs to start runtimes on remote hosts.
			    To do so, it needs to know some information, assumed to be true for all hosts:
			  <itemizedlist>
				  <listitem><para>
				  <emphasis role="bold">Rm Url</emphasis> - The resource manager's url that will be used by the deployed nodes to register by themself.
				  </para></listitem>
				  <listitem><para>
				  <emphasis role="bold">SSH Options</emphasis> - Options you can pass to the SSHClient executable ( -l inria to specify the user for instance )
				  </para></listitem>
				  <listitem><para>
				  <emphasis role="bold">Java Path</emphasis> - Path to the java executable on the remote hosts.
			      </para></listitem>
				  <listitem><para>
				  <emphasis role="bold">Scheduling Path</emphasis> - Path to the Scheduling/RM installation directory on the remote hosts.
				  </para></listitem>
				  <listitem><para>
				  <emphasis role="bold">Node Time Out</emphasis> - A duration after which one the remote nodes are considered to be lost.
				  </para></listitem>
			      <listitem><para>
				  <emphasis role="bold">Attempt</emphasis> - The number of time the resource manager tries to acquire a node for which one the deployment fails before discarding it forever.
				  </para></listitem>
				  <listitem><para>
				  <emphasis role="bold">Target OS</emphasis> - One of 'LINUX', 'CYGWIN' or 'WINDOWS' depending on the machines' ( in Hosts List file ) operating system.
				  </para></listitem>
				  <listitem><para>
				  <emphasis role="bold">Java Options</emphasis> - Java options appended to the command used to start the node on the remote host.
				  </para></listitem>
				  <listitem><para>
				  <emphasis role="bold">Rm Credentials Path</emphasis> - The absolute path of the 'rm.cred' file to make the deployed nodes able to register to the resource manager ( config/authentication/rm.cred ).
				  </para></listitem>
			      <listitem><para>
				  <emphasis role="bold">Hosts List</emphasis>: The path to a file containing the hosts on which resources should be acquired.
				  This file should contain one host per line, described as a host name or a public IP address, optionally followed by a positive
				  integer describing the number of runtimes to start on the related host (default to 1 if not specified). Example:
				  <screen><![CDATA[
rm.example.com
test.example.net 5
192.168.9.10 2
]]></screen>
			      </para></listitem>
			    </itemizedlist>
			  </para>
			  <figure xml:id="pic_ssh_infrastructure"><info><title>SSH infrastructure configuration panel</title></info>
			    <mediaobject>
			      <imageobject>
				<imagedata scalefit="1" width="80%" contentdepth="80%"  fileref="images/png/plugin/ssh_infrastructure.png" format="PNG"/>
			      </imageobject>
			    </mediaobject>
			  </figure>
				<tip>
					<para>
						In order to fill in all the fields at once, it is possible to load or to save a file with the list of parameters and values.
						This file should be of the following form:
						<programlisting language="sh">
# My comments
param1=value1
param2=value2
# and so on...</programlisting>
					</para>
				</tip>
			</section>
			<section xml:id="rm_gui_scheduler_loading_policy"><info><title>Scheduler loading policy</title></info>
				<para>This policy allows to configure the number of resources which will be always enough for the
				scheduler. Nodes are acquired and released according to scheduler loading factor which is a number of tasks
				per node. In the same manner as the previous policy, this one also requires scheduler URL, user name and password. It is important to
				correctly configure maximum and minimum nodes that this policy will try to hold. Maximum number should not be
				greater than potential nodes number which is possible to deploy to underlying infrastructure. If there are more
				currently acquired nodes than necessary, policy will release them one by one after having waited for a "release period" delay.
				This smooth release procedure is implemented because deployment time is greater than release one. Thus, this waiting time deters
				policy from spending all its time trying to deploy nodes.
				</para>
				<figure xml:id="pic_scheduler_loading_policy"><info><title>Scheduler loading policy configuration panel</title></info>
					<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="80%" contentdepth="80%"  fileref="images/png/plugin/loading_policy.png" format="PNG"/>
					</imageobject>
					</mediaobject>
				</figure>
				<note>
					<para>
						This policy is only available when using the Resource Manager with the ProActive Scheduler
					</para>
				</note>
				<tip>
					<para>
						In order to fill in all the fields at once, it is possible to load or to save a file with the list of parameters and values.
						This file should be of the following form:
						<programlisting language="sh">
# My comments
param1=value1
param2=value2
# and so on...</programlisting>
					</para>
				</tip>
			</section>
		</section>

		<section xml:id="rm_gui_remove_ns"><info><title>Remove a Node Source</title></info>
			<para>
			In order to remove a node source, select its name in removal dialog and press OK:
			</para>
			<figure xml:id="rm_create_d_ns"><info><title>Node Source removal dialog box</title></info>
				<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="70%" contentdepth="70%"  fileref="images/png/plugin/rm_remove_ns_dialog.png" format="PNG"/>
				</imageobject>
				</mediaobject>
			</figure>
		</section>
		<section xml:id="rm_add_node"><info><title>Add node by URL</title></info>
			<para>
			You can add existing node to any Node Source by providing its URL:
			</para>
			<figure xml:id="rm_add_node_url_dialog"><info><title>Add Node by URL</title></info>
				<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="70%" contentdepth="70%"  fileref="images/png/plugin/rm_add_node_url.png" format="PNG"/>
				</imageobject>
				</mediaobject>
			</figure>
			<para>
			Choose a Node Source's name from your nodes sources list, and fill the node's URL to add.
			Node will be added and managed by the node source that you have chosen.
			</para>
		</section>
		<section xml:id="rm_gui_remove_node"><info><title>Remove a node</title></info>
			<figure xml:id="rm_del_node_dialog"><info><title>Node removal dialog</title></info>
				<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="70%" contentdepth="70%"  fileref="images/png/plugin/rm_remove_node_dialog.png" format="PNG"/>
				</imageobject>
				</mediaobject>
			</figure>
			<para>
			Choose the node to remove in the list. As explained before, node's removal can be preemptive or not. If you don't choose
			a preemptive removal and if the node is busy, then it will just put to the "to remove" state, and will be removed at tasks' end.
			</para>
			<itemizedlist>
				<listitem><para>
				If the node to remove is handled by a Static node Source and the node's Java Virtual Machine contains only the node to remove
				(RM does not handle other node from the same JVM), then the JVM is killed.</para>
				</listitem>
				<listitem><para>
				If the node to remove is handled by a dynamic Node Source,
				then the node's JVM is killed only if the node's removal is preemptive.
				</para>
				</listitem>
			</itemizedlist>
		</section>
		<section xml:id="rm_gui_shutdown"><info><title>Shutdown</title></info>
			<figure xml:id="rm_shutdown_dialog"><info><title>RM shutdown dialog box</title></info>
				<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="70%" contentdepth="70%"  fileref="images/png/plugin/rm_shutdown_dialog.png" format="PNG"/>
				</imageobject>
				</mediaobject>
			</figure>
			<para>
			A dialog asks you to confirm RM's shutdown. All nodes are removed from Resource Manager. Node handled by static nodes sources are destroyed.
			Nodes handled by dynamic node source are released to their infrastructures.
			You can tick the check-box  <emphasis role="bold">Wait tasks ends on busy nodes</emphasis>.
			If checked, and RM has busy nodes, Resource Manager put these busy nodes to the "to remove" state, and wait tasks' end on these nodes, before shutting down.
			Otherwise, shutdown is performed immediately even if there are busy nodes, tasks are interrupted on these busy nodes.
			</para>
		</section>
	</section>
</section>
