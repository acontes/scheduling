<?xml version="1.0" encoding="utf-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="RM_EC2">
  <info><title>Amazon EC2 Integration</title></info>

  <section xml:id="EC2_Overview"><info><title>Overview</title></info>
    <para>
      The Elastic Compute Cloud, aka <emphasis>EC2</emphasis>, is an Amazon Web Service, that allows
      its users to use machines (instances) on demand on the cloud.
      An EC2 instance is a Xen virtual machine, running on different kinds of hardware,
      at different prices, but always paid by the hour, allowing lots of flexibility.
      Being virtual machines, instances can be launched using custom operating system images,
      called <emphasis>AMI</emphasis> (Amazon Machine Image).
      For the Resource Manager to use EC2 instances as computing nodes,
      a specific EC2 Infrastructure as well as AMI creation utilities are provided.
    </para>
    <para>
      In order to use EC2 instances in the Resource Manager, it is recommended to take the following steps:
    </para>

    <itemizedlist>
      <listitem><para>
	  <xref linkend="EC2_Start"/> describes the minimum configuration needed to deploy nodes on EC2
      </para></listitem>
      <listitem><para>
	  <xref linkend="EC2_Depl"/> gives a simple example with the default provided configuration,
	  once your AWS account and local configuration are setup.
      </para></listitem>
    </itemizedlist>

  </section>

  <section xml:id="EC2_Start"><info><title>AWS Account</title></info>
    <para>
      To use the EC2 Infrastructure in the Resource Manager, proper Amazon credentials are needed.
      This section describes briefly how to obtain them, and how to use them to configure
      your environment.
    </para>

    <orderedlist>
      <listitem><para>
	  First, you need to create and AWS account at
	  <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://aws.amazon.com/">http://aws.amazon.com/</link>.
      </para></listitem>
      <listitem><para>
	  With your new AWS account, sign up for EC2 at
	  <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://aws.amazon.com/ec2/">http://aws.amazon.com/ec2/</link>.
      </para></listitem>
      <listitem><para>
	  Now, you need to obtain the credentials.
	  <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://aws.amazon.com/">On the AWS website </link>,
	  point your browser to the <emphasis>Your Web Services Account</emphasis> button,
	  a drop down list displays.
	  Click <emphasis>View Access Key Identifiers</emphasis>.
      </para></listitem>
      <listitem><para>
	  Use this information to fill in the properties <emphasis>AWS_AKEY</emphasis> (Access Key),
	  <emphasis>AWS_SKEY</emphasis> (Secret Key) and <emphasis>AWS_USER</emphasis> (numerical EC2 user ID)
	  in the file located in <emphasis>/config/rm/deployment/ec2.properties</emphasis>.
	  Those thee parameters should never change, except if you need for some reason to
	  handle multiple EC2 accounts.
	  Other properties in the configuration file are:
	  <itemizedlist>
	    <listitem><para>
		<emphasis>AMI:</emphasis> Defines which AMI will be deployed on instances.
		The value to provide is the unique AMI Id, ami-XXX.
		If no default value is provided, you need to find a public ProActive AMI corresponding
		to the release you are using.
	    </para></listitem>
	    <listitem><para>
		<emphasis>INSTANCE_TYPE:</emphasis> One of m1.small, m1.large, m1.xlarge, c1.medium, c1.xlarge,
		which defines what kind of hardware the instance will be running on. m1 instances are memory focused,
		whereas c1 instances are for more cpu intensive tasks. This property defaults to m1.small,
		the cheapest and slowest of all.
		<warning><para>
		    Only m1.xlarge and c1.xlarge instances are able to launch x86_64 AMI. When trying to run such AMI,
		    if INSTANCE_TYPE is not one of the xlarge, it will be forced to m1.xlarge.
		    If you want to control your instances' costs, do not run x86_64 AMIs.
		</para></warning>
	    </para></listitem>
	    <listitem><para>
		<emphasis>MAX_INST:</emphasis> Sets a maximum number of instances that can be
		deployed simultaneously on this infrastructure, which is useful to control
		the instances' cost.
	    </para></listitem>
	  </itemizedlist>
      </para></listitem>
    </orderedlist>

  </section>


  <section xml:id="EC2_Depl"><info><title>Deploying Nodes</title></info>
    <para>
      Using a Scheduler and Resource Manager with an EC2 NodeSource requires
      specific configuration. EC2 instances, indeed, are located on a private
      network, behind a NAT device: this allows fast communications between two EC2 instances,
      but this is an issue when using the RMI protocol.
      The workaround is to use a PAMR router, or the HTTP protocol.
    </para>
    <para>
      For that reason, the HTTP protocol is forced for communications going from the RM to the EC2 nodes.
      On the other way, from EC2 to the RM, using HTTP communications is also the simplest, also RMISSH is
      possible but requires manual configuration for deploying RSA keys.
      To configure your RM with HTTP, all you need to specify is a configuration file with the following properties,
      for both Resource Manager <emphasis>and</emphasis> Scheduler.
      <programlisting language="xml"><![CDATA[
<prop key="proactive.net.nolocal" value="true"/>
<prop key="proactive.communication.protocol" value="http" />
<prop key="proactive.http.port" value="PORT" />
<prop key="proactive.net.noprivate" value="true" />
<prop key="proactive.useIPaddress" value="true" />
]]></programlisting>
      Note that you need to specify a different port for both configurations.
      Sample configurations can be found in <emphasis>/samples/ec2</emphasis>.
    </para>
    <para>
      Using this configuration, you can start a Resource Manager and a Scheduler using the <emphasis>/bin/unix/rm-start</emphasis>
      and <emphasis>/bin/unix/scheduler-start</emphasis> scripts.
      An EC2 NodeSource can now be added using the Resource Manager's GUI:
      <figure xml:id="RM_EC2_NS"><info><title>EC2 NodeSource creation dialog</title></info>
	<mediaobject>
	  <imageobject>
	    <imagedata scalefit="1" width="55%" contentdepth="55%" fileref="images/png/rm_ec2nodeSource.png" format="PNG"/>
	  </imageobject>
	</mediaobject>
      </figure>
      You will need to specify:
      <itemizedlist>
	<listitem><para>
	    Configuration file: <emphasis>/config/rm/deployment/ec2.properties</emphasis>,
	    which you earlier filled with your AWS credentials.
	</para></listitem>
	<listitem><para>
	    RM Url: a fully qualified URL conforming to <emphasis>protocol://IP:port/</emphasis>,
	    where IP is the public IP of the machine where the Resource Manager is launched.
	    Protocol and port are mandatory, as these values will be used to configure
	    the ProActive runtime of the EC2 instances at boot. It describes the protocol and port used
	    for communications from the instance to the Resource Manager.
	</para></listitem>
	<listitem><para>
	    RM login and password: to register on the Resource Manager, nodes need those
	    credentials to log in. Those can be found in
	    <emphasis>/config/authentication/login.cfg</emphasis> when using default configuration.
	</para></listitem>
	<listitem><para>
	    Node Port: As stated before, the EC2 node will expose itself with the HTTP protocol.
	    You can configure which port it will use, useful if the machine on which the RM is started
	    has restrictive firewall rules for outgoing connections.
	</para></listitem>
      </itemizedlist>
    </para>
    <para>
      Once the Resource Manager is up and running with its EC2 NodeSource,
      new jobs can be added by using <emphasis>/bin/unix/scheduler-admin</emphasis>,
      or the Scheduler GUI.
    </para>
  </section>


</chapter>
