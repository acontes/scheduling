<?xml version="1.0" encoding="utf-8"?><chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="ProActive_Scheduler_Scilab"><info><title>ProActive Scheduler's Scilab Extension</title></info>

		<section xml:id="Scheduler_Scilab_Overwiew"><info><title>Presentation</title></info>

			<para>
				<emphasis>Scilab</emphasis>
				is a scientific software for numerical computations.
				Developed since 1990 by researchers from INRIA and ENPC,
				it is now maintained and developed by Scilab Consortium
				since its creation in May 2003. Scilab includes hundreds
				of mathematical functions with the possibility to add
				interactively programs from various languages (C,
				Fortran...). It has sophisticated data structures
				(including lists, polynomials, rational functions,
				linear systems...), an interpreter and a high level
				programming language. Scilab works on most Unix systems
				(including GNU/Linux) and Windows (9X/2000/XP).
			</para>
			<para>
                The interface with Scilab inside ProActive comes as a Scilab Toolbox that can be directly accessed from the Scilab environment (ProActive Scheduler Toolbox). The objectives of <emphasis>ProActive Scheduler Toolbox</emphasis> are to provide you with tools that:
            </para>
            <itemizedlist>
                <listitem>
                    <para>
                        Allow you to run Scilab functions on remote computers.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Do not block the local Scilab session while remote results are being produced (being developped).
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Allow you to seamlessly retrieve results when you need them, just as if the functions were run locally.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Provide you detailed remote log/output information, altogether with errors if any occurred.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Allow automatic source transfer, data file transfer, transfer of local Scilab workspace and other configurable options.
                    </para>
                </listitem>
            </itemizedlist>
		</section>

     <section xml:id="SciMat_Scilab_Installation">
        <info>
            <title>Installation for Scilab</title>
        </info>
         <para>The toolbox is currently under Alpha version. Therefore we provide only help to install the toolbox but not of its usage. Next releases of ProActive Scheduler will feature a fully functional and documented toolbox.

         </para>

        <para>
            The toolbox works only with Scilab version <emphasis>5.3</emphasis>.
            The toolbox can be found at <emphasis>SCHEDULING/extensions/scilab/PAscheduler</emphasis>. To install it inside Scilab, the toolbox must be built and loaded inside Scilab via the standard Scilab toolboxes installation scheme. The toolbox depends on another toolbox called <emphasis>JIMS</emphasis> which can be found at <emphasis>SCHEDULING/extensions/scilab/JIMS</emphasis>.
            Below is the sequence of instructions from the scilab prompt to install both toolboxes.
        </para>
         <para>Installation of JIMS:</para>
        <screen>-->cd('/home/fviale/eclipse_workspace/Scheduling_Clean/extensions/scilab/JIMS')
 ans  =

 /home/fviale/eclipse_workspace/Scheduling_Clean/extensions/scilab/JIMS

-->exec builder_src.sce

-->mode(-1);
   Génère un fichier gateway
   Génère un fichier loader
   Génère un Makefile
   ilib_gen_Make : Copie les fichiers de compilation (Makefile*, libtool...) vers TMPDIR
   ilib_gen_Make : Copie unwrapshort.cpp vers TMPDIR
   ilib_gen_Make : Copie getmethods.cpp vers TMPDIR
   ilib_gen_Make : Copie unwrapstring.cpp vers TMPDIR
   ilib_gen_Make : Copie unwrapboolean.cpp vers TMPDIR
   ilib_gen_Make : Copie GiwsException.cpp vers TMPDIR
   ilib_gen_Make : Copie ScilabObjects.cpp vers TMPDIR
   ilib_gen_Make : Copie unwrapdouble.cpp vers TMPDIR
   ilib_gen_Make : Copie unwrapfloat.cpp vers TMPDIR
   ilib_gen_Make : Copie unwrapint.cpp vers TMPDIR
   ilib_gen_Make : Copie ScilabJavaClass.cpp vers TMPDIR
   ilib_gen_Make : Copie unwraplong.cpp vers TMPDIR
   ilib_gen_Make : Copie unwrapchar.cpp vers TMPDIR
   ilib_gen_Make : Copie ScilabJavaObject.cpp vers TMPDIR
   ilib_gen_Make : Copie unwrapbyte.cpp vers TMPDIR
   ilib_gen_Make : Copie ScilabJavaArray.cpp vers TMPDIR
   ilib_gen_Make : Copie ScilabJavaObject2.cpp vers TMPDIR
   ilib_gen_Make : Copie ScilabClassLoader.cpp vers TMPDIR
   ilib_gen_Make : Copie getfields.cpp vers TMPDIR
   ilib_gen_Make : Copie ScilabObjectsk.c vers TMPDIR
   ilib_gen_Make : Copie getSciArgs.c vers TMPDIR
   ilib_gen_Make : Copie sci_convMatrixMethod.c vers TMPDIR
   ilib_gen_Make : Copie sci_displayJObj.c vers TMPDIR
   ilib_gen_Make : Copie sci_getFields.c vers TMPDIR
   ilib_gen_Make : Copie sci_getMethods.c vers TMPDIR
   ilib_gen_Make : Copie sci_getRep.c vers TMPDIR
   ilib_gen_Make : Copie sci_getfield.c vers TMPDIR
   ilib_gen_Make : Copie sci_getfield_l.c vers TMPDIR
   ilib_gen_Make : Copie sci_getfield_lu.c vers TMPDIR
   ilib_gen_Make : Copie sci_getfield_u.c vers TMPDIR
   ilib_gen_Make : Copie sci_import.c vers TMPDIR
   ilib_gen_Make : Copie sci_import_u.c vers TMPDIR
   ilib_gen_Make : Copie sci_invoke.c vers TMPDIR
   ilib_gen_Make : Copie sci_invoke_l.c vers TMPDIR
   ilib_gen_Make : Copie sci_invoke_lu.c vers TMPDIR
   ilib_gen_Make : Copie sci_invoke_u.c vers TMPDIR
   ilib_gen_Make : Copie sci_javaArray.c vers TMPDIR
   ilib_gen_Make : Copie sci_javaCast.c vers TMPDIR
   ilib_gen_Make : Copie sci_javadeff.c vers TMPDIR
   ilib_gen_Make : Copie sci_loadClass.c vers TMPDIR
   ilib_gen_Make : Copie sci_newInstance.c vers TMPDIR
   ilib_gen_Make : Copie sci_newInstance_l.c vers TMPDIR
   ilib_gen_Make : Copie sci_remove.c vers TMPDIR
   ilib_gen_Make : Copie sci_setfield.c vers TMPDIR
   ilib_gen_Make : Copie sci_setfield_l.c vers TMPDIR
   ilib_gen_Make : Copie sci_unwrap.c vers TMPDIR
   ilib_gen_Make : Copie sci_wrap.c vers TMPDIR
   ilib_gen_Make : Copie sci_wrapinchar.c vers TMPDIR
   ilib_gen_Make : Copie sci_wrapinfloat.c vers TMPDIR
   ilib_gen_Make : Copie sci_wrapvar.c vers TMPDIR
   ilib_gen_Make : Copie libimportjava.c vers TMPDIR
   ilib_gen_Make : configure : Génère le Makefile.
   ilib_gen_Make : Modification du Makefile dans TMPDIR.
   Exécute le makefile
   Génère un fichier cleaner

-->exec start.sce

-->here=get_absolute_file_path('start.sce');

-->macros=here+'macros';

-->java_home='/home/fviale/bin/jdk1.6.0_64/';

-->exec loader.sce;
Bibliothèque partagée chargée.
Edition de liens effectuée.

-->impjava=lib(macros);

-->if isfile('classpath/jlatexmath-0.9.3.jar') then
-->    javaclasspath([here+'jar/ScilabObjects.jar' here+'classpath' 'classpath/jlatexmath-0.9.3.jar' here+'classpath/scilatex.jar']);
-->else
-->    disp('Warning, cannot use latex library, in order to use it, download it at http://forge.scilab.org/index.php/p/jlatexmath/downloads/130/ and put the jar file into the classpath subfolder');

 Warning, cannot use latex library, in order to use it, download it at http://forge.scilab.org/index.php/p/jlatexmath/downloads/130/ and put the jar file into the c
      lasspath subfolder
-->    javaclasspath([here+'jar/ScilabObjects.jar']);
-->end</screen>
      <para>Installation of PAScheduler:</para>
      <screen>-->cd ../PAscheduler/
 ans  =

 /home/fviale/eclipse_workspace/Scheduling_Clean/extensions/scilab/PAscheduler

-->exec builder.sce

-->mode(-1);

-->exec loader.sce

-->// ====================================================================

-->// generated by builder.sce

-->// Copyright INRIA 2008

-->// ====================================================================

-->try
--> getversion('scilab');
-->catch
--> warning('Scilab 5.0 or more is required.');
--> return;
-->end;

-->// ====================================================================

-->root_tlbx = get_absolute_file_path('loader.sce');

-->exec(root_tlbx+'etc\'+'toolbox_pascheduler.start');

 Start Toolbox PAScheduler

 Load macros

 Load gateways

 Load help

-->// ====================================================================

-->clear root_tlbx;

-->// ====================================================================
 </screen>

        <para>
            If those steps were done successfully the toolbox will be available to use on Scilab
        </para>


    </section>

</chapter>
