<?xml version="1.0" encoding="utf-8"?><chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="Scheduler_Eclipse_Plugin"><info><title>ProActive Scheduler Eclipse Plugin</title></info>

	<para>
		<emphasis role="bold">
			Scheduler Eclipse Plugin
		</emphasis>
		is a
		<emphasis role="bold">graphical client</emphasis>
		for remote monitoring and control of ProActive Scheduler
		(see
		<xref linkend="user_manual"/>
		), including remote submission of XML-defined jobs (see
		<xref linkend="Create_job_xml"/>
		).
	</para>
	<para>
		The Scheduler Graphical Client is a standalone application built on top of
		<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://wiki.eclipse.org/index.php/Rich_Client_Platform">
		  Eclipse Rich Client Platform (RCP)
		</link>. It is available for all major platforms (Windows, Mac OS, Linux, Solaris).
	</para>
	<para>
	  Although the plugin is built as a standalone application, it can be integrated in an existing Eclipse
	  installation by installing only the Scheduler Plugin, allowing the use of the Scheduler Perspective.
	</para>

	<section xml:id="Starting_GUI"><info><title>Starting  Scheduler Graphical User Interface</title></info>
		<para>
		  To start the ProActive Scheduler Client, run the executable named <emphasis>Scheduler</emphasis> (Unix) 
		  or <emphasis>Scheduler.exe</emphasis> (Windows).
		</para>
		<para>
			Once started, the main window of the client should look like this:
			<figure xml:id="Scheduler_Welcome_screen"><info><title>Default Scheduler perspective</title></info>
				<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="220%" contentdepth="220%" fileref="images/png/plugin/Screen1.png" format="PNG"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
	</section>

	<section xml:id="Connect_GUI"><info><title>Connect to an existing Scheduler</title></info>
		<para>
			A Scheduler has to be already started before connecting the Scheduler GUI. If no scheduler has been started, please refer
			to <xref linkend="scheduler_installation"/>.
		</para>
		<para>
			To connect to an existing Scheduler, bring up the connection dialog by clicking the first icon in the toolbar, or its
			menu entry in the 'Scheduler' menu. Note that the Scheduler Connection dialog should be showed automatically when starting the application.
			"Connect the ProActive Scheduler" in the context menu as shown below:
			<figure xml:id="RC_screen"><info><title>Scheduler connection (1)</title></info>
				<mediaobject>
					<imageobject>
						<imagedata scalefit="1" width="220%" contentdepth="220%" fileref="images/png/plugin/RC_screen.png" format="PNG"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
		<para>
			Some information are now requested in order to establish the connection:
			<figure xml:id="connectToSchedulerDialog"><info><title>Connection dialog</title></info>
				<mediaobject>
					<imageobject>
						<imagedata width="70%" fileref="images/png/plugin/connectToSchedulerDialog.png" format="PNG"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
		<para>
			<emphasis role="bold">Enter required information</emphasis> about the remote scheduler
			and click on <emphasis role="bold">OK</emphasis>.
			Url is made of the protocol, the host name on which the Scheduler is started and the port on
			which it is listening.
			Then, enter your user/admin name and password.
		</para>
	</section>

	<section xml:id="Scheduler_perspective"><info><title>Scheduler perspective</title></info>
		<para>
			Scheduler plugin provides the
			<emphasis role="bold">
				Scheduler
				<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://help.eclipse.org/help31/index.jsp?topic=/org.eclipse.platform.doc.user/gettingStarted/qs-43.htm">
					perspective
				</link>
			</emphasis>
			displayed in the <xref linkend="schedulerPerspective"/>.
		</para>

		<figure xml:id="schedulerPerspective"><info><title>Scheduler Perspective</title></info>
			<mediaobject>
				<imageobject>
					<imagedata scalefit="1" width="220%" contentdepth="220%" fileref="images/png/plugin/GUI_perspective.png" format="PNG"/>
				</imageobject>
			</mediaobject>
		</figure>

		<para>
			This perspective defines the following set of
			<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://wiki.eclipse.org/index.php/FAQ_What_is_a_view%3F">
				views
			</link>:
		</para>

		<itemizedlist>
			<listitem>
				<para>
					<emphasis role="bold">Jobs</emphasis> view - shows pending, running and finished jobs in the scheduler, and interact with them.
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis role="bold">Data Servers</emphasis> view - start, stop, add or remove Data Servers to use for submitted jobs.
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis role="bold">Console</emphasis> view - shows jobs standard and error output (on demand).
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis role="bold">Tasks</emphasis> view - displays detailed informations on tasks contained
					in the selected job.
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis role="bold">Logged Users</emphasis> view - displays information about all users connected to the Scheduler this client is connected to.
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis role="bold">Jobs Info</emphasis> view - displays all information of the selected job.
				</para>
			</listitem>
			<listitem>
				<para>
					 <emphasis role="bold">Result Preview</emphasis> view - displays a textual or graphical preview on
					the selected task result. A simple click will show the internal view while the double click start
					an external result preview (as a pictures editor or viewer) if provided.
				</para>
			</listitem>
			<listitem>
				<para>
					A <emphasis role="bold">Scheduler toolbar</emphasis> - perform tasks relative to the entire application, or the connected scheduler itself:
					connection, job submission, scheduler administration, statistics and accounting.
				</para>
			</listitem>
		</itemizedlist>
	</section>


	<section xml:id="Scheduler_composing"><info><title>Views composing the perspective</title></info>
		<section xml:id="Scheduler_composing_jobs"><info><title>Jobs view</title></info>
			<para>
				The main view is obviously the jobs one:
			</para>
			<figure xml:id="jobsView"><info><title>Jobs view</title></info>
				<mediaobject>
					<imageobject>
						<imagedata width="90%" fileref="images/png/plugin/jobsView.png" format="PNG"/>
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				This view is composed of 3 panels that represent respectively pending, running and finished jobs. In each panel you
				can watch many different information about jobs, like their states, names, IDs, progress...
				It is also possible to switch between vertical panel presentation and horizontal panel presentation as it will be described later.
			</para>
			<para>
				In each panel, the list of jobs can be ordered by column.
			</para>
			<para>
			  The contextual menu of the view, available when right-clicking on a selected task, enables the following actions:
			</para>
			<itemizedlist>
			  <listitem><para>
				  <emphasis>Pause/Resume a Job</emphasis> - use this button to
				  pause a pending or running job, and to resume a paused job. Note that it is not possible to pause a running task.
				  So once a job paused, each running task will be finished. If a task has to restart for any reasons,
				  it will be paused instead of restarted.</para>
			  </listitem>
			  <listitem><para>
				  <emphasis>Select Job priority</emphasis> - use this button to
				  change the priority of your job. Allowed priorities for a user are:</para>
				<itemizedlist>
				  <listitem><para>
					  Normal</para>
				  </listitem>
				  <listitem><para>
					  Low</para>
				  </listitem>
				  <listitem><para>
					  Lowest</para>
				  </listitem>
				</itemizedlist>
			  </listitem>
			  <listitem><para>
				  <emphasis>View selected job output</emphasis> - use this button to
				  view the selected job output. Job output is in fact the output that comes from the different
				  tasks from both standard output and standard error stream.</para>
			  </listitem>
			  <listitem><para>
				  <emphasis>Kill the selected job</emphasis> - use this button to
				  kill a job. The job will be terminated immediately, removed from the queue where it was, and its
				  results will be lost.</para>
			  </listitem>
			</itemizedlist>
		</section>

		<section xml:id="Scheduler_dataservers"><info><title>Data Servers view</title></info>
		  <para>
			The Data Server view enables users to start new instances of PADataServer that can mount local filesystems
			as a DataSpaces object usable among all computation nodes.
		  </para>
		  <para>
			Multiple servers can be defined, and not all servers must be running at the same time: they can be started or
			stopped at will. When exiting the client and restarting it, all defined servers will be saved and automatically added
			in a stopped state.
		  </para>
		  <para>
			To create a new Server, use the contextual menu (right-click) or the view's iconbar:
		  </para>
		  <figure xml:id="ds1"><info><title>Default Data Server view</title></info>
			<mediaobject>
			  <imageobject>
				<imagedata width="70%" fileref="images/png/plugin/ds1.png" format="PNG"/>
			  </imageobject>
			</mediaobject>
		  </figure>

		  <para>
			Creation of a server requires the following information:
			<itemizedlist>
			  <listitem><para>
				  Root directory: the directory on the local filesystem to use as the server root
			  </para></listitem>
			  <listitem><para>
				  Name: an unique identifier for the server to start
			  </para></listitem>
			  <listitem><para>
				  Rebind: if a server with the same name was already started outside the Scheduler Client,
				  creation of the server will fail. Using the rebind option, the client will reclaim this already created
				  server.
			  </para></listitem>
			  <listitem><para>
				  Start server: either add the server in stopped or started mode.
			  </para></listitem>
			</itemizedlist>
		  </para>

		  <figure xml:id="ds3"><info><title>Create a new Server</title></info>
			<mediaobject>
			  <imageobject>
				<imagedata width="100%" fileref="images/png/plugin/ds3.png" format="PNG"/>
			  </imageobject>
			</mediaobject>
		  </figure>

		  <para>
			Once a server has been added to the list, users can interact with it using the contextual menu
			by right-clicking on the requested server. The server can be started or stopped depending its state,
			or even removed definitely from the list.
		  </para>

		  <para>
			After you servers have been added and started, they can be used when submitting new jobs. See <xref linkend="submit_edit"/>.
		  </para>

		  <figure xml:id="ds2"><info><title>Interaction with the defined servers</title></info>
			<mediaobject>
			  <imageobject>
				<imagedata width="70%" fileref="images/png/plugin/ds2.png" format="PNG"/>
			  </imageobject>
			</mediaobject>
		  </figure>

		</section>
		<section xml:id="Scheduler_composing_console"><info><title>Console view</title></info>
			<figure xml:id="consoleView"><info><title>Console view</title></info>
				<mediaobject>
					<imageobject>
						<imagedata width="70%" fileref="images/png/plugin/consoleView.png" format="PNG"/>
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				This view displays selected job standard and error output (only on demand).
			</para>
		</section>

		<section xml:id="Scheduler_composing_tasks"><info><title>Tasks view</title></info>
			<figure xml:id="tasksView"><info><title>Tasks view</title></info>
				<mediaobject>
					<imageobject>
						<imagedata width="85%" fileref="images/png/plugin/tasksView.png" format="PNG"/>
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				This view provides a lot of information on every tasks composing a job like:
				<itemizedlist>
					<listitem>
						<para><emphasis>Id</emphasis> - task id generated by the Scheduler</para>
					</listitem>
					<listitem>
						<para><emphasis>State</emphasis> - task status to know if it is finished, running, etc...</para>
					</listitem>
					<listitem>
						<para><emphasis>Name</emphasis> - task name given by the user</para>
					</listitem>
					<listitem>
						<para><emphasis>Host name</emphasis> - host name on which the task is executed</para>
					</listitem>
					<listitem>
						<para><emphasis>Start time</emphasis> - task start time</para>
					</listitem>
					<listitem>
						<para><emphasis>Finished time</emphasis> - task finished time</para>
					</listitem>
					<listitem>
						<para><emphasis>Re-run</emphasis> -
							In the column "Re-run", the first number represents how many times the task
							<emphasis>has already been</emphasis> re-executed, and the second number represents how many times the task <emphasis>can be</emphasis> re-executed
						</para>
					</listitem>
					<listitem>
						<para><emphasis>Description</emphasis> - The user description of the task</para>
					</listitem>
				</itemizedlist>
				</para>
				<para>
					In this view, the list of tasks can be ordered by column.
				</para>
		</section>

		<section xml:id="Scheduler_composing_info"><info><title>Job Info view</title></info>
			<figure xml:id="jobInfoView"><info><title>Job Info view</title></info>
				<mediaobject>
					<imageobject>
						<imagedata width="55%" fileref="images/png/plugin/jobInfoView.png" format="PNG"/>
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				This view provides many informations on the selected job like:
				<itemizedlist>
					<listitem>
						<para><emphasis>Id</emphasis> - job id generated by the Scheduler, can be useful to get the result of your job outside of the GUI.</para>
					</listitem>
					<listitem>
						<para><emphasis>State</emphasis> - job status to know if it is pending, running, paused...</para>
					</listitem>
					<listitem>
						<para><emphasis>Name</emphasis> - job name given by the user that has submitted this job</para>
					</listitem>
					<listitem>
						<para><emphasis>Priority</emphasis> - current job priority (this can be changed to accelerate its execution)</para>
					</listitem>
					<listitem>
						<para><emphasis>Pending tasks number</emphasis> - number of pending tasks</para>
					</listitem>
					<listitem>
						<para><emphasis>Running tasks number</emphasis> - number of running tasks</para>
					</listitem>
					<listitem>
						<para><emphasis>Finished tasks number</emphasis> - number of finished tasks</para>
					</listitem>
					<listitem>
						<para><emphasis>Total tasks number</emphasis> - total number of tasks composing the job</para>
					</listitem>
					<listitem>
						<para><emphasis>Submitted time</emphasis> - job submitted time</para>
					</listitem>
					<listitem>
						<para><emphasis>Started time</emphasis> - job start time</para>
					</listitem>
					<listitem>
						<para><emphasis>Finished time</emphasis> - job finished time</para>
					</listitem>
					<listitem>
						<para><emphasis>Description</emphasis> - user description of the job</para>
					</listitem>
				</itemizedlist>
			</para>
		</section>

		<section xml:id="Scheduler_composing_result"><info><title>Result Preview</title></info>
			<figure xml:id="resultPreviewView"><info><title>Result Preview</title></info>
				<mediaobject>
					<imageobject>
						<imagedata width="60%" fileref="images/png/plugin/resultPreviewView.png" format="PNG"/>
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				This view displays result of the selected task (selected in task view), according to the ResultPreview field.
				This preview is powerful because of the generic way that will be used to perform the display.
				It is possible to redefine the displaying behavior by implementing the <emphasis>ResultPreview</emphasis> abstract class.
				Using this mechanism, it is possible to use an external tool or soft to display the result like an image viewer for picture
				(see <xref linkend="Create_task_explanation"/> for details). Here is an example of what can be done:
			</para>
			<figure xml:id="resultPreviewView2"><info><title>custom Result Preview</title></info>
				<mediaobject>
					<imageobject>
						<imagedata  width="50%" fileref="images/png/plugin/resultPreviewView2.png" format="PNG"/>
					</imageobject>
				</mediaobject>
			</figure>
		</section>

		<section xml:id="Scheduler_composing_controlPanel"><info><title>Scheduler control panel</title></info>
			<para>
				This part explains how to use the control panel available at the top right of the Scheduler.
				The control panel goal is to manage the different jobs and the Scheduler itself.
				Let's start with the possibilities offered to a user:
			</para>
			<para>
				<figure xml:id="control_panel"><info><title>Control Panel</title></info>
					<mediaobject>
						<imageobject>
							<imagedata scalefit="1" width="150%" contentdepth="150%" fileref="images/png/plugin/control_panel.png" format="PNG"/>
						</imageobject>
					</mediaobject>
				</figure>
			</para>
			<section xml:id="Scheduler_composing_controlPanel_user"><info><title>User controls</title></info>
				<itemizedlist>
					<listitem><para>
						<emphasis>(1)(2) Connect/Disconnect the Scheduler</emphasis> - use this button to
						display the "Connect to scheduler" dialog in order to establish a connection to a remote ProActive Scheduler.
						Once connected this button disconnects the user from the current connected Scheduler.</para>
					</listitem>
					<listitem><para>
					 	<emphasis>(3) Submit a Job from an XML file</emphasis> - use this button to
						submit a new job to the Scheduler. This action will prompt a file chooser dialog so that you can select one or several XML job descriptors.
						If you don't know how to create such a descriptor, please refer to <xref linkend="Create_job_xml"/>.</para>
					</listitem>
					<listitem><para>
						<emphasis>(4) Submit a Job from an XML file, edit variables definition</emphasis> - This button has the same effect as the previous one,
						with the difference that after an XML job descriptor is selected for submission, a new dialog appears to edit the definitions of the job's
						variables. See <xref linkend="submit_edit"/>.</para>
					</listitem>
					<listitem><para>
						<emphasis>(5) Submit a file containing native commands</emphasis> - use this button to submit a job defined in flat file.
						If you don't know how to create such a job descriptor, please refer to <xref linkend="flat_file_job"/>.
						This button opens a wizard for submitting this kind of job (see section  <xref linkend="flat_file_wizard"/>).</para>
					</listitem>
					<listitem><para>
						<emphasis>(13) </emphasis>Runtime monitoring - Show detailed monitoring information about the scheduler activity:
					  pending, running, finished jobs, users.</para>
					</listitem>
					<listitem><para>
						<emphasis>(14) </emphasis>My Account - Show information about the user account currently logged to the scheduler.</para>
					</listitem>
				</itemizedlist>
				<para>
					All these actions that can be performed in the control panel can be also executed from the right click context menu.
					To view the result of your task, select one in the tasks view and the result preview will be displayed automatically.
				</para>
			</section>
			<section xml:id="Scheduler_composing_controlPanel_admin"><info><title>Administrator controls</title></info>
				<para>
					All actions allowed in user mode are also allowed in Administrator mode.
					Moreover, you can execute any action on any job even you are not the owner of this job.
					It is also possible for an administrator to do the following operations:
				</para>
				<itemizedlist>
					<listitem><para>
						<emphasis>(6) Stop the Scheduler</emphasis> - This action places the Scheduler in a mode
						where no job can be submitted anymore until a restart.
						Nevertheless, all running tasks will be terminated.</para>
					</listitem>
					<listitem><para>
						<emphasis>(7) Freeze the Scheduler</emphasis> - The behavior is the same as those of the stop
						button except that job can still be submitted.</para>
					</listitem>
					<listitem><para>
						<emphasis>(9) Pause the Scheduler</emphasis> - This action put the Scheduler in a Pause status.
						Job can be submitted again but no job will go to the running queue. Every running job will terminate.</para>
					</listitem>
					<listitem><para>
						<emphasis>(10) Resume the Scheduler</emphasis> - Put the Scheduler to the normal scheduling mode, that is, to the Started mode.
						This action can be performed when the scheduler is Frozen or Paused.</para>
					</listitem>
					<listitem><para>
						<emphasis>(11) Shutdown the Scheduler</emphasis> - Put the Scheduler in its shutdown sequence.
						Submitting job is no longer available. It will wait for every pending and running job to be terminated.
						Once done, the Scheduler will shutdown and disconnect.</para>
					</listitem>
					<listitem><para>
						<emphasis>(12) Kill the Scheduler</emphasis> - Force the Scheduler to terminate immediately.
						This action kills every task and job, get the resources back to the Resource Manager and kill the Scheduler.</para>
					</listitem>
				</itemizedlist>
			</section>
		</section>

		<section xml:id="submit_edit"><info><title>Submit XML Job and edit variables</title></info>
		  <para>
			In addition to the regular submission button, a second job submission method allows users
			to edit the variable definitions of an XML job descriptor, prior to submission.
		  </para>
		  <figure xml:id="submit_edit_pic2"><info><title>Submit a Job and edit variables</title></info>
			<mediaobject>
			  <imageobject>
				<imagedata width="100%" fileref="images/png/plugin/submit_edit2.png" format="PNG"/>
			  </imageobject>
			</mediaobject>
		  </figure>
		  <para>
			For each submitted job, all the variables defined in the <emphasis><![CDATA[<variables>]]></emphasis>
			tag can be edited. This enables users to submit jobs with different runtime parameters for everything
			that can be expressed in the descriptor with variables.
		  </para>
		  <para>
			For each variable found in the descriptor, the dialog suggests the following values in a Combo list:
			<itemizedlist>
			  <listitem><para>
				  The default value read in the descriptor
			  </para></listitem>
			  <listitem><para>
				  The URL of each running Data Server defined in the Data Servers view. This allows specifying custom
				  InputSpace or OutputSpace for the job, using the ones created in the client.
			  </para></listitem>
			</itemizedlist>
		  </para>
		  <figure xml:id="submit_edit_pic"><info><title>Variables edition</title></info>
			<mediaobject>
			  <imageobject>
				<imagedata width="100%" fileref="images/png/plugin/submit_edit.png" format="PNG"/>
			  </imageobject>
			</mediaobject>
		  </figure>
		</section>

		<section xml:id="flat_file_wizard"><info><title>Command file job submission</title></info>
			<para>Once you have defined a file containing the path to native commands to submit (see <xref linkend="flat_file_job"/>), this wizard allows you to submit it.
			Main page provides you with a way to specify additional parameters for your job:
			</para>
			<para>
				<figure xml:id="flat_wizard1"><info><title>Control Panel</title></info>
					<mediaobject>
						<imageobject>
							<imagedata width="60%" fileref="images/png/plugin/flat_wizard1.png" format="PNG"/>
						</imageobject>
					</mediaobject>
				</figure>
			</para>
			<para>
			<itemizedlist>
					<listitem><para>
						<emphasis>job name</emphasis> - enter a name for your job.
						</para>
					</listitem>
					<listitem><para>
						<emphasis>command file</emphasis> - click on browse button for choosing your file containing native commands using a file chooser dialog.
						This file chooser dialog shows only files suffixed by ".cmd".
						</para>
					</listitem>
					<listitem><para>
						<emphasis>selection script</emphasis> - click on browse button and choose a selection script to associate to each native task of your job.
						</para>
					</listitem>
					<listitem><para>
						<emphasis>path for log file</emphasis> - enter a path to a log file that will contain all STDOUT and STDERR of job execution.
								This file is created (emptied if exits) at each beginning of job execution.
						</para>
					</listitem>
					<listitem><para>
						<emphasis>Cancel whole job if one of the commands fails</emphasis> - if you check that, the Scheduler will stop all executions of your commands if one fails.
						Scheduler assumes that a failed native command is a command that has a return code different from 0.
						</para>
					</listitem>
			</itemizedlist>
			</para>
			<para>
			Clicking on  the Next button, you will see a brief summary of your job:
			</para>
			<para>
				<figure xml:id="flat_wizard2"><info><title>Control Panel</title></info>
					<mediaobject>
						<imageobject>
							<imagedata width="60%" fileref="images/png/plugin/flat_wizard2.png" format="PNG"/>
						</imageobject>
					</mediaobject>
				</figure>
			</para>
			<para>
			Click on Finish to launch submission. Native commands are scheduled in parallel.
			If there are enough free resources (nodes) for every command, all commands will be launched simultaneously.
			</para>
		</section>

		<section xml:id="remote_conn"><info><title>Remote Connection</title></info>
		  <para>
			Sometimes, users want to provide visual feedback of the result of a task.
			It can then be necessary to connect on a remote host to observe specific data,
			or launch a specific application.
		  </para>
		  <para>
			One specific scenario can be that a VNC server is started, and graphical clients
			should be able to connect once the task that creates the data to observe is terminated.
		  </para>
		  <para>
			To achieve this, the <emphasis>task</emphasis> has to print in its standard output the following string:
			<code>'PA_REMOTE_CONNECTION;10005;vnc;localhost:5901'</code>. All but the fields separated by semicolons,
			except the first, must be adapted:
			<itemizedlist>
			  <listitem><para>
				  <emphasis>PA_REMOTE_CONNECTION</emphasis> : this is a mandatory constant to identify the String
			  </para></listitem>
			  <listitem><para>
				  <emphasis>10005</emphasis> : this is the Task ID. It will allow the graphical client to bind this specific string to a task when reading the job output.
			  </para></listitem>
			  <listitem><para>
				  <emphasis>vnc</emphasis> : this is a generic application type that will be used by the graphical client to associate a specific application on the local machine.
			  </para></listitem>
			  <listitem><para>
				  <emphasis>localhost:5901</emphasis> : the URL that will be contacted.
			  </para></listitem>
			</itemizedlist>
		  </para>

		  <para>
			On the client side, users need to define which application will be associated depending the type read.
			This can be controlled by adding entries in the Window -> Preferences -> Remote Connection dialog.
			<figure xml:id="conn_pic_1"><info><title>Application association preferences</title></info>
			  <mediaobject>
				<imageobject>
				  <imagedata width="100%" fileref="images/png/plugin/remote2.png" format="PNG"/>
				</imageobject>
			  </mediaobject>
			</figure>
		  </para>

		  <para>
			Then, when the appropriate task terminates, simply select it in the Task View and
			click 'Remote Connection' in the context menu or icon bar. If the identification String
			was read and correctly formed, the remote connection application will be started.
			<figure xml:id="conn_pic_2"><info><title>Application association preferences</title></info>
			  <mediaobject>
				<imageobject>
				  <imagedata width="100%" fileref="images/png/plugin/remote1.png" format="PNG"/>
				</imageobject>
			  </mediaobject>
			</figure>
		  </para>
		</section>
	</section>
</chapter>
