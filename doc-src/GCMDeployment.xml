<!-- <!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN" "docbook.dtd">
-->
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="GCMDeployment">
	<info>
		<title>ProActive GCM Deployment</title>
	</info>


	<section xml:id="gcmd_introduction">
		<info>
			<title>Introduction</title>
		</info>

		<para></para>
	</section>



	<section xml:id="gcmd_appli">
		<info>
			<title>ProActive Deployment API</title>
		</info>

		<section>
			<info>
				<title>Resources fixed by applications (SPMD)</title>
			</info>

			<para></para>
		</section>

		<section>
			<info>
				<title>Resources fixed by the deployer</title>
			</info>

			<para></para>
		</section>

		<section>
			<info>
				<title>On demand Scalability</title>
			</info>

			<para></para>
		</section>


	</section>

	<section>
		<info>
			<title>GCM Deployment Descriptors</title>
		</info>


		<section>
			<info>
				<title>Host Information</title>
			</info>

			<para>
				The HostInfo data structure describes a single machine and the environment it provides, with the following information:
				<itemizedlist>
					<listitem>
						<para>userName : (string) the name of the user under which this host can be accessed</para>
					</listitem>
					<listitem>
						<para>homeDirectory : (absolute path) the home directory of the user</para>
					</listitem>
					<listitem>
						<para>os : (one of "unix" or "windows") the operating system the host is running</para>
					</listitem>
					<listitem>
						<para>
							hostCapacity : (positive integer) the number of processes (VM or other executable) that this host can handle (default
							value is 1)
						</para>
					</listitem>
					<listitem>
						<para>vmCapacity : (positive integer) the number of nodes a single VM on this host can handle (default value is 1)</para>
					</listitem>
					<listitem>
						<para>id : (ID) an ID identifying the host</para>
					</listitem>
				</itemizedlist>

			</para>
		</section>

		<section>
			<info>
				<title>Bridges</title>
			</info>

			<para>
				A bridge is meant to represent a frontend to a computing resource. Many grid architectures have such a feature : each physical machine
				is not accessible directly, the user must instead go through a single machine called a front-end. In a deployment descriptor, a bridge
				is a gateway toward either :
				<itemizedlist>
					<listitem>
						<para>a host</para>
					</listitem>
					<listitem>
						<para>a set of groups</para>
					</listitem>
					<listitem>
						<para>another bridge</para>
					</listitem>
				</itemizedlist>

				A bridge is defined as a base structure meant to be derived. The base structure only defines an id (string).
			</para>

			<section>
				<info>
					<title>RSH</title>
				</info>

				<para>
					An RSH bridge node can have the following attributes :
					<itemizedlist>
						<listitem>
							<para>id (string) : the id of the bridge connector corresponding to this definition</para>
						</listitem>
						<listitem>
							<para>hostname (string) : the network hostname of the physical machine which acts as the bridge</para>
						</listitem>
						<listitem>
							<para>username (string, optional) : the user name under which the machine can be accessed</para>
						</listitem>
						<listitem>
							<para>commandPath (string, optional) : the path of rsh client to use</para>
						</listitem>
					</itemizedlist>
				</para>
			</section>


			<section>
				<info>
					<title>SSH</title>
				</info>

				<para>
					An SSH bridge node can have the follow child node :
					<itemizedlist>
						<listitem>
							<para>privateKey (path string) : the file of the private SSH key needed to access the bridge</para>
						</listitem>
					</itemizedlist>

					An SSH bridge node can have the following attributes :
					<itemizedlist>
						<listitem>
							<para>id (string) : the id of the bridge connector corresponding to this definition</para>
						</listitem>
						<listitem>
							<para>hostname (string) : the network hostname of the physical machine which acts as the bridge</para>
						</listitem>
						<listitem>
							<para>username (string, optional) : the user name under which the machine can be accessed</para>
						</listitem>
						<listitem>
							<para>commandPath (string) : the path of the ssh client to use</para>
						</listitem>
						<listitem>
							<para>commandOptions (string) : options to pass to the ssh command</para>
						</listitem>
					</itemizedlist>
				</para>
			</section>
		</section>

		<section>
			<info>
				<title>Groups</title>
			</info>

			<para>
				A Group is a data structure defining a set of machines with identical configuration (like a cluster). It is meant as a base structure
				which can be derived in an Object-Oriented manner to implement any kind of group. There currently are two kinds of groups :
				<orderedlist>
					<listitem>
						<para>"direct" groups</para>
					</listitem>
					<listitem>
						<para>job schedulers</para>
					</listitem>
				</orderedlist>
			</para>
			<para>It is therefore possible to define a standard-compliant deployment descriptor even on a grid which has its own job scheduler.</para>
			<para>All group protocols have the following child nodes :</para>
			<itemizedlist>
				<listitem>
					<para>environment (environment) : the environment for the command and the following attributes</para>
				</listitem>
			</itemizedlist>
			<para>and the following attributes</para>
			<itemizedlist>
				<listitem>
					<para>id (ID) : the id of the group this node represents</para>
				</listitem>
				<listitem>
					<para>commandPath (path string) : path of the command which is used to submit a job to the group protocol</para>
				</listitem>
			</itemizedlist>

			<section>
				<info>
					<title>CCS</title>
				</info>

				<para>
					This group handles Microsoft’s Compute Cluster Server. The CCS group definition has the following child nodes :
					<itemizedlist>
						<listitem>
							<para>
								resources : the resources that will be allowed to the job. This node can have two children :
								<itemizedlist>
									<listitem>
										<para>cpus (positive integer) : the number of CPUs allocated for the job</para>
									</listitem>
									<listitem>
										<para>runtime (time) : the maximum runtime allowed for the job</para>
									</listitem>
								</itemizedlist>
							</para>
						</listitem>
						<listitem>
							<para>stdout (path string) : path of the file where the standard output of the job will be stored</para>
						</listitem>
						<listitem>
							<para>stderr (path string) : path of the file where the standard error of the job will be stored</para>
						</listitem>
					</itemizedlist>
				</para>
			</section>

			<section>
				<info>
					<title>LSF</title>
				</info>

				<para>
					Group definition for the LSF scheduler. The LSF group definition has the following child nodes :
					<itemizedlist>
						<listitem>
							<para>
								resource (string) : this node has the following attributes :
								<itemizedlist>
									<listitem>
										<para>(positive integer) : number of processors requested</para>
									</listitem>
									<listitem>
										<para>walltime (time) : maximum time allowed for the job</para>
									</listitem>
								</itemizedlist>
							</para>
						</listitem>
						<listitem>
							<para>processorsNumber (positive integer) : minimum number of processors requested to run the job</para>
						</listitem>
						<listitem>
							<para>
								resourceRequirement (string) : a resource requirement string as defined by the lsf documentation (‘lsfintro’ manpage)
							</para>
						</listitem>
					</itemizedlist>
				</para>
				<para>
					It also has the following attributes
					<itemizedlist>
						<listitem>
							<para>interactive (boolean) : whether the job is interactive or not</para>
						</listitem>
						<listitem>
							<para>jobName (string) : name of the job</para>
						</listitem>
						<listitem>
							<para>queue (string) : name of the queue the job will be submitted in</para>
						</listitem>
					</itemizedlist>
				</para>
			</section>

			<section>
				<info>
					<title>OAR</title>
				</info>

				<para>
					Group definition for the OAR job scheduler [15]. The OAR group definition has the following child nodes :
					<itemizedlist>
						<listitem>
							<para>
								resource (string) : this node has the following attributes :
								<itemizedlist>
									<listitem>
										<para>nodes (positive integer) : number of nodes requested</para>
									</listitem>
									<listitem>
										<para>cpu (positive integer) : number of CPUs requested</para>
									</listitem>
									<listitem>
										<para>core (positive integer) : number of cores requested</para>
									</listitem>
									<listitem>
										<para>walltime (time) : maximum time allowed for the job</para>
									</listitem>
								</itemizedlist>

								It also can have a string content which is passed verbatim–o the ‘--resource’ option of the oarsub command.
							</para>
						</listitem>

						<listitem>
							<para>directory (path string) : the working directory of the job script</para>
						</listitem>
						<listitem>
							<para>stdout (path string) : path of the file where the standard output of the job will be stored</para>
						</listitem>
						<listitem>
							<para>stderr (path string) : path of the file where the standard error of the job will be stored</para>
						</listitem>
					</itemizedlist>
				</para>
				<para>
					It has the following attributes :
					<itemizedlist>
						<listitem>
							<para>
								interactive (boolean) : start an interactive job. If true, open a login shell on the first node instead of running a
								script (default is false).
							</para>
						</listitem>
						<listitem>
							<para>queue (string) : name of the queue to submit the job to.</para>
						</listitem>
						<listitem>
							<para>type (‘deploy’, ‘besteffort’, ‘cosystem’, ‘checkpoint’, ‘timesharing’) : job type – the default is ‘deploy’.</para>
						</listitem>
					</itemizedlist>
				</para>
			</section>

			<section>
				<info>
					<title>PBS</title>
				</info>

				<para>
					Group definition for the PBS/Torque job scheduler. The PBS/Torque group definition has the following child nodes :
					<itemizedlist>

						<listitem>
							<para>
								resource (string) : this node has the following attributes :
								<itemizedlist>
									<listitem>
										<para>nodes (positive integer) : number of nodes requested</para>
									</listitem>
									<listitem>
										<para>ppn (positive integer) : number of CPUs requested</para>
									</listitem>
									<listitem>
										<para>walltime (time) : maximum time allowed for the job</para>
									</listitem>
								</itemizedlist>
							</para>
						</listitem>
						<listitem>
							<para>nodes (positive integer) : number of nodes requested</para>
						</listitem>
						<listitem>
							<para>processorsPerNode (positive integer) : number of processors per node requested</para>
						</listitem>
						<listitem>
							<para>
								mailWhen (combination of Abort, Begin, End separated by ‘|’) : when to send an email (Abort : if the job is aborted,
								Begin : when the job is started, End : when the job terminates)
							</para>
						</listitem>
						<listitem>
							<para>mailTo (comma-seperated list of email addresses) : where the job status emails should be sent</para>
						</listitem>
						<listitem>
							<para>joinOutput (boolean) : if true, join the output of stderr to stdout</para>
						</listitem>
						<listitem>
							<para>stdout (path string) : path of the file where the standard output of the job will be stored</para>
						</listitem>
						<listitem>
							<para>stderr (path string) : path of the file where the standard error of the job will be stored</para>
						</listitem>
					</itemizedlist>

					It has the following attributes :
					<itemizedlist>
						<listitem>
							<para>
								queue (string) : destination queue for the job. The argument can be of the following format :
								<itemizedlist>
									<listitem>
										<para>queue : a queue on the default server</para>
									</listitem>
									<listitem>
										<para>@server : the default queue on the server</para>
									</listitem>
									<listitem>
										<para>queue@server : the queue on the given server</para>
									</listitem>
								</itemizedlist>
							</para>
						</listitem>
						<listitem>
							<para>jobName (string 15 chars long, no whitespace, first char must be alphabetic) : the name of the job</para>
						</listitem>
						<listitem>
							<para>interactive (boolean) : whether the job is interactive or not</para>
						</listitem>
					</itemizedlist>
				</para>
			</section>

			<section>
				<info>
					<title>Prun</title>
				</info>

				<para>
					Group definition for the PRUN run server. The PRUN group definition has the following child nodes :

					<itemizedlist>
						<listitem>
							<para>
								resource (string) : this node has the following attributes :
								<itemizedlist>
									<listitem>
										<para>nodes (positive integer) : number of nodes requested</para>
									</listitem>
									<listitem>
										<para>ppn (positive integer) : number of CPUs requested</para>
									</listitem>
									<listitem>
										<para>walltime (time) : maximum time allowed for the job</para>
									</listitem>
								</itemizedlist>
							</para>
						</listitem>

						<listitem>
							<para>stdout (path string) : name of the file in which the results will be printed</para>
						</listitem>
					</itemizedlist>

					It has no attribute.
				</para>
			</section>

			<section>
				<info>
					<title>RSH</title>
				</info>

				<para>
					The RSH Group has the following child nodes :
					<itemizedlist>
						<listitem>
							<para>(host list) : the list of hosts to connect to</para>
						</listitem>
					</itemizedlist>
				</para>
			</section>

			<section>
				<info>
					<title>SSH</title>
				</info>

				<para>
					The SSH Group has the following child nodes :
					<itemizedlist>
						<listitem>
							<para>(host list) : the list of hosts to connect to</para>
						</listitem>
						<listitem>
							<para>privateKey (path string) : the file of the private SSH key needed to access the host</para>
						</listitem>
						<listitem>
							<para>commandOptions (string) : the list of options which will be passed to the ssh command</para>
						</listitem>
					</itemizedlist>
				</para>
			</section>

		</section>

	</section>

	<section>
		<info>
			<title>GCM Application descriptor</title>
		</info>

		<para></para>
	</section>

	<section>
		<info>
			<title>FAQ</title>
		</info>

		<para></para>
	</section>

</chapter>
