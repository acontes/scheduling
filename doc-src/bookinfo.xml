<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="viewDocbook.css"?>
<bookinfo>
  <title>ProActive <systemitem role="VERSION" /> Documentation</title>

  <subtitle>A Comprehensive Solution for Grid Computing</subtitle>

  <author>
    <surname>OASIS Research Team</surname>
  </author>

  <corpauthor />

  <copyright>
    <year>$$%%CopyrightYears%%$$</year>

    <holder>INRIA</holder>
  </copyright>

  <legalnotice id="LegalNotice">
    <para>ProActive is a GRID Java middleware, with source code under <ulink
    url="http://www.gnu.org/copyleft/lesser.txt">LGPL license</ulink>. </para>

    <para>Copyright INRIA $$%%CopyrightYears%%$$.</para>
  </legalnotice>

  <mediaobject>
    <imageobject>
      <imagedata fileref="images/ProActiveLogo.png" format="PNG" />
    </imageobject>
  </mediaobject>

  <revhistory>
    <revision>
      <revnumber>3.2.1</revnumber>

      <date>2007-04-07</date>
    </revision>

    <revision>
      <revnumber>3.2</revnumber>

      <date>2007-01-16</date>
    </revision>

    <revision>
      <revnumber>3.1</revnumber>

      <date>2006-06-30</date>
    </revision>

    <revision>
      <revnumber>3.0.1</revnumber>

      <date>2005-12-16</date>
    </revision>
  </revhistory>

  <abstract>
    <title>Disclaimer</title>

    <para><emphasis role="bold">ProActive</emphasis> is a GRID middleware Java
    library for parallel, distributed, and concurrent computing, also
    featuring mobility and security in a uniform framework. With a reduced set
    of simple primitives, ProActive provides a comprehensive API allowing the
    simplification of programming for distributed applications running on a
    Local Area Network (LAN), on a cluster of workstations, on P2P desktop
    Grids, or on Internet Grids. The library is based on an Active Object
    pattern that is a uniform way to encapsulate: <itemizedlist>
        <listitem>
          <para>a remotely accessible object,</para>
        </listitem>

        <listitem>
          <para>a thread as an asynchronous activity,</para>
        </listitem>

        <listitem>
          <para>an actor with its own script,</para>
        </listitem>

        <listitem>
          <para>a server of incoming requests,</para>
        </listitem>

        <listitem>
          <para>a mobile and potentially secure entity.</para>
        </listitem>
      </itemizedlist> </para>

    <para> On top of those basic features, ProActive also includes advanced
    aspects, such as: <itemizedlist>
        <listitem>
          <para>Typed Group Communications,</para>
        </listitem>

        <listitem>
          <para>Object-Oriented SPMD,</para>
        </listitem>

        <listitem>
          <para>Distributed and Hierarchical Components,</para>
        </listitem>

        <listitem>
          <para>Security,</para>
        </listitem>

        <listitem>
          <para>Fault Tolerance with checkpointing,</para>
        </listitem>

        <listitem>
          <para>a P2P infrastructure,</para>
        </listitem>

        <listitem>
          <para>a powerful deployment model based on XML descriptors,</para>
        </listitem>

        <listitem>
          <para>File transfer capabilities over the Grid,</para>
        </listitem>

        <listitem>
          <para>a Graphical User Interface - IC2D.</para>
        </listitem>
      </itemizedlist> </para>

    <para> <emphasis role="bold">ProActive</emphasis> is only made of standard
    Java classes, and requires no changes to the Java Virtual Machine, no
    preprocessing or compiler modification; programmers write standard Java
    code.Being based on a simple Meta-Object Protocol, the library is itself
    extensible, making the system open for adaptations and optimizations.
    ProActive currently uses the RMI Java standard library as default portable
    transport layer, and also provides optimized RMI with IBIS, and HTTP
    transport.</para>

    <para><emphasis role="bold">ProActive</emphasis> features several
    performance improving optimizations. For instance, whenever two active
    objects are located within the same virtual machine, a direct
    communication is always achieved without going through the network stack.
    This optimization is ensured even when the co-location occurs after a
    migration of one or both of the Active Objects.</para>

    <para>ProActive has an architecture that allows the library to
    interoperate with various official or de facto standards: <itemizedlist>
        <listitem>
          <para>Web Service Exportation,</para>
        </listitem>

        <listitem>
          <para>HTTP Transport, RMI/SSH tunneling Transport,</para>
        </listitem>

        <listitem>
          <para>ssh, scp, rsh, rcp,</para>
        </listitem>

        <listitem>
          <para>Globus GT2, GT3 and GT4, Unicore, GLite, ARC (NorduGrid),
          GSI-SSH,</para>
        </listitem>

        <listitem>
          <para>LSF, PBS, Sun Grid Engine, OAR.</para>
        </listitem>
      </itemizedlist> </para>
  </abstract>
</bookinfo>