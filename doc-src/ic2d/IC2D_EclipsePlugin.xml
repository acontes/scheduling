<!-- Converted by db4-upgrade version 1.0 -->

<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="IC2D_EclipsePlugin"><info><title>
        IC2D: Interactive Control and Debugging of Distribution and
        Eclipse plugin
    </title></info>
    
    <para>
        <emphasis role="bold">IC2D</emphasis>
        is a
        <emphasis role="bold">graphical environment</emphasis>
        for remote monitoring and steering of
        <emphasis role="bold">
            distributed and grid applications
        </emphasis>
        . IC2D is built on top of
        <emphasis role="bold">ProActive</emphasis>
        that provides asynchronous calls and migration.
    </para>
    <para>IC2D is available in two forms :</para>
    <itemizedlist>
        <listitem>
            <para>
                A
                <emphasis role="bold">
                    Java standalone application
                </emphasis>
                based on
                <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://wiki.eclipse.org/index.php/Rich_Client_Platform">
                    Eclipse Rich Client Platform (RCP)
                </link>
                , available for any platform (Windows, Linux, Mac
                OSX,Solaris, ...)
            </para>
        </listitem>
        <listitem>
            <para>
                A set of
                <emphasis role="bold">
                    <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.eclipse.org">Eclipse</link>
                    plugins
                </emphasis>
                : with all the functionalities within the standalone
                application, enhanced with a tool that makes easier the
                development of Grid Applications, including:
                <itemizedlist>
                    <listitem>
                        <para>
                            ProActive Editor (error highlighting, ...)
                        </para>
                    </listitem>
                    <listitem>
                        <para>ProActive Wizards</para>
                    </listitem>
                    <listitem>
                        <para>
                            Cheat Sheets for ProActive (Guided Tour)
                        </para>
                    </listitem>
                </itemizedlist>
            </para>
        </listitem>
    </itemizedlist>
    <!-- ************************************************************************************ -->
    <section xml:id="MonitoringControl"><info><title>Monitoring and Control</title></info>
        
        <para>
            IC2D is based on a
            <emphasis role="bold">plugin architecture</emphasis>
            and provides 2 plugins in relation to the
            <emphasis role="bold">monitoring</emphasis>
            and the
            <emphasis role="bold">control</emphasis>
            of ProActive applications:
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    The
                    <emphasis role="bold">Monitoring plugin</emphasis>
                    which provides a
                    <emphasis role="bold">
                        graphical visualisation
                    </emphasis>
                    for hosts, Java Virtual Machines, and active
                    objects, including the topology and the volume of
                    communications
                </para>
            </listitem>
            <listitem>
                <para>
                    The
                    <emphasis role="bold">
                        Job Monitoring plugin
                    </emphasis>
                    which provides a
                    <emphasis role="bold">tree representation</emphasis>
                    of all these objects.
                </para>
            </listitem>
        </itemizedlist>
        <section><info><title>The Monitoring plugin</title></info>
            
            <section><info><title>The Monitoring perspective</title></info>
                
                <para>
                    The Monitoring plugin provides the
                    <emphasis role="bold">
                        Monitoring
                        <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://help.eclipse.org/help31/index.jsp?topic=/org.eclipse.platform.doc.user/gettingStarted/qs-43.htm">
                            perspective
                        </link>
                    </emphasis>
                    displayed in the
                    <xref linkend="monitoringPerspective"/>
                    .
                </para>
                <para>
                    This perspective defines the following set of
                    <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://wiki.eclipse.org/index.php/FAQ_What_is_a_view%3F">
                        views
                    </link>
                    :
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            The
                            <emphasis role="bold">Monitoring</emphasis>
                            view: contains the graphical visualisation
                            for ProActive objects
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            The
                            <emphasis role="bold">Legend</emphasis>
                            view: contains the legend corresponding to
                            the Monitoring view's content
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            The
                            <emphasis role="bold">Console</emphasis>
                            view: contains log corresponding to the
                            Monitoring view's events
                        </para>
                    </listitem>
                </itemizedlist>
                <figure xml:id="monitoringPerspective"><info><title>The Monitoring Perspective</title></info>
                    
                    <mediaobject>
                        <imageobject>
                            <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/monitoringPerspective4.png" format="PNG"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </section><!-- The Monitoring perspective -->
            <section><info><title>Monitor a new host</title></info>
                
                <para>In order to monitor a new host:</para>
                <orderedlist>
                    <listitem>
                        <para>
                            open the Monitoring Perspective:
                            <emphasis role="bold">
                                Window-&gt;Open
                                Perspective-&gt;Other...-&gt;Monitoring
                            </emphasis>
                            (in the standalone IC2D, it should be
                            already opened because it is the default
                            perspective)
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            select
                            <emphasis role="bold">
                                Monitoring-&gt;Monitor a new host...
                            </emphasis>
                            , it opens the "Monitor a new Host" dialog
                            displayed in the
                            <xref linkend="monitorNewHost"/>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis role="bold">
                                enter informations required
                            </emphasis>
                            about the host to monitor, and click
                            <emphasis role="bold">OK</emphasis>
                        </para>
                    </listitem>
                </orderedlist>
                <figure xml:id="monitorNewHost"><info><title>Monitor New Host Dialog</title></info>
                    
                    <mediaobject>
                        <imageobject>
                            <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/monitor_new_host.png" format="PNG"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </section><!-- Monitor a new host -->
            <section><info><title>The Monitoring buttons</title></info>
                
                <para>
                    Here the buttons proposed in the monitoring view:
                </para>
                <figure xml:id="monitornewhostbutton"><info><title>Monitor a new host</title></info>
                    
                    <mediaobject>
                        <imageobject>
                            <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/monitorNewHostButton.png" format="PNG"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para>
                    Display the "Monitor a new host" dialog in order to
                    monitor a new host.
                </para>
                <figure xml:id="setdepthcontrolbutton"><info><title>Set depth control</title></info>
                    
                    <mediaobject>
                        <imageobject>
                            <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/SetDepthControlButton.png" format="PNG"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para>
                    Display the "Set Depth Control" dialog in order to
                    change the depth variable. For example: We have 3
                    hosts: 'A' 'B' and 'C'. And on A there is an active
                    object 'aoA' which communicates with another active
                    object 'aoB' which is on B. This one communicates
                    with an active object 'aoC' on C, and aoA don't
                    communicate with aoC. Then if we monitor A, and if
                    the depth is 1, we will not see aoC.
                </para>
                <figure xml:id="settimetorefreshbutton"><info><title>Set time to refresh</title></info>
                    
                    <mediaobject>
                        <imageobject>
                            <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/SetTimeRefreshButton.png" format="PNG"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para>
                    Display the "Set Time to Refresh" dialog in order to
                    change the time to refresh the model. And find the
                    new added objects.
                </para>
                <figure xml:id="refreshbutton"><info><title>Refresh</title></info>
                    
                    <mediaobject>
                        <imageobject>
                            <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/RefreshButton.png" format="PNG"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para>Refreh the model.</para>
                <figure xml:id="enablemonitoringbutton"><info><title>Enable/Disable Monitoring</title></info>
                    
                    <mediaobject>
                        <imageobject>
                            <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/EnableMonitoringButton.png" format="PNG"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para>
                    When the eye is opened the monitoring is activated.
                </para>
                <figure xml:id="p2pbutton"><info><title>Show P2P objects</title></info>
                    
                    <mediaobject>
                        <imageobject>
                            <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/P2PButton.png" format="PNG"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para>Allows to see or not the P2P objects.</para>
                <figure xml:id="zoominbutton"><info><title>Zoom In</title></info>
                    
                    <mediaobject>
                        <imageobject>
                            <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/ZoomInButton.png" format="PNG"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <figure xml:id="zoomoutbutton"><info><title>Zoom out</title></info>
                    
                    <mediaobject>
                        <imageobject>
                            <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/ZoomOutButton.png" format="PNG"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <figure xml:id="newmonitoringviewbutton"><info><title>New Monitoring View</title></info>
                    
                    <mediaobject>
                        <imageobject>
                            <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/NewMonitoringViewButton.png" format="PNG"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para>
                    Open a new Monitoring view. This button can be used
                    in any perspective. The new created view will be
                    named 'Monitoring#number_of_this_view'
                </para>
            </section><!-- Monitoring icons -->
            <section><info><title>The Virtual Nodes list</title></info>
                
                <para>
                    At the top of the Monitoring View, one can find the
                    <emphasis role="bold">Virtual Nodes list</emphasis>
                    . When some nodes are monirored, their virtual nodes
                    are added to this list. And when a virtual node is
                    checked, all its nodes are highlighted.
                </para>
                <figure xml:id="virtualNodesList"><info><title>Virtual nodes List</title></info>
                    
                    <mediaobject>
                        <imageobject>
                            <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/virtualnodes.png" format="PNG"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </section><!-- The Virtual Nodes list -->
            <section><info><title>Management of the communications display</title></info>
                
                <para>
                    At the bottom of the Monitoring view, one can find a
                    set of buttons used to manage the communications
                    display:
                </para>
                <orderedlist>
                    <listitem>
                        <para>
                            <emphasis role="bold">Auto Reset</emphasis>
                            : Automatic reset of communications, you can
                            specify the auto reset time
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis role="bold">
                                Display topology
                            </emphasis>
                            : show/hide communications
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis role="bold">
                                Proportional
                            </emphasis>
                            : arrows thickness is proportional to the
                            number of requests
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis role="bold">Ratio</emphasis>
                            : arrows thickness uses a ratio of the
                            number of requests
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis role="bold">Fixed</emphasis>
                            : arrows always have the same thickness
                            whatever the number of communications
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis role="bold">Topology</emphasis>
                            : show/hide communications, and erase all
                            communications
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis role="bold">
                                Monitoring enable
                            </emphasis>
                            : listen or not communications between
                            active objects
                        </para>
                    </listitem>
                </orderedlist>
            </section><!-- The management of the communications display -->
            <section><info><title>Example</title></info>
                
                <para>
                    The
                    <xref linkend="monitoring"/>
                    shows an example where 3 hosts are monitored. The
                    applications running are philosophers and C3D (
                    <xref linkend="C3D_example"/>
                    ).
                </para>
            </section>
        </section><!-- The Monitoring plugin -->
        <section><info><title>The Job Monitoring plugin</title></info>
            
            <para>
                To look at the
                <emphasis role="bold">tree representation</emphasis>
                of the monitored objects, one have to open the
                <emphasis role="bold">Job Monitoring view</emphasis>
                .
            </para>
            <para>
                For that, select
                <emphasis role="bold">
                    Window-&gt;Show view-&gt;Other...-&gt;Job Monitoring-&gt;Job
                    Monitoring
                </emphasis>
                .
            </para>
            <figure xml:id="openJobMonitoringView"><info><title>
                    Select the Job Monitoring view in the list
                </title></info>
                
                <mediaobject>
                    <imageobject>
                        <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/showViewJobMonitoring.png" format="PNG"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <para>
                Then, select the model that you want to monitor. Each
                name corresponds to a monitoring view. You can also
                monitor a new host.
            </para>
            <figure xml:id="jobmonitoringbutton"><info><title>Select the Monitoring model</title></info>
                
                <mediaobject>
                    <imageobject>
                        <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/jobMonitoringButton.png" format="PNG"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <figure xml:id="monitoringviews"><info><title>The monitoring views</title></info>
                
                <mediaobject>
                    <imageobject>
                        <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/monitoringadded.png" format="PNG"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <para>
                One can see in the
                <xref linkend="monitoring"/>
                an example of a tree representation of some monitored
                objects.
            </para>
            <figure xml:id="monitoring"><info><title>Monitoring of 2 applications</title></info>
                
                <mediaobject>
                    <imageobject>
                        <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/RunMonitoring3.png" format="PNG"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </section><!-- The Job Monitoring plugin -->
        <!-- ******************************************************************************** -->
        <section><info><title>The TimIt plugin</title></info><!-- The TimIt for IC2D plugin -->
            
            <para>
                The TimIt plugin for IC2D provides the ability to
                <emphasis role="bold">profile</emphasis>
                a distributed application in
                <emphasis role="bold">real time</emphasis>
                .
            </para>
            <para>
                The activation of profiling is done through a
                <emphasis role="bold">TimItTechnicalService</emphasis>
                attached to the virtual node that contains active
                objects the user want to profile.
                </para>
                <para>
                    In your deployement descriptor you have to declare
                    the technical service :
                 </para>
                    <programlisting xml:lang="xml">
                        
						 &lt;technicalServices&gt;
						     &lt;technicalServiceDefinition id="profile" class="org.objectweb.proactive.benchmarks.timit.util.service.TimItTechnicalService"&gt;
							      &lt;arg name="timitActivation" value="all"/&gt;          
							      &lt;arg name="reduceResults" value="false"/&gt;
							      &lt;arg name="printOutput" value="false"/&gt;     
						     &lt;/technicalServiceDefinition&gt;
						 &lt;/technicalServices&gt;
                    </programlisting>
                <para>
                    Then use the defined id in the virtualNode
                    definition :
                 </para>
                    <programlisting xml:lang="xml">
                        
						&lt;virtualNodesDefinition&gt;
							&lt;virtualNode name="Workers" technicalServiceId="profile"/&gt;
						&lt;/virtualNodesDefinition&gt;
                    </programlisting>
            <para>
                As shown in
                <xref linkend="timit-context-menu"/>
                the user can collect some usefull information from
                active objects during the execution time to analyse the
                application
                <emphasis role="bold">performance</emphasis>
                .
            </para>
                <figure xml:id="timit-context-menu"><info><title>
                            Gathering stats (right-click in Monitoring
                            View).
                        </title></info>
                        
                        <mediaobject>
                            <imageobject>
                                <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/timit/timit-context-menu.png" format="PNG"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
            
            <para>
                For that, 3 views are available.
              </para>
                <!-- TimIt Main View -->
                <section><info><title>TimIt Main View</title></info>
                	
                    <para>
                            The main view shown in
                            <xref linkend="timit-main-view"/>
                            is composed of bar charts (one chart per
                            active object). Each chart represents
                            cumulated times of different states that the
                            active object has been in.
                    </para>
                        <figure xml:id="timit-main-view"><info><title>
                                Time snapshots for 2 active objects
                            </title></info>
                            
                            <mediaobject>
                                <imageobject>
                                    <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/timit/timit-main-view.png" format="PNG"/>
                                </imageobject>
                            </mediaobject>
                        </figure>
                </section>
                <!-- TimIt Tree View -->
                <section><info><title>TimIt Tree View</title></info>
       				
                        <para>
                            The tree view shown in
                            <xref linkend="timit-tree-view"/>
                            allows a more detailed hierarchical
                            decomposition view of the total time for a
                            particular active object.
                        </para>
                        <!--  HIERARCHICAL DECOMPOSITION DESCRIPTION -->
                            <para>
                                Suppose that your active object class is
                                :
                                </para>
                                <programlisting xml:lang="java">
	package org.objectweb.user.example;

	public class ActiveObjectClass{
		public ActiveObjectClass(){}

		public void methodA(Integer i, Double d){}

		private void methodB(){}

		protected void methodC(){}
	}</programlisting>
                            <para>
                                The hierarchical time decomposition
                                includes times of user active object
                                class methods (that must be public and
                                non-final) served as requests (ie called
                                by other active objects).
                            </para>
                            <itemizedlist>
                                <!-- Total -->
                                <listitem>
                                    <para>
                                      <emphasis role="bold"> 
                                        Total
                                    	</emphasis>
                                    
                                        The total time since the
                                        creation of the active object.
                                    </para>
                                    <itemizedlist>
                                        <!-- WaitForRequest -->
                                        <listitem>
                                            <para>
                                                <emphasis role="bold">
                                                    WaitForRequest
                                                </emphasis>
                                                    The time spent on
                                                    waiting for
                                                    requests.
                                                </para>
                                          
                                        </listitem>
                                        <!-- Serve -->
                                        <listitem>
                                            <para>
                                                <emphasis role="bold">
                                                    Serve
                                                </emphasis>
                                                    The time spent on
                                                    serving incoming
                                                    requests.
                                                </para>
                                                <itemizedlist>
                                                    <!-- org.objectweb.user.example.ActiveObjectClass.methodA(Integer, Double) -->
                                                    <listitem>
                                                        <para>
                                                            <emphasis role="bold">
                                                                
                                                                org.objectweb.user.example.ActiveObjectClass.methodA(Integer,
                                                                Double)
                                                            </emphasis>
                                                                The time
                                                                spent on
                                                                serving
                                                                the
                                                                <emphasis role="bold">
                                                                    methodA
                                                                </emphasis>
                                                                as a
                                                                request
                                                                (local
                                                                calls to
                                                                this
                                                                method
                                                                are not
                                                                included).
                                                            </para>
                                                            <itemizedlist>
                                                                <!-- UserComputation -->
                                                                <listitem>
                                                                    <para>
                                                                        <emphasis role="bold">
                                                                            UserComputation
                                                                        </emphasis>
                                                                            The
                                                                            time
                                                                            spent
                                                                            on
                                                                            computation
                                                                            (ie
                                                                            everything
                                                                            except
                                                                            communications).
                                                                        </para>
                                                                </listitem>
                                                                <!-- SendRequest -->
                                                                <listitem>
                                                                    <para>
                                                                        <emphasis role="bold">
                                                                            SendRequest
                                                                        </emphasis>
                                                                            The
                                                                            time
                                                                            spent
                                                                            on
                                                                            sending
                                                                            requests
                                                                            to
                                                                            other
                                                                            active
                                                                            objects.
                                                                        </para>
                                                                        <itemizedlist>
                                                                            <!-- BeforeSerialization -->
                                                                            <listitem>
                                                                                <para>
                                                                                    <emphasis role="bold">
                                                                                        BeforeSerialization
                                                                                    </emphasis>
                                                                                        The
                                                                                        time
                                                                                        spent
                                                                                        before
                                                                                        the
                                                                                        serialization
                                                                                        of
                                                                                        requests
                                                                                        to
                                                                                        other
                                                                                        active
                                                                                        objects.
                                                                                    </para>
                                                                            </listitem>
                                                                            <!-- Serialization -->
                                                                            <listitem>
                                                                                <para>
                                                                                    <emphasis role="bold">
                                                                                        Serialization
                                                                                    </emphasis>
                                                                                        The
                                                                                        time
                                                                                        spent
                                                                                        on
                                                                                        serializing
                                                                                        requests
                                                                                        to
                                                                                        other
                                                                                        active
                                                                                        objects.
                                                                                    </para>
                                                                            </listitem>
                                                                            <!-- AfterSerialization -->
                                                                            <listitem>
                                                                                <para>
                                                                                    <emphasis role="bold">
                                                                                        AfterSerialization
                                                                                    </emphasis>
                                                                                        The
                                                                                        time
                                                                                        spent
                                                                                        after
                                                                                        the
                                                                                        serialization
                                                                                        af
                                                                                        requests
                                                                                        to
                                                                                        other
                                                                                        active
                                                                                        objects.
                                                                                    </para>
                                                                            </listitem>
                                                                            <!-- LocalCopy -->
                                                                            <listitem>
                                                                                <para>
                                                                                    <emphasis role="bold">
                                                                                        LocalCopy
                                                                                    </emphasis>
                                                                                        The
                                                                                        time
                                                                                        spent
                                                                                        on
                                                                                        copying
                                                                                        arguments
                                                                                        in
                                                                                        case
                                                                                        of
                                                                                        communications
                                                                                        with
                                                                                        local
                                                                                        active
                                                                                        objects.
                                                                                    </para>
                                                                            </listitem>
                                                                        </itemizedlist>
                                                                </listitem>
                                                                <!-- SendReply -->
                                                                <listitem>
                                                                    <para>
                                                                        <emphasis role="bold">
                                                                            SendReply
                                                                        </emphasis>
                                                                            The
                                                                            time
                                                                            spent
                                                                            on
                                                                            sending
                                                                            replies
                                                                            to
                                                                            other
                                                                            active
                                                                            objects.
                                                                        </para>
                                                                </listitem>
                                                                <!-- GroupOneWayCall -->
                                                                <listitem>
                                                                    <para>
                                                                        <emphasis role="bold">
                                                                            GroupOneWayCall
                                                                        </emphasis>
                                                                            The
                                                                            time
                                                                            spent
                                                                            on
                                                                            performing
                                                                            asynchronous
                                                                            one
                                                                            way
                                                                            calls
                                                                            to
                                                                            groups
                                                                            of
                                                                            active
                                                                            objects
                                                                            (void
                                                                            methods).
                                                                        </para>
                                                                </listitem>
                                                                <!-- GroupAsyncCall -->
                                                                <listitem>
                                                                    <para>
                                                                        <emphasis role="bold">
                                                                            GroupAsyncCall
                                                                        </emphasis>
                                                                            The
                                                                            time
                                                                            spent
                                                                            on
                                                                            performing
                                                                            asynchronous
                                                                            calls
                                                                            to
                                                                            groups
                                                                            of
                                                                            active
                                                                            objects
                                                                            (non-void
                                                                            methods).
                                                                    </para>
                                                                </listitem>
                                                                <!-- WaitByNecessity -->
                                                                <listitem>
                                                                    <para>
                                                                        <emphasis role="bold">
                                                                            WaitByNecessity
                                                                        </emphasis>
                                                                            The
                                                                            time
                                                                            spent
                                                                            on
                                                                            waiting
                                                                            by
                                                                            necessity.
                                                                    </para>
                                                                </listitem>
                                                            </itemizedlist>
                                                    </listitem>
                                                </itemizedlist>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                        <figure xml:id="timit-tree-view"><info><title>
                                Hierarchical decomposition of the total
                                time of an active object
                            </title></info>
                            
                            <mediaobject>
                                <imageobject>
                                    <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/timit/timit-tree-view.png" format="PNG"/>
                                </imageobject>
                            </mediaobject>
                        </figure>
                </section>
                <!-- TimIt Timeline View -->
                <section><info><title> TimIt Timeline View</title></info>
		              
                        <para>
                            The timeline view shown in
                            <xref linkend="timit-timeline-view"/>
                            represents all events that were recorded
                            during a certain time-lapse. The color of
                            each event correspond to colors defined in
                            the Legend view. This view shows the
                            intensity of particular states (serving,
                            waiting for request, etc...).
                        </para>
                        <figure xml:id="timit-timeline-view"><info><title>
                                The timeline for 7 active objects
                            </title></info>
                            
                            <mediaobject>
                                <imageobject>
                                    <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/timit/timit-timeline-view.png" format="PNG"/>
                                </imageobject>
                            </mediaobject>
                        </figure>
                </section>
        </section><!-- The TimIt for IC2D plugin -->
        <!-- ******************************************************************************** -->
    </section><!-- Monitoring and Control -->
    <!-- ************************************************************************************ -->
    <section xml:id="Launcher"><info><title>Launcher</title></info>
        
        <section><info><title>Principles</title></info>
            
            <para>
                The launcher allows users to launch applications
                directly from an XML descriptor file, without any
                script. The new XML descriptor is nearly the same as
                classical descriptor files, the syntax is only extended.
                The deployment will be done in two different phasis.
            </para>
            <para>
                first, a new node, a "main node" will be created and
                activated and then, it is this node that will deploy the
                rest of the application.
            </para>
        </section>
        <section><info><title>MainDefinition tag</title></info>
            
            <para>
                A new tag has been introduced, just before the component
                definition tag. This tag is named "mainDefinition" and
                its syntax is:
            </para>
            <programlisting xml:lang="xml">
				&amp;lt;mainDefinition id="mainID"
				class="theClassToLaunchContainingAMainMethod"&amp;gt;
				&amp;lt;arg value="param1"&amp;gt; &amp;lt;arg value="param2"&amp;gt;
				&amp;lt;mapToVirtualNode value="main-Node"/&amp;gt;
				&amp;lt;/mainDefinition&amp;gt;
			</programlisting>
            <para>
                Eventually, several mains might be defined so the
                <emphasis role="bold">id</emphasis>
                allows to identify all mainDefinitions.
            </para>
            <para>
                The
                <emphasis role="bold">class</emphasis>
                attribute is the path where can be found the class to
                launch.
            </para>
            <para>
                <emphasis role="bold">
                    This class MUST contain a main method.
                </emphasis>
            </para>
            <para>
                Then any number of parameters can be declared in
                <emphasis role="bold">arg</emphasis>
                tags. The parameters will be given to the main method in
                the same order the were declared.
            </para>
            <para>
                And finally a
                <emphasis role="bold">mapToVirtualNode</emphasis>
                tag will link the main info to virtual node, declared
                with the same name in the virtualNodeDefinitions tag (in
                componentDefinition).
            </para>
            <programlisting xml:lang="xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ProActiveDescriptor
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www-sop.inria.fr/oasis/proactive/schema/DescriptorSchema.xsd"&gt;
    &lt;!-- &lt;security
        file="../../descriptors/c3dPolicy.xml"&gt;&lt;/security&gt;
    --&gt;
    &lt;componentDefinition&gt;
        &lt;virtualNodesDefinition&gt;
            &lt;virtualNode name="Dispatcher" property="unique_singleAO" /&gt;
            &lt;virtualNode name="Renderer" /&gt;
        &lt;/virtualNodesDefinition&gt;
    &lt;/componentDefinition&gt;
    &lt;deployment&gt;
        &lt;register virtualNode="Dispatcher" /&gt;
        &lt;mapping&gt;
            &lt;map virtualNode="Dispatcher"&gt;
                &lt;jvmSet&gt;
                    &lt;currentJVM /&gt;
                &lt;/jvmSet&gt;
            &lt;/map&gt;
            &lt;map virtualNode="Renderer"&gt;
                &lt;jvmSet&gt;
                    &lt;vmName value="Jvm1" /&gt;
                    &lt;vmName value="Jvm2" /&gt;
                    &lt;vmName value="Jvm3" /&gt;
                    &lt;vmName value="Jvm4" /&gt;
                &lt;/jvmSet&gt;
            &lt;/map&gt;
        &lt;/mapping&gt;
        &lt;jvms&gt;
            &lt;jvm name="Jvm1"&gt;
                &lt;creation&gt;
                    &lt;processReference refid="localJVM" /&gt;
                &lt;/creation&gt;
            &lt;/jvm&gt;
            &lt;jvm name="Jvm2"&gt;
                &lt;creation&gt;
                    &lt;processReference refid="localJVM" /&gt;
                &lt;/creation&gt;
            &lt;/jvm&gt;
            &lt;jvm name="Jvm3"&gt;
                &lt;creation&gt;
                    &lt;processReference refid="localJVM" /&gt;
                &lt;/creation&gt;
            &lt;/jvm&gt;
            &lt;jvm name="Jvm4"&gt;
                &lt;creation&gt;
                    &lt;processReference refid="localJVM" /&gt;
                &lt;/creation&gt;
            &lt;/jvm&gt;
        &lt;/jvms&gt;
    &lt;/deployment&gt;
    &lt;infrastructure&gt;
        &lt;processes&gt;
            &lt;processDefinition id="localJVM"&gt;
                &lt;jvmProcess
                    class="org.objectweb.proactive.core.process.JVMNodeProcess"&gt;
                &lt;/jvmProcess&gt;
            &lt;/processDefinition&gt;
        &lt;/processes&gt;
    &lt;/infrastructure&gt;
&lt;/ProActiveDescriptor&gt;</programlisting>
        </section>
        <section><info><title>API</title></info>
            
            <para>
                The Launcher class is located in the package
                <emphasis role="bold">
                    org.objectweb.proactive.core.descriptor
                </emphasis>
                . To use it you will have to create a new instance of
                the launcher with the path of the XML descriptor (this
                descriptor must contain a
                <emphasis role="bold">mainDefinition tag</emphasis>
                ). The constructor will parse the file and reify a
                ProActiveDescriptor. You only have to call the
                <emphasis role="bold">activate()</emphasis>
                method on the launcher instance to launch the
                application.
            </para>
            <para>
                <emphasis role="underline">For example:</emphasis>
            </para>
            <para>
                <literal>
                    Launcher launcher = new Launcher
                    ("myDescriptor.xml") ;
                </literal>
            </para>
            <para>
                <literal>launcher.activate() ;</literal>
            </para>
            <para>
                you can also get the ProActiveDescriptor built by the
                launcher by calling the getDescriptor() method on the
                launcher instance.
            </para>
            <para>
                <literal>
                    ProActiveDescriptor pad = launcher.getDescriptor() ;
                </literal>
            </para>
        </section>
        <section><info><title>The Launcher Plug-in</title></info>
            
            <para>
                In order to launch a
                <emphasis role="bold">deployment descriptor</emphasis>
                , you must open your file with the
                <emphasis role="bold">IC2D XML Editor</emphasis>
                .
            </para>
            <para>To use this editor, you have two possibilities:</para>
            <section><info><title>First possibility</title></info>
                
                <para>
                    Open the
                    <emphasis role="bold">
                        Launcher perspective
                    </emphasis>
                    . Select:
                    <emphasis role="bold">
                        Window &gt; Open perspective &gt; Other... &gt; Launcher
                    </emphasis>
                </para>
                <para>
                    <figure><info><title>The "Open Perspective" window</title></info>
                        
                        <mediaobject>
                            <imageobject>
                                <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/perspectiveLauncher.png" format="PNG"  />
                            </imageobject>
                        </mediaobject>
                    </figure>
                </para>
                <para>
                    Then select:
                    <emphasis role="bold">File &gt; Open File...</emphasis>
                    and open your deployment descriptor, it will be
                    opened with the IC2D XML editor. And its name will
                    appear in the
                    <emphasis role="bold">
                        Deployment descriptors
                    </emphasis>
                    list.
                </para>
            </section>
            <section><info><title>Second possibility</title></info>
                
                <para>
                    In the Navigator view, or another similar, a right
                    click on the XML file allows you to open your file
                    with the
                    <emphasis role="bold">IC2D XML editor</emphasis>
                    .
                </para>
                <para>
                    <figure><info><title>The open with action</title></info>
                        
                        <mediaobject>
                            <imageobject>
                                <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="ic2d/images/features/openWith.png" format="PNG"  />
                            </imageobject>
                        </mediaobject>
                    </figure>
                </para>
            </section>
            <section><info><title>The Launcher perspective</title></info>
                
                <para>
                    The
                    <xref linkend="launcherPerspective"/>
                    represents the Launcher perspective containing an
                    <emphasis role="bold">XML editor</emphasis>
                    , a
                    <emphasis role="bold">console</emphasis>
                    , and the
                    <emphasis role="bold">
                        list of deployment descriptors
                    </emphasis>
                    .
                </para>
                <para>
                    To
                    <emphasis role="bold">launch</emphasis>
                    an application, select your file in the deployment
                    descriptors list, and click on the launch icon.
                </para>
                <para>
                    You can
                    <emphasis role="bold">kill</emphasis>
                    the applications launched from a popup-menu in the
                    "Deployment descriptors" list.
                </para>
                <para>
                    To see your application running, open the
                    "Monitoring perspective" and monitor the
                    corresponding host.
                </para>
                <para>
                    <figure xml:id="launcherPerspective"><info><title>The Launcher perspective</title></info>
                        
                        <mediaobject>
                            <imageobject>
                                <imagedata scalefit="1" width="100%" contentdepth="100%"  align="center" fileref="ic2d/images/features/LauncherPerspective.png" format="PNG"  />
                            </imageobject>
                        </mediaobject>
                    </figure>
                </para>
            </section>
        </section><!-- The Launcher plug-in -->
    </section><!-- Launcher and Scheduler -->
    <!-- ************************************************************************************ -->
    <section xml:id="ProgrammingTools"><info><title>Programming Tools</title></info>
        
        <section><info><title>ProActive Wizards</title></info>
            
            <para>
                These wizards will guide developpers to make complex
                operations with ProActive, such as installation,
                integration, configuration, or execution :
            </para>
            <orderedlist>
                <listitem>
                    <para>a ProActive installation wizard</para>
                </listitem>
                <listitem>
                    <para>
                        a wizard that create applications using
                        ProActive
                    </para>
                </listitem>
                <listitem>
                    <para>an active object creation wizard</para>
                </listitem>
                <listitem>
                    <para>a configuration and execution wizard</para>
                </listitem>
            </orderedlist>
            <figure><info><title>A wizard popup</title></info>
                
                <mediaobject>
                    <imageobject>
                        <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="development/plugin_files/wizard_active.jpg" format="JPG"  />
                    </imageobject>
                </mediaobject>
            </figure>
        </section>
        <section><info><title>The ProActive Editor</title></info>
            
            <para>
                This editor checks coding rules. It informs the
                developper of error concerning ProActive in his classes
                and can resolve some of these errors.
            </para>
            <figure><info><title>The editor error highlighting</title></info>
                
                <mediaobject>
                    <imageobject>
                        <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="development/plugin_files/editor.jpg" format="JPG"  />
                    </imageobject>
                </mediaobject>
            </figure>
        </section>
    </section><!-- Programming Tools-->
    <!-- ************************************************************************************ -->
    <section><info><title>The Guided Tour as Plugin</title></info><!-- The Guided Tours as Plugin  -->
        
        <para>
            The aim of the guided tour is to provide a step by step
            explanation to the ProActive beginners.
        </para>
        <figure><info><title>The plugin's interface</title></info>
            
            <mediaobject>
                <imageobject>
                    <imagedata scalefit="1" width="100%" contentdepth="100%"  fileref="development/plugin_files/guided_tour.jpg" format="JPG"  />
                </imageobject>
            </mediaobject>
        </figure>
        <para>
            This guided tour (that is actually eclipse cheat sheet)
            purposes:
        </para>
        <itemizedlist>
            <listitem>
                <para>To Explain ProActive to beginners</para>
            </listitem>
            <listitem>
                <para>
                    To make interactions with the user with simple
                    situations
                </para>
            </listitem>
            <listitem>
                <para>To Show the important points</para>
            </listitem>
        </itemizedlist>
    </section>
</chapter>
