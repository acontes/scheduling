package org.objectweb.proactive.examples.userguide.cmagent.initialized;

import org.objectweb.proactive.Body;
import org.objectweb.proactive.EndActive;
import org.objectweb.proactive.InitActive;
import org.objectweb.proactive.RunActive;
import org.objectweb.proactive.Service;
import org.objectweb.proactive.core.util.wrapper.LongWrapper;
import org.objectweb.proactive.examples.userguide.cmagent.simple.CMAgent;


public class CMAgentInitialized extends CMAgent implements InitActive, RunActive, EndActive {

    public void initActivity(Body body) {
    	//TODO 1. Print start information
    	//TODO 2. Record start time 
    }

    public void runActivity(Body body) {
    	Service service = new Service(body);
    	while(body.isAlive()){
    	//process requests while the body of the active object is alive
	    	//TODO 3. Wait for a request
	    	//TODO 4. Record time
	    	//TODO 5. Serve request
	    	//TODO 6. Calculate request duration
	    	//TODO 7. Increment the number of requests served
    	}
    }

    public void endActivity(Body body) {
    	//TODO 8. Calculate the running time of the active object using the start time recorded in initActivity()    	
    	//TODO 9. Print various stop information
    }

    public LongWrapper getLastRequestServeTime() {
        //TODO 10. Use wrappers for primitive types so the calls are asynchronous
        return null;
    }

}