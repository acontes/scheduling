package org.objectweb.proactive.examples.pi;

import org.objectweb.proactive.PADeployment;
import org.objectweb.proactive.core.descriptor.data.ProActiveDescriptor;
import org.objectweb.proactive.core.descriptor.data.VirtualNode;
import org.objectweb.proactive.core.group.PAGroup;
import org.objectweb.proactive.core.node.Node;

public class MyPi {

  public static void main(String args[]) throws Exception{

    Integer numberOfDecimals =  new Integer(args[0]);
    String descriptorPath = args[1];
    
    ProActiveDescriptor descriptor = ProActive.PADeployment(descriptorPath); 
    descriptor.activateMappings();
    VirtualNode virtualNode = descriptor.getVirtualNode("computers-vn");
    Node[] nodes = virtualNode.getNodes();
    
    PiComputer piComputer = (PiComputer) PAGroup.newGroupInParallel(
                            PiComputer.class.getName(),
                            new Object[] { numberOfDecimals },
                            nodes);
    
    int numberOfWorkers = PAGroup.getGroup(piComputer).size();
    
    Interval intervals = PiUtil.dividePI(numberOfWorkers, numberOfDecimals.intValue());
    PAGroup.setScatterGroup(intervals);

    Result results = piComputer.compute(intervals);

    Result result= PiUtil.conquerPI(results);
    System.out.println("Pi:"+result);
    
    descriptor.killall(true);
    System.exit(0);
  }
}