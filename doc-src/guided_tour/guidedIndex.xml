<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="guidedIndex"><info><title>Introduction To The Guided Tour and Tutorial</title></info>
  

  <section xml:id="guidedOverview"><info><title>Overview</title></info>
    

    <para>This tour is a practical introduction to ProActive, giving an
    illustrated introduction to some of the functionality and facilities
    offered by the library, by means of a step-by-step
    tutorial.</para>
   
        <para>We will introduce several features of the library through 
        examples, in <xref linkend="capabilities-intro"/>.  If  after 
        reading the chapter you need further details on how the examples work, visit the
    	ProActive <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://proactive.inria.fr/applications.htm">  applications </link>
        page.</para>
        
        <para>
     
        <xref linkend="hands_on_programming_CMA"/> will give you practical
        experience on how to program using ProActive by showing how to write your own client-server
         monitoring agent  with
        active objects. The chapter will show different basic features of
        ProActive through examples that increase in complexity. 
        
        </para>
	
		<para>The second part of the tutorial will show how to 
		program using the ProActive high level APIs. It will
		introduce the MasterWorker API, programming with components
		and the ProActive Scheduler.  </para>
  </section>

  <section xml:id="guidedInstallation"><info><title>Installation and setup</title></info>
    

    <para>To get started follow the instructions for downloading and installing ProActive, in
    <xref linkend="Installation"/>.</para>

    <para>The example  applications in <xref linkend="capabilities-intro"/> part can 
    be run by going to <literal>ProActive/scripts/unix/</literal> or
    <literal>ProActive\scripts\windows</literal>and starting the coresponding script.
    You do not need to set up any enviroment variables as these are set up automatically by the
    scripts. The scripts are platform dependant: use the <literal>.sh</literal> files
        on Linux and the <literal>.bat</literal> files on
        Windows.</para>

     <para>For the programming examples you will need to use a policy file, such as <literal>
        ProActive/scripts/proactive.security.policy</literal>, with the JVM option
        <literal> -Djava.security.policy=/filelocation/proactive.java.policy. </literal>
        You will also need a log4j configuration file. An example file you can use is
        <literal>ProActive/compile/proactive-log4j</literal>.
        The JVM option for the log4j configuration file is
        <literal> -Dlog4j.configuration=file:/filelocation/proactive-log4j</literal></para>

  </section>
  <section><info><title>ProActive and IDEs (Eclipse, ...)</title></info>
    

    <para>We recommend you use the Eclipse IDE to develop your ProActive
    applications. You can get this tool on the <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.eclipse.org">Eclipse website</link>. Just unzip and launch
    the eclipse executable. In order to develop your own ProActive
    application, you will need to create an Eclipse project :</para>

    <para><emphasis role="bold">File -&gt; New ... -&gt;
    Project</emphasis></para>

    <para>Then choose <emphasis role="bold">Java Project</emphasis>. A wizard
    will appear and ask you to enter the project name :</para>

    <informalfigure>
      <mediaobject>
        <imageobject>
          <imagedata scalefit="1" width="100%" contentdepth="100%"   fileref="./eclipse_files/wizard_new_project.jpg" format="JPG"/>
        </imageobject>
      </mediaobject>
    </informalfigure>

    <para>In order to separate class files from source files (it can be useful
    if you write scripts which refer to these classes), you can check the
    <emphasis role="bold">Create separate source and ouput folders</emphasis>
    in the <emphasis role="bold">Project Layout</emphasis> Frame, and click on
    <emphasis role="bold">Configure Default ...</emphasis> to choose the
    folders names. Once you have choosen all informations about <emphasis role="bold">Project Name</emphasis> , <emphasis role="bold">Project
    location</emphasis> , you can click on <emphasis role="bold">Next</emphasis> .</para>

    <para>You have to specify some Java settings in order to set the
    application classpath. Select the <emphasis role="bold">Libraries</emphasis> tab and click on the <emphasis role="bold">Add External Jar...</emphasis> button. Add the ProActive.jar
    and the librairies contained in the ProActive/dist/lib/ directory of the ProActive
    distribution.</para>

    <para>The <emphasis role="bold">Librairies</emphasis> tab should look like
    this :</para>

    <informalfigure>
      <mediaobject>
        <imageobject>
          <imagedata scalefit="1" width="100%" contentdepth="100%"   fileref="./eclipse_files/wizard_java_settings.jpg" format="JPG"/>
        </imageobject>
      </mediaobject>
    </informalfigure>

    <para>You can see now on the navigator tab on the left side, that there is
    a new Project with the source and output folders you've just created
    :</para>

    <informalfigure>
      <mediaobject>
        <imageobject>
          <imagedata scalefit="1" width="100%" contentdepth="100%"   fileref="./eclipse_files/navigator.jpg" format="JPG"/>
        </imageobject>
      </mediaobject>
    </informalfigure>

    <para>You are now able to create classes and packages that use the
    ProActive library.</para>

    <para>All is now configured to create your ProActive application. Click on
    the <emphasis role="bold">Finish</emphasis> button.</para>

    <para>We have developed an Eclipse application that will help
    developers to easily monitor ProActive applications. Have a look at the
    documentation page, <xref linkend="IC2D_EclipsePlugin"/>.</para>
  </section>
</chapter>
