. dev/release/common

function build() {
	# Replace version tag in main java file
	sed -i "s/{srm-version-main}/$VERSION/" src/common/org/ow2/proactive/Main.java
	sed -i "s/{scheduler-version-main}/$VERSION/" src/scheduler/src/org/ow2/proactive/scheduler/common/Main.java
	sed -i "s/{rm-version-main}/$VERSION/" src/resource-manager/src/org/ow2/proactive/resourcemanager/common/Main.java

	echo "********************** Building the scheduler ************************"
	cd compile || warn_and_exit "Cannot move in compile"
	./build clean
	./build -Dversion="${VERSION}" deploy.all
	./build -Dversion="${VERSION}" doc.Scheduler.manualPdf
	./build -Dversion="${VERSION}" doc.rm.manualPdf
	./build -Dversion="${VERSION}" doc.MapReduce.manualPdf

	generate_credential
}

function del_client(){
	rm -rf compile lib rm-rcp scheduler-rcp scripts src
	rm -rf doc/src doc/toolchain
	rm -rf doc/built/Resourcing
	rm -rf samples/scripts/deployment
	rm RM-README.txt
	rm bin/**/rm* bin/**/*start*
	rm -rf config/authentication/*.cfg config/authentication/jaas.config config/authentication/keys
	rm config/log4j/log4j-defaultNode config/log4j/*server
	rm -rf config/rm config/scheduler
	rm config/security.java.policy-server
	rm dist/lib/*ResourceManager* dist/lib/ProActive_Scheduler-fsm.jar
	rm dist/lib/derby* dist/lib/hibernate-core.jar dist/lib/mysql-connector-java-5.1.16-bin.jar dist/lib/virtual* dist/lib/j-interop*.jar dist/lib/xenserver-5.0.0-3.jar
}

function del_matsci() {
	rm -rf extensions/matlab extensions/scilab
	rm -rf samples/jobs_descriptors/job_scilab
	rm samples/scripts/selection/*lab.xml
	rm dist/lib/*matlab* dist/lib/*scilab* dist/lib/ProActive_LicenseSaver*.jar
	rm dist/lib/ProActive_Scheduler-matsci.jar
}

function del_mapreduce() {
	rm -rf extensions/mapreduce
	rm -rf samples/jobs_descriptors/Workflow/mapreduce
	rm -rf doc/built/MapReduce
	rm dist/lib/hadoop*
	rm dist/lib/ProActive_Scheduler-mapreduce.jar
}





init_env ProActiveScheduling $*

###### make scheduling releases ########
RELEASE_SRC=src
RELEASE_SERVER=server
RELEASE_WORKER=worker
RELEASE_CLIENT_API=client-API
RELEASE_CLIENT_API_FULL=client-API-full
RELEASE_CLIENT_API_MATSCI=client-API-matlab-scilab
RELEASE_CLIENT_API_MAPREDUCE=client-API-mapreduce

for p in {"$RELEASE_SRC","$RELEASE_SERVER","$RELEASE_WORKER","$RELEASE_CLIENT_API","$RELEASE_CLIENT_API_FULL","$RELEASE_CLIENT_API_MATSCI","$RELEASE_CLIENT_API_MAPREDUCE"}
do
	SERVER_NAME=$p # $SERVER_NAME is the variable used in release functions to built the archive name
	
	
	#special name for src release
	if [ "$SERVER_NAME" == "$RELEASE_SRC" ]
	then
		RELEASE_BASENAME_BEFORE=$RELEASE_BASENAME
		RELEASE_BASENAME=ProActiveSchedulingResourcing
	fi
	
	
	copy_to_tmp
	build_and_clean
	
	cd ${TMP_DIR}
	
	####### src #######
	if [ "$SERVER_NAME" == "$RELEASE_SRC" ]
	then
		del_dist
	fi
	
	
	####### server #######
	if [ "$SERVER_NAME" == "$RELEASE_SERVER" ]
	then
		del_src
	fi
	
	
	####### worker #######
	if [ "$SERVER_NAME" == "$RELEASE_WORKER" ]
	then
		del_src
		rm -rf samples
		rm -rf extensions
		rm -rf doc
		rm RM-README.txt
		rm bin/**/pa-dataserver* bin/**/rm-client* bin/**/rm-start-clean* bin/**/start* bin/unix/rm-start bin/windows/rm-start.bat bin/**/scheduler* bin/**/create-cred* bin/**/key-gen*
		rm -rf config/authentication/*.cfg config/authentication/jaas.config config/authentication/keys
		rm config/log4j/*server config/log4j/*client
		rm -rf config/rm config/scheduler
		rm config/security.java.policy-server
		del_matsci
		del_mapreduce
	fi
	
	
	####### client API (minimal) #######
	if [ "$SERVER_NAME" == "$RELEASE_CLIENT_API" ]
	then
		del_client
		del_matsci
		del_mapreduce
	fi
	
	
	####### client API (full) #######
	if [ "$SERVER_NAME" == "$RELEASE_CLIENT_API_FULL" ]
	then
		del_client
	fi
	
	
	####### client API (matsci) #######
	if [ "$SERVER_NAME" == "$RELEASE_CLIENT_API_MATSCI" ]
	then
		del_client
		del_mapreduce
	fi
	
	
	####### client API (mapreduce) #######
	if [ "$SERVER_NAME" == "$RELEASE_CLIENT_API_MAPREDUCE" ]
	then
		del_client
		del_matsci
	fi
	
	
	replace_version
	build_archive
	
	
	
	#back to previous release basename for src release
	if [ "$SERVER_NAME" == "$RELEASE_SRC" ]
	then
		RELEASE_BASENAME=$RELEASE_BASENAME_BEFORE
	fi
	
	
	
done
