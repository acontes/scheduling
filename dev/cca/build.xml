<?xml version="1.0" encoding="UTF-8"?>
<project name="gcm-cca-wrappers" default="build" basedir=".">
    <property name="proactive.location" value="${basedir}/../.."/>
	<property name="log.dir" value="${basedir}"/>
	<property name="services.dir" value="${basedir}/lib/h2o/services"/>
    <path id="project.classpath">
        <pathelement location="classes"/>
        <pathelement location="lib/h2o/services/mocca/mocca_light.jar"/>
    	<pathelement location="lib/h2o/lib/h2o-client.jar"/>
    	<pathelement location="lib/h2o/h2o-test/h2o-test.jar"/>
        <pathelement location="${proactive.location}/lib/components/asm-2.2.1.jar"/>
        <pathelement location="${proactive.location}/lib/components/dtdparser.jar"/>
        <pathelement location="${proactive.location}/lib/components/fractal-adl.jar"/>
        <pathelement location="${proactive.location}/lib/components/fractal.jar"/>
        <pathelement location="${proactive.location}/lib/bouncycastle.jar"/>
        <pathelement location="${proactive.location}/lib/javassist.jar"/>
        <pathelement location="${proactive.location}/lib/ganymed-ssh2-build210.jar"/>
        <pathelement location="${proactive.location}/lib/log4j.jar"/>
        <pathelement location="${proactive.location}/lib/xercesImpl.jar"/>
        <pathelement location="${proactive.location}/classes"/>
    	<pathelement location="lib/dom4j-1.6.jar"/>
		<pathelement location="lib/junit-addons-1.4.jar"/>
		<pathelement location="lib/junit.jar"/>
    	    	
    </path>
    <target name="init">
        <mkdir dir="classes"/>
    	<mkdir dir="${services.dir}/gcmcca"/>
    </target>
    <target name="clean">
        <delete dir="classes"/>
    	<delete dir="${services.dir}/gcmcca"/>
    </target>
	
    <target name="build" depends="init">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac destdir="classes">
            <src path="src"/>
            <exclude name="ProAct/"/>
            <exclude name="proactive/"/>
            <classpath refid="project.classpath"/>
        </javac>
    </target>
	
	<target name="help">
		<echo message="Please run: $ ant -v -projecthelp" />
	</target>

	<target name="resource">
		<copy todir="classes">
			<fileset dir="src">
				<include name="**/*.xml"/>
				<include name="**/*.ks"/>
				<include name="**/*.gif"/>
				<include name="**/*.png"/>
				<include name="**/*.jpg"/>
				<include name="**/*.properties"/>
			</fileset>
		</copy>
	</target>
	
	<target depends="build,resource" name="archive">
		<jar compress="true" destfile="${services.dir}/gcmcca/starter-component.jar">
			<fileset dir="classes">
				<include name="**/CCAStarterComponent.class" />
				<include name="**/HelloPort.class" />
			</fileset>
		</jar>
		<jar compress="true" destfile="${services.dir}/gcmcca/hello-component.jar">
			<fileset dir="classes">
				<include name="**/CCAHelloComponent.class" />
				<include name="**/HelloPort.class" />
			</fileset>
		</jar>
		<jar compress="true" destfile="${services.dir}/gcmcca/glue-component.jar">
			<fileset dir="classes">
				<include name="**/HelloPortCCAGlueComponent.class" />
				<include name="**/HelloPortCCAFractalGlueComponent.class" />
				<include name="**/HelloPort.class" />
				<include name="**/GlueControlPort.class" />
			</fileset>
			<manifest>
				<attribute name="Class-Path" value="${proactive.location}/dist/lib/ProActive.jar
					${proactive.location}/lib/components/fractal.jar
					${proactive.location}/lib/xercesImpl.jar 
					${proactive.location}/lib/javassist.jar"/>
			</manifest>
		</jar>
		
	</target>
	
    <target name="AdlGenerator">
        <java fork="yes" classname="net.coregrid.gcmcca.wrappers.primitive.AdlGenerator" failonerror="true">
            <classpath refid="project.classpath"/>
        </java>
    </target>
    <target name="RunPrimitiveWrapper" depends="WrapperGenerator">
        <java fork="yes" classname="net.coregrid.gcmcca.run.RunWrapper" failonerror="true">
            <jvmarg value="-Dfractal.provider=org.objectweb.proactive.core.component.Fractive"/>
            <jvmarg value="-Djava.security.policy=${proactive.location}/scripts/proactive.java.policy"/>
            <classpath refid="project.classpath"/>
        </java>
    </target>
    <target name="WrapperGenerator" depends="build">
        <java fork="yes" classname="net.coregrid.gcmcca.wrappers.primitive.WrapperGenerator" failonerror="true">
            <classpath refid="project.classpath"/>
        </java>
    </target>
    <target name="H2O-KERNEL">
        <java fork="yes" classname="edu.emory.mathcs.h2o.server.impl.Main" failonerror="true">
            <jvmarg value="-classpath /home/lib/h2o/h2o-server-startup.jar"/>
            <jvmarg value="-Djava.util.logging.config.file=logging.properties"/>
            <jvmarg value="-Dsun.rmi.server.exceptionTrace=true"/>
            <classpath refid="project.classpath"/>
        </java>
    </target>
    <target name="RunCompositeControllerWrapper" depends="archive">
        <java fork="yes" classname="net.coregrid.gcmcca.run.RunCompositeControllerWrapper" failonerror="true">
            <jvmarg value="-Dfractal.provider=org.objectweb.proactive.core.component.Fractive"/>
            <jvmarg value="-Djava.security.policy=${proactive.location}/scripts/proactive.java.policy"/>
            <classpath refid="project.classpath"/>
        </java>
    </target>
	
	<target name="runTest" depends="archive">
		<junit fork="yes" printsummary="withOutAndErr" haltonfailure="true" 
			haltonerror="true" showoutput="on" filtertrace="off" 
			failureproperty="test.failure" dir="${basedir}" >
			
			<jvmarg value="-Dh2otest.class=${h2otest.class}"/>
			<jvmarg value="-Dh2otest.kernels=${h2otest.kernels}"/>
			<jvmarg value="-Dstartup.file=${startup.file}"/>
			<jvmarg value="-Dconfig.properties=${config.properties}"/>
			<jvmarg value="-Dfractal.provider=org.objectweb.proactive.core.component.Fractive"/>
			<jvmarg value="-Djava.security.manager"/>
			<jvmarg value="-Djava.security.policy=${proactive.location}/scripts/proactive.java.policy"/>
			<jvmarg value="-Djava.util.logging.config.file=logging.properties"/>
			<jvmarg value="-Dlog4j.configuration=file:proactive-log4j"/>
			
			<classpath refid="project.classpath"/>
			<formatter type="xml"/>
			<test name="h2otest.setup.H2OSuiteRunner" todir="${log.dir}" outfile="${h2otest.class}"/>
		</junit>
		<fail message="Test failed" if="test.failure"/>
	</target>

	<target name="runBasicTests">
		<antcall target="runTest">
			<param name="h2otest.class" value="net.coregrid.gcmcca.test.MoccaProactiveTestSuite"/>
			<param name="startup.file" value="${basedir}/config/test/startup.file"/>
			<param name="config.properties" value="${basedir}/config/test/config.properties"/>
		</antcall>
	</target>
</project>
